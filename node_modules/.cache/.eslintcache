[{"/home/andrews_souza/Projects/vet-app/src/index.js":"1","/home/andrews_souza/Projects/vet-app/src/App.js":"2","/home/andrews_souza/Projects/vet-app/src/redux/reducers/index.js":"3","/home/andrews_souza/Projects/vet-app/src/Router.js":"4","/home/andrews_souza/Projects/vet-app/src/redux/reducers/animals.js":"5","/home/andrews_souza/Projects/vet-app/src/redux/reducers/user.js":"6","/home/andrews_souza/Projects/vet-app/src/redux/reducers/pessoa.js":"7","/home/andrews_souza/Projects/vet-app/src/pages/pets/pets.adicionar.js":"8","/home/andrews_souza/Projects/vet-app/src/pages/pets/index.js":"9","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/index.js":"10","/home/andrews_souza/Projects/vet-app/src/pages/singin/index.js":"11","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/index.js":"12","/home/andrews_souza/Projects/vet-app/src/pages/usuarios/index.js":"13","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/index.js":"14","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/index.js":"15","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/index.js":"16","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/dados/index.js":"17","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/index.js":"18","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/index.js":"19","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/index.js":"20","/home/andrews_souza/Projects/vet-app/src/components/menu.js":"21","/home/andrews_souza/Projects/vet-app/src/redux/constants/index.js":"22","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/chart.js":"23","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/orders.js":"24","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/cardAnimal.js":"25","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/deposits.js":"26","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/vacinasTable.js":"27","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/EditVacinas.js":"28","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/adicionarVacinas.js":"29","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/EdittTratamento.js":"30","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/TratamentoTable.js":"31","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/cadastrarTratamento.js":"32","/home/andrews_souza/Projects/vet-app/src/redux/actions/index.js":"33","/home/andrews_souza/Projects/vet-app/src/components/itensMenu.js":"34","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/EditVermifugo.js":"35","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/TableVermifugo.js":"36","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/adicionarVermufugos.js":"37","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/EditMedimento.js":"38","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/tableMedicamento.js":"39","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/dados/EditDados.js":"40","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/adicionarMedicamento.js":"41","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/AdicionarPronturio.js":"42","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/ProtuarioTable.js":"43","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/EditProntuario.js":"44","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/tableAlergia.js":"45","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/editAlergia.js":"46","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/adicionarAlergias.js":"47"},{"size":650,"mtime":1634771399543,"results":"48","hashOfConfig":"49"},{"size":145,"mtime":1634771399539,"results":"50","hashOfConfig":"49"},{"size":203,"mtime":1632685300636,"results":"51","hashOfConfig":"49"},{"size":1920,"mtime":1634771399539,"results":"52","hashOfConfig":"49"},{"size":1039,"mtime":1634771399595,"results":"53","hashOfConfig":"49"},{"size":1300,"mtime":1632688329377,"results":"54","hashOfConfig":"49"},{"size":1120,"mtime":1632685300640,"results":"55","hashOfConfig":"49"},{"size":12297,"mtime":1634771399591,"results":"56","hashOfConfig":"49"},{"size":11572,"mtime":1634789236063,"results":"57","hashOfConfig":"49"},{"size":3030,"mtime":1634781422125,"results":"58","hashOfConfig":"49"},{"size":4643,"mtime":1633393620932,"results":"59","hashOfConfig":"49"},{"size":5048,"mtime":1634777494707,"results":"60","hashOfConfig":"49"},{"size":7136,"mtime":1634771399591,"results":"61","hashOfConfig":"49"},{"size":5073,"mtime":1634771399551,"results":"62","hashOfConfig":"49"},{"size":6142,"mtime":1634778846557,"results":"63","hashOfConfig":"49"},{"size":5107,"mtime":1634771399563,"results":"64","hashOfConfig":"49"},{"size":3970,"mtime":1634771399551,"results":"65","hashOfConfig":"49"},{"size":5071,"mtime":1634771399575,"results":"66","hashOfConfig":"49"},{"size":5095,"mtime":1634771399583,"results":"67","hashOfConfig":"49"},{"size":5098,"mtime":1634771399571,"results":"68","hashOfConfig":"49"},{"size":4576,"mtime":1634771399543,"results":"69","hashOfConfig":"49"},{"size":1569,"mtime":1632761528757,"results":"70","hashOfConfig":"49"},{"size":2187,"mtime":1634787639518,"results":"71","hashOfConfig":"49"},{"size":2273,"mtime":1634781850126,"results":"72","hashOfConfig":"49"},{"size":2158,"mtime":1634778552222,"results":"73","hashOfConfig":"49"},{"size":1262,"mtime":1634782199929,"results":"74","hashOfConfig":"49"},{"size":2581,"mtime":1634780625725,"results":"75","hashOfConfig":"49"},{"size":3702,"mtime":1634778561998,"results":"76","hashOfConfig":"49"},{"size":4182,"mtime":1634771399575,"results":"77","hashOfConfig":"49"},{"size":3752,"mtime":1634771399567,"results":"78","hashOfConfig":"49"},{"size":2588,"mtime":1634771399567,"results":"79","hashOfConfig":"49"},{"size":4207,"mtime":1634771399571,"results":"80","hashOfConfig":"49"},{"size":9790,"mtime":1634778573134,"results":"81","hashOfConfig":"49"},{"size":2160,"mtime":1634771399543,"results":"82","hashOfConfig":"49"},{"size":3743,"mtime":1634771399579,"results":"83","hashOfConfig":"49"},{"size":2591,"mtime":1634778566018,"results":"84","hashOfConfig":"49"},{"size":4203,"mtime":1634771399583,"results":"85","hashOfConfig":"49"},{"size":3773,"mtime":1634771399555,"results":"86","hashOfConfig":"49"},{"size":2601,"mtime":1634778558370,"results":"87","hashOfConfig":"49"},{"size":7303,"mtime":1634610314358,"results":"88","hashOfConfig":"49"},{"size":4217,"mtime":1634771399559,"results":"89","hashOfConfig":"49"},{"size":11331,"mtime":1634779164903,"results":"90","hashOfConfig":"49"},{"size":2654,"mtime":1634779349581,"results":"91","hashOfConfig":"49"},{"size":13491,"mtime":1634771362479,"results":"92","hashOfConfig":"49"},{"size":2587,"mtime":1634778555190,"results":"93","hashOfConfig":"49"},{"size":3720,"mtime":1634771399547,"results":"94","hashOfConfig":"49"},{"size":4188,"mtime":1634771399543,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"1ewsjpn",{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"98"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"98"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"98"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"98"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"98"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"98"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"98"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"98"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"98"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"98"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"98"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"98"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"98"},"/home/andrews_souza/Projects/vet-app/src/index.js",[],["207","208"],"/home/andrews_souza/Projects/vet-app/src/App.js",[],"/home/andrews_souza/Projects/vet-app/src/redux/reducers/index.js",[],"/home/andrews_souza/Projects/vet-app/src/Router.js",[],"/home/andrews_souza/Projects/vet-app/src/redux/reducers/animals.js",[],"/home/andrews_souza/Projects/vet-app/src/redux/reducers/user.js",[],"/home/andrews_souza/Projects/vet-app/src/redux/reducers/pessoa.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/pets/pets.adicionar.js",["209","210"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Menu from '../../components/menu';\nimport InputMask from \"react-input-mask\";\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { creatAnimal } from '../../redux/actions';\n\nconst caes = ['Pastor-Alemão', 'Labrador', 'Zwergspitz', 'Husky', 'Golden', 'Buldogue', 'Poodle', 'Pit-Bull', 'Chihuahua', 'Shiba Inu', 'Rottweiler', 'Bobermann', 'Pug', 'Dachshulund'];\nconst gatos = ['Persa', ' Maine Coon', 'Siamês', 'Gato Inglês', 'Ragdoll', 'Munchkin', 'Norueguês', 'Siberiano'];\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        padding: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column'\n    },\n    fixedHeight: {\n        height: 350,\n    },\n    Button: {\n        marginBottom: 'auto'\n    },\n    pets: {\n        marginLeft: '10px'\n    }\n}));\n\nconst AdicionarAnimals = ({ creatAnimal }) => {\n\n    const [values, setValues] = useState();\n    const [created, setCreated] = useState(false);\n    const history = useHistory();\n\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    const [especie, setEspecie] = useState(null);\n\n    const selectEspecie = (ev) => {\n        const selected = ev.target.value\n        setEspecie(selected)\n    };\n\n    const onSubmit = async (ev) => {\n        ev.preventDefault();\n        creatAnimal(values)\n        setCreated(true)\n    };\n    const onChange = (ev) => {\n        const { name, value } = ev.target;\n        setValues({ ...values, [name]: value });\n       \n    }\n    const callTowFunction = (ev) =>{\n        onChange(ev)\n        selectEspecie(ev)\n    }\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Menu msg=\"Pets\" />\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <h1>\n                        Cadastrar Pet\n                    </h1>\n                    <form onSubmit={onSubmit}>\n                        <Grid item sm={10}>\n                            <Paper className={fixedHeightPaper}>\n                                <Grid container spacing={4}>\n                                    <Grid item xs={12} >\n                                        <TextField\n                                            required\n                                            id=\"nome\"\n                                            name=\"nome\"\n                                            label=\"Nome\"\n                                            fullWidth\n                                            onChange={onChange}\n                                            autoComplete=\"shipping address-line1\"\n                                        />\n                                    </Grid>\n                                </Grid>\n\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12} sm={6}>\n                                        <InputMask\n                                            mask=\"999.999.999-99\"\n                                            maskChar=\" \"\n                                            onChange={onChange}\n                                            id=\"cpf\"\n                                            name=\"cpf\"\n                                        >\n                                            {() => <TextField fullWidth className={classes.inputText} label=\"CPF do Dono\" required name=\"cpf\" />}\n                                        </InputMask>\n                                    </Grid>\n\n                                    <Grid item xs={12} sm={6}>\n                                        <FormControl fullWidth className={classes.formControl} >\n                                            <InputLabel item >Espécie</InputLabel>\n                                            <Select\n                                                name=\"especie\"\n                                                onChange={callTowFunction}\n                                                native\n                                            >\n\n                                                <option aria-label=\"None\" value=\"\" />\n                                                <option value={'Cachorro'}>Cachorro</option>\n                                                <option value={'Gato'}>Gato</option>\n\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n\n                                </Grid>\n\n                                <Grid container spacing={3}>\n\n                                    <Grid item xs={12} sm={6}>\n                                        <FormControl fullWidth className={classes.formControl} >\n                                            <InputLabel item >Raça</InputLabel>\n                                            <Select\n                                                name=\"raca\"\n                                                onChange={onChange}\n                                                native\n                                            >\n                                                <option aria-label=\"None\" value=\"\" />\n                                                {\n                                                    especie && especie === 'Cachorro' ? caes.map(i => <option value={i}>{i}</option>) : ''\n\n                                                }\n                                                {\n                                                    especie && especie === 'Gato' ? gatos.map(i => <option value={i}>{i}</option>) : ''\n\n                                                }\n\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <FormControl fullWidth className={classes.formControl} >\n                                            <InputLabel item >Pelagem</InputLabel>\n                                            <Select\n                                                name=\"pelagem\"\n                                                onChange={onChange}\n                                                native\n                                            >\n                                                <option aria-label=\"None\" value=\"\" />\n                                                <option value='Curto'>Curto</option>\n                                                <option value='Médio'>Médio</option>\n                                                <option value='Alto'>Alto</option>\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n\n\n                                </Grid>\n\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            required\n                                            id=\"idade\"\n                                            name=\"idade\"\n                                            label=\"Idade\"\n                                            type=\"number\"\n                                            onChange={onChange}\n                                            fullWidth\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <FormControl fullWidth className={classes.formControl} >\n                                            <InputLabel item >Sexo</InputLabel>\n                                            <Select\n                                                name='sexo'\n                                                native\n                                                onChange={onChange}\n                                            >\n                                                <option aria-label=\"None\" value=\"\" />\n                                                <option value='Femea'>Femea</option>\n                                                <option value='Macho'>Macho</option>\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n                                </Grid>\n\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            required\n                                            id=\"peso\"\n                                            name=\"peso\"\n                                            label=\"Peso\"\n                                            type=\"number\"\n                                            onChange={onChange}\n                                            fullWidth\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <FormControl fullWidth className={classes.formControl} >\n                                            <InputLabel item >Temperamento</InputLabel>\n                                            <Select\n                                                native\n                                                name='temperamento'\n                                                onChange={onChange}\n                                            >\n                                                <option aria-label=\"None\" value=\"\" />\n                                                <option value='Calmo'>Calmo</option>\n                                                <option value='Bravo'>Bravo</option>\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n                                            Adicionar\n                                        </Button>\n\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </Grid>\n                    </form>\n                </Container>\n            </main>\n            <ToastContainer />\n        </div>\n    );\n};\n\n\n\nconst mapStateToProps = state => ({\n    stateReducer: state.user\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    creatAnimal\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatch)(AdicionarAnimals);","/home/andrews_souza/Projects/vet-app/src/pages/pets/index.js",["211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236"],"/home/andrews_souza/Projects/vet-app/src/pages/dashboard/index.js",["237","238","239","240","241"],"/home/andrews_souza/Projects/vet-app/src/pages/singin/index.js",["242","243"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { userAuthenticate, stateReducer } from '../../redux/actions';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst SignIn = ({userAuthenticate, stateReducer}) => {\n    const classes = useStyles();\n    const initialState = {\n        email: \"\",\n        password: \"\",\n    };\n\n    const { success, loading } = stateReducer;\n    const history = useHistory();\n    const [values, setValues] = useState(initialState);\n\n    const onSubmit = async (ev) => {\n        ev.preventDefault();\n        await userAuthenticate(values)\n    };\n\n    useEffect(() => {\n        if (success) {\n            const timer = setTimeout(() => {\n                history.push('/dashboard')\n            }, 1000);\n            return () => clearTimeout(timer);\n        }\n    }, [success]);\n\n    const onChange = (ev) => {\n        const { name, value } = ev.target;\n        setValues({ ...values, [name]: value });\n    };\n\n    return (\n\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign in\n                    </Typography>\n                    <form className={classes.form} noValidate onSubmit={onSubmit}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                            onChange={onChange}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            onChange={onChange}\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                        <FormControlLabel\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\n                            label=\"Remember me\"\n                        />\n                       \n                            <Button\n\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                type=\"submit\"\n                            >\n                                {loading ? ('loading'): ('SingIn')}\n                            </Button>\n                        \n                    </form>\n                </div>\n                <ToastContainer/>\n            </Container>\n            \n       \n    );\n};\n\nconst mapStateToProps = state => ({\n    stateReducer: state.user\n})\n\nconst mapDispatch = dispatch => bindActionCreators({\n    userAuthenticate\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatch)(SignIn);","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/index.js",["244","245","246","247"],"/home/andrews_souza/Projects/vet-app/src/pages/usuarios/index.js",["248","249","250"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Menu from \"../../components/menu\";\nimport InputMask from \"react-input-mask\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { createUser, stateReducer, stateAll } from \"../../redux/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 350,\n  },\n}));\n\nconst CreatedUser = ({ createUser, stateReducer, stateAll }) => {\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const { success, loading } = stateReducer;\n  const [values, setValues] = useState();\n  const history = useHistory();\n\n  const onChange = (ev) => {\n    const { name, value } = ev.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const onSubmit = async (ev) => {\n    ev.preventDefault();\n    createUser(values);\n    \n    if (success) {\n      const timer = setTimeout(() => {\n        history.push(\"/dashboard\");\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  };\n\n\n\n  return (\n    <form onSubmit={onSubmit}>\n      <div className={classes.root}>\n        <CssBaseline />\n        <Menu msg=\"Usuarios\" />\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <Grid item sm={10}>\n              <Paper className={fixedHeightPaper}>\n                <Grid container spacing={4}>\n                  <Grid item xs={12}>\n                    <TextField\n                      required\n                      id=\"nome\"\n                      name=\"nome\"\n                      label=\"Nome\"\n                      fullWidth\n                      autoComplete=\"shipping address-line1\"\n                      onChange={onChange}\n                    />\n                  </Grid>\n                </Grid>\n\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    <InputMask\n                      mask=\"999.999.999-99\"\n                      maskChar=\" \"\n                      onChange={onChange}\n                      id=\"cpf\"\n                      name=\"cpf\"\n                    >\n                      {() => (\n                        <TextField\n                          fullWidth\n                          className={classes.inputText}\n                          label=\"CPF\"\n                          required\n                          name=\"cpf\"\n                        />\n                      )}\n                    </InputMask>\n                  </Grid>\n\n                  <Grid item xs={12} sm={6}>\n                    <InputMask\n                      mask=\"(99) - 9 9999-9999\"\n                      maskChar=\" \"\n                      onChange={onChange}\n                      id=\"celular\"\n                      name=\"telefone\"\n                    >\n                      {() => (\n                        <TextField\n                          fullWidth\n                          className={classes.inputText}\n                          label=\"Celular\"\n                          name=\"telefone\"\n                        />\n                      )}\n                    </InputMask>\n                  </Grid>\n                </Grid>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      required\n                      id=\"crmv\"\n                      name=\"crmv\"\n                      label=\"Crmv\"\n                      fullWidth\n                      onChange={onChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth className={classes.formControl}>\n                      <InputLabel item>Função</InputLabel>\n                      <Select name=\"funcao\" onChange={onChange} native>\n                        <option aria-label=\"None\" value=\"\" />\n                        <option value={\"Administrativo\"}>Administrativo</option>\n                        <option value={\"Médico\"}>Médico</option>\n                        <option value={\"Recepcionista\"}>Recepcionista</option>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      required\n                      type=\"email\"\n                      id=\"email\"\n                      name=\"email\"\n                      label=\"Email\"\n                      fullWidth\n                      autoComplete=\"shipping address-line1\"\n                      onChange={onChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      type=\"password\"\n                      required\n                      id=\"senha\"\n                      name=\"senha\"\n                      label=\"Senha\"\n                      fullWidth\n                      autoComplete=\"shipping address-line1\"\n                      onChange={onChange}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                      {loading ? \"loading\" : \"Salvar\"}\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Paper>\n            </Grid>\n          </Container>\n        </main>\n      </div>\n      <ToastContainer />\n    </form>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  stateReducer: state.user,\n  stateAll: state,\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      createUser,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatch)(CreatedUser);\n","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/index.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/index.js",["251","252"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/index.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/dados/index.js",["253"],"import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Menu from \"../../../components/menu\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport EditDados from \"./EditDados\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 80,\n  },\n  aaa: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: \"18px\",\n  },\n  table: {\n    marginTop: \"10px\",\n    padding: theme.spacing(2),\n    minHeight: 100,\n  },\n  createTratamento: {\n    marginTop: \"40px\",\n  },\n}));\n\nconst Prontuario = () => {\n  const history = useHistory();\n  const { id } = useParams();\n\n  const onClick = (ev) => {\n    const types = ev.target.innerText;\n    switch (types) {\n      case \"PRONTUARIO\": {\n        return history.push(`/pets/prontuario/${id}`);\n      }\n\n      case \"TRATAMENTOS\": {\n        return history.push(`/pets/tratamentos/${id}`);\n      }\n\n      case \"ALERGIAS\": {\n        return history.push(`/pets/alergias/${id}`);\n      }\n\n      case \"MEDICAMENTO\": {\n        return history.push(`/pets/medicamentos/${id}`);\n      }\n\n      case \"VACINAS\": {\n        return history.push(`/pets/vacinas/${id}`);\n      }\n\n      case \"VERMIFUGO\": {\n        return history.push(`/pets/vermifugos/${id}`);\n      }\n\n      case \"DADOS\": {\n        return history.push(`/pets/dados/${id}`);\n      }\n\n      default:\n        return history.push(\"/dashboard\");\n    }\n  };\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  \n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Menu msg=\"Vermifugos\" />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid item sm={12}>\n            <Paper className={fixedHeightPaper}>\n              <Grid container spacing={3} className={classes.aaa}>\n                <Button variant=\"outlined\" onClick={onClick}>\n                  Prontuario\n                </Button>\n                <Button variant=\"outlined\" onClick={onClick}>\n                  Tratamentos\n                </Button>\n                <Button variant=\"outlined\" onClick={onClick}>\n                  Alergias\n                </Button>\n                <Button variant=\"outlined\" onClick={onClick}>\n                  Medicamento\n                </Button>\n                <Button variant=\"outlined\" onClick={onClick}>\n                  Vacinas\n                </Button>\n                <Button variant=\"outlined\" onClick={onClick}>\n                  Vermifugo\n                </Button>\n                <Button variant=\"contained\" onClick={onClick}>\n                  Dados\n                </Button>\n              </Grid>\n            </Paper>\n           \n              <Paper className={classes.table}>\n                <EditDados  data={id}/>\n              </Paper>\n            \n          </Grid>\n\n          <Box pt={4}>{/* <Footer /> */}</Box>\n        </Container>\n      </main>\n    </div>\n  );\n};\n\nexport default Prontuario;\n","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/index.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/index.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/index.js",[],"/home/andrews_souza/Projects/vet-app/src/components/menu.js",[],"/home/andrews_souza/Projects/vet-app/src/redux/constants/index.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/dashboard/chart.js",["254","255","256","257","258"],"/home/andrews_souza/Projects/vet-app/src/pages/dashboard/orders.js",["259","260","261","262"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/cardAnimal.js",["263","264","265"],"/home/andrews_souza/Projects/vet-app/src/pages/dashboard/deposits.js",["266","267","268","269","270","271","272"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/vacinasTable.js",["273","274","275","276","277","278"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/EditVacinas.js",["279"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/adicionarVacinas.js",["280"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport { createVacinas } from '../../../redux/actions'\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    table: {\n        marginTop: '80px',\n        padding: theme.spacing(2),\n        minHeight: 100\n    },\n    divider: {\n        border: 'solid 1px',\n        marginTop: '10px'\n    },\n    salvar: {\n        margin: '10px'\n    },\n    grids:{\n        paddingTop: '10px'\n    }\n}));\n\nconst AdicionarTratamento = ({ createVacinas, userReducer }) => {\n\n\n    const { id } = useParams();\n    const veterinario = userReducer.user.nome\n    const history = useHistory();\n    \n    const [values, setValues] = useState({\n        idAnimal: id,\n        veterinario,\n        data: Date.now()\n    })\n\n    const onChange = (ev) => {\n        const { name, value } = ev.target;\n        setValues({ ...values, [name]: value });\n    };\n\n    const onSubmit = async (ev) => {\n        ev.preventDefault();\n        createVacinas(values)\n\n        const timer = setTimeout(() => {\n            history.push('/dashboard')\n        }, 1000);\n        return () => clearTimeout(timer);\n    };\n\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n\n        <Paper className={classes.table} >\n\n           \n            <form onSubmit={onSubmit}>\n            <h1>Vacinas</h1>\n            <Divider className={classes.divider} />\n                <Grid item sm={12} className={classes.grids}>\n                    <Grid container spacing={6}>\n\n                        <Grid item xs={12} sm={12} >\n                            <TextField\n                                required\n                                id=\"Tratramento\"\n                                name=\"vacina\"\n                                label=\"Vacina\"\n                                type=\"text\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={12} >\n                            <TextField\n                                required\n                                id=\"descricao\"\n                                name=\"descricao\"\n                                label=\"Descrição\"\n                                type=\"text\"\n                                multiline\n                                rows={5}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n         \n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Button variant=\"contained\" type=\"submit\" color=\"primary\" className={classes.salvar}>\n                        Salvar\n                    </Button>\n                </Grid>\n            </form>\n            <ToastContainer/>\n        </Paper>\n\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    createVacinas\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(AdicionarTratamento)","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/EdittTratamento.js",["281"],"import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { updatedTratamento } from \"../../../redux/actions\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  table: {\n    marginTop: \"80px\",\n    padding: theme.spacing(2),\n    minHeight: 100,\n  },\n  divider: {\n    border: \"solid 1px\",\n    marginTop: \"10px\",\n  },\n  salvar: {\n    margin: \"10px\",\n  },\n  grids: {\n    paddingTop: \"10px\",\n  },\n}));\n\nconst EditProntuario = ({ updatedTratamento, userReducer, data }) => {\n\n  const { id } = useParams();\n  const veterinario = userReducer.user.nome;\n  const [descricao, setDescricao] = useState(data.descricao || \"\");\n  const [tratamento, setTratamento] = useState(data.tratamento || \"\");\n\n  const history = useHistory();\n\n  const onSubmit = async (ev) => {\n    ev.preventDefault();\n    updatedTratamento({\n      descricao,\n      tratamento,\n      idAnimal: id,\n      veterinario,\n      data: Date.now(),\n      idDoTratamento: data._id,\n    });\n\n    const timer = setTimeout(() => {\n      history.push(\"/dashboard\");\n    }, 1000);\n    return () => clearTimeout(timer);\n  };\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Paper className={classes.table}>\n      <form onSubmit={onSubmit}>\n        <h1>Tratamentos</h1>\n        <Divider className={classes.divider} />\n        <Grid item sm={12} className={classes.grids}>\n          <Grid container spacing={6}>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"Tratramento\"\n                name=\"tratamento\"\n                label=\"Tratramento\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                value={tratamento}\n                onChange={e => setTratamento(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"descricao\"\n                label=\"Descrição\"\n                type=\"text\"\n                value={descricao}\n                multiline\n                rows={5}\n                variant=\"outlined\"\n                fullWidth\n                onChange={e => setDescricao(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            className={classes.salvar}\n          >\n            Atualizar\n          </Button>\n        </Grid>\n      </form>\n      <ToastContainer />\n    </Paper>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  animalReducer: state.animals,\n  userReducer: state.user,\n  stateAll: state,\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      updatedTratamento,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatch)(EditProntuario);\n","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/TratamentoTable.js",["282","283","284","285","286","287"],"import React, {useEffect, useState} from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Visibility from '@material-ui/icons/Visibility'\nimport Button from '@material-ui/core/Button';\nimport { fetchAnimals } from '../../../redux/actions'\nimport { useHistory } from 'react-router-dom';\nimport NoteAdd from '@material-ui/icons/NoteAdd';\n\nconst useStyles = makeStyles((theme) => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst ProntuarioTable = ({ fetchAnimals, data, animalReducer, viewTratamento }) => {\n    \n    useEffect(async()=>{\n        await fetchAnimals()\n    },[])\n    const history = useHistory()\n    const animal = animalReducer.animals\n    const redenrTable = animal.filter(el => el._id === data)\n    const classes = useStyles();\n    const showView = e => {\n        viewTratamento(e)\n    } \n    return (\n        <>\n            \n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Data</TableCell>\n                        <TableCell>Tratamento</TableCell>\n                        <TableCell>Veterinário</TableCell>\n                        <TableCell></TableCell>\n                        \n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {redenrTable[0].tratamentos.map((row) => (\n                        <TableRow key={row._id}>\n                            <TableCell>{row.data}</TableCell>\n                            <TableCell>{row.tratamento}</TableCell>\n                            <TableCell>{row.veterinario}</TableCell>\n                            <TableCell>\n                               <Button onClick={()=> showView(row)} > <Visibility /> </Button>\n                            </TableCell>\n                            \n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            \n        </>\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    fetchAnimals\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(ProntuarioTable)","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/cadastrarTratamento.js",["288"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport { createTratamento } from '../../../redux/actions'\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    table: {\n        marginTop: '80px',\n        padding: theme.spacing(2),\n        minHeight: 100\n    },\n    divider: {\n        border: 'solid 1px',\n        marginTop: '10px'\n    },\n    salvar: {\n        margin: '10px'\n    },\n    grids:{\n        paddingTop: '10px'\n    }\n}));\n\nconst AdicionarTratamento = ({ createTratamento, userReducer }) => {\n\n\n    const { id } = useParams();\n    const veterinario = userReducer.user.nome\n    const history = useHistory();\n    \n    const [values, setValues] = useState({\n        idAnimal: id,\n        veterinario,\n        data: Date.now()\n    })\n\n    const onChange = (ev) => {\n        const { name, value } = ev.target;\n        setValues({ ...values, [name]: value });\n    };\n\n    const onSubmit = async (ev) => {\n        ev.preventDefault();\n        createTratamento(values)\n\n        const timer = setTimeout(() => {\n            history.push('/dashboard')\n        }, 1000);\n        return () => clearTimeout(timer);\n    };\n\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n\n        <Paper className={classes.table} >\n\n           \n            <form onSubmit={onSubmit}>\n            <h1>Tratamentos</h1>\n            <Divider className={classes.divider} />\n                <Grid item sm={12} className={classes.grids}>\n                    <Grid container spacing={6}>\n\n                        <Grid item xs={12} sm={12} >\n                            <TextField\n                                required\n                                id=\"Tratramento\"\n                                name=\"tratamento\"\n                                label=\"Tratramento\"\n                                type=\"text\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={12} >\n                            <TextField\n                                required\n                                id=\"descricao\"\n                                name=\"descricao\"\n                                label=\"Descrição\"\n                                type=\"text\"\n                                multiline\n                                rows={5}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n         \n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Button variant=\"contained\" type=\"submit\" color=\"primary\" className={classes.salvar}>\n                        Salvar\n                    </Button>\n                </Grid>\n            </form>\n            <ToastContainer/>\n        </Paper>\n\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    createTratamento\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(AdicionarTratamento)","/home/andrews_souza/Projects/vet-app/src/redux/actions/index.js",[],"/home/andrews_souza/Projects/vet-app/src/components/itensMenu.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/EditVermifugo.js",["289"],"import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { updatedVermifugos } from \"../../../redux/actions\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  table: {\n    marginTop: \"80px\",\n    padding: theme.spacing(2),\n    minHeight: 100,\n  },\n  divider: {\n    border: \"solid 1px\",\n    marginTop: \"10px\",\n  },\n  salvar: {\n    margin: \"10px\",\n  },\n  grids: {\n    paddingTop: \"10px\",\n  },\n}));\n\nconst EditProntuario = ({ updatedVermifugos, userReducer, data }) => {\n\n  const { id } = useParams();\n  const veterinario = userReducer.user.nome;\n  const [descricao, setDescricao] = useState(data.descricao || \"\");\n  const [vermifugo, setVermifugo] = useState(data.vermifugo || \"\");\n  \n  const history = useHistory();\n\n  const onSubmit = async (ev) => {\n    ev.preventDefault();\n    updatedVermifugos({\n      descricao,\n      vermifugo,\n      idAnimal: id,\n      veterinario,\n      data: Date.now(),\n      idDovermifugo: data._id,\n    });\n\n    const timer = setTimeout(() => {\n      history.push(\"/dashboard\");\n    }, 1000);\n    return () => clearTimeout(timer);\n  };\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Paper className={classes.table}>\n      <form onSubmit={onSubmit}>\n        <h1>Vermifugos</h1>\n        <Divider className={classes.divider} />\n        <Grid item sm={12} className={classes.grids}>\n          <Grid container spacing={6}>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"Tratramento\"\n                name=\"vermifugo\"\n                label=\"Vermifugo\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                value={vermifugo}\n                onChange={e => setVermifugo(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"descricao\"\n                label=\"Descrição\"\n                type=\"text\"\n                value={descricao}\n                multiline\n                rows={5}\n                variant=\"outlined\"\n                fullWidth\n                onChange={e => setDescricao(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            className={classes.salvar}\n          >\n            Atualizar\n          </Button>\n        </Grid>\n      </form>\n      <ToastContainer />\n    </Paper>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  animalReducer: state.animals,\n  userReducer: state.user,\n  stateAll: state,\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      updatedVermifugos,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatch)(EditProntuario);\n","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/TableVermifugo.js",["290","291","292","293","294","295"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/adicionarVermufugos.js",["296"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport { createVermifugos } from '../../../redux/actions'\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    table: {\n        marginTop: '80px',\n        padding: theme.spacing(2),\n        minHeight: 100\n    },\n    divider: {\n        border: 'solid 1px',\n        marginTop: '10px'\n    },\n    salvar: {\n        margin: '10px'\n    },\n    grids:{\n        paddingTop: '10px'\n    }\n}));\n\nconst AdicionarTratamento = ({ createVermifugos, userReducer }) => {\n\n\n    const { id } = useParams();\n    const veterinario = userReducer.user.nome\n    const history = useHistory();\n    \n    const [values, setValues] = useState({\n        idAnimal: id,\n        veterinario,\n        data: Date.now()\n    })\n\n    const onChange = (ev) => {\n        const { name, value } = ev.target;\n        setValues({ ...values, [name]: value });\n    };\n\n    const onSubmit = async (ev) => {\n        ev.preventDefault();\n        createVermifugos(values)\n\n        const timer = setTimeout(() => {\n            history.push('/dashboard')\n        }, 1000);\n        return () => clearTimeout(timer);\n    };\n\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n\n        <Paper className={classes.table} >\n\n           \n            <form onSubmit={onSubmit}>\n            <h1>Vermifugos</h1>\n            <Divider className={classes.divider} />\n                <Grid item sm={12} className={classes.grids}>\n                    <Grid container spacing={6}>\n\n                        <Grid item xs={12} sm={12} >\n                            <TextField\n                                required\n                                id=\"Tratramento\"\n                                name=\"vermifugo\"\n                                label=\"Vermifugo\"\n                                type=\"text\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={12} >\n                            <TextField\n                                required\n                                id=\"descricao\"\n                                name=\"descricao\"\n                                label=\"Descrição\"\n                                type=\"text\"\n                                multiline\n                                rows={5}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n         \n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Button variant=\"contained\" type=\"submit\" color=\"primary\" className={classes.salvar}>\n                        Salvar\n                    </Button>\n                </Grid>\n            </form>\n            <ToastContainer/>\n        </Paper>\n\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    createVermifugos\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(AdicionarTratamento)","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/EditMedimento.js",["297"],"import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { updatedMedicamentos } from \"../../../redux/actions\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  table: {\n    marginTop: \"80px\",\n    padding: theme.spacing(2),\n    minHeight: 100,\n  },\n  divider: {\n    border: \"solid 1px\",\n    marginTop: \"10px\",\n  },\n  salvar: {\n    margin: \"10px\",\n  },\n  grids: {\n    paddingTop: \"10px\",\n  },\n}));\n\nconst EditProntuario = ({ updatedMedicamentos, userReducer, data }) => {\n\n  const { id } = useParams();\n  const veterinario = userReducer.user.nome;\n  const [descricao, setDescricao] = useState(data.descricao || \"\");\n  const [medicamento, setMedicamentos] = useState(data.medicamento || \"\");\n  \n  const history = useHistory();\n\n  const onSubmit = async (ev) => {\n    ev.preventDefault();\n    updatedMedicamentos({\n      descricao,\n      medicamento,\n      idAnimal: id,\n      veterinario,\n      data: Date.now(),\n      idDoMedicamento: data._id,\n    });\n\n    const timer = setTimeout(() => {\n      history.push(\"/dashboard\");\n    }, 1000);\n    return () => clearTimeout(timer);\n  };\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Paper className={classes.table}>\n      <form onSubmit={onSubmit}>\n        <h1>Medicamentos</h1>\n        <Divider className={classes.divider} />\n        <Grid item sm={12} className={classes.grids}>\n          <Grid container spacing={6}>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"Tratramento\"\n                name=\"medicamento\"\n                label=\"Medicamento\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                value={medicamento}\n                onChange={e => setMedicamentos(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"descricao\"\n                label=\"Descrição\"\n                type=\"text\"\n                value={descricao}\n                multiline\n                rows={5}\n                variant=\"outlined\"\n                fullWidth\n                onChange={e => setDescricao(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            className={classes.salvar}\n          >\n            Atualizar\n          </Button>\n        </Grid>\n      </form>\n      <ToastContainer />\n    </Paper>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  animalReducer: state.animals,\n  userReducer: state.user,\n  stateAll: state,\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      updatedMedicamentos,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatch)(EditProntuario);\n","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/tableMedicamento.js",["298","299","300","301","302","303"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/dados/EditDados.js",["304","305","306","307","308","309"],"import React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { updatedVermifugos, fetchAnimals } from \"../../../redux/actions\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  table: {\n    marginTop: \"80px\",\n    padding: theme.spacing(2),\n    minHeight: 100,\n  },\n  divider: {\n    border: \"solid 1px\",\n    marginTop: \"10px\",\n  },\n  salvar: {\n    margin: \"10px\",\n  },\n  grids: {\n    paddingTop: \"10px\",\n  },\n}));\n\nconst EditProntuario = ({\n  updatedVermifugos,\n  userReducer,\n  fetchAnimals,\n  animalReducer,\n}) => {\n  const { id } = useParams();\n  useEffect(async () => {\n    await fetchAnimals();\n  }, []);\n\n  const animal = animalReducer.animals;\n  const redenrTable = animal.filter((el) => el._id === id);\n  const veterinario = userReducer.user.nome;\n\n  const [nome, setNome] = useState(redenrTable[0].nome || \"\");\n  const [especie, setEspecie] = useState(redenrTable[0].especie || \"\");\n  const [raca, setRaca] = useState(redenrTable[0].raca || \"\");\n  const [cpf, setCpf] = useState(redenrTable[0].cpf || \"\");\n  const [idade, setIdade] = useState(redenrTable[0].idade || \"\");\n  const [sexo, setSexo] = useState(redenrTable[0].sexo || \"\");\n  const [pelagem, setPelagem] = useState(redenrTable[0].pelagem || \"\");\n  const [temperamento, setTemperamento] = useState(\n    redenrTable[0].temperamento || \"\"\n  );\n  const [peso, setPeso] = useState(redenrTable[0].peso || \"\");\n    \n \n  const history = useHistory();\n\n  const onSubmit = async (ev) => {\n    ev.preventDefault();\n    updatedVermifugos({\n      \n      idAnimal: id,\n      veterinario,\n      data: Date.now(),\n      idDovermifugo: id._id,\n    });\n\n    const timer = setTimeout(() => {\n      history.push(\"/dashboard\");\n    }, 1000);\n    return () => clearTimeout(timer);\n  };\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Paper className={classes.table}>\n      <form onSubmit={onSubmit}>\n        <h1>Dados</h1>\n        <Divider className={classes.divider} />\n        <Grid item sm={12} className={classes.grids}>\n          <Grid container spacing={6}>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"Tratramento\"\n                name=\"nome\"\n                label=\"Nome\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                value={nome}\n                onChange={(e) => setNome(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"especie\"\n                label=\"Especie\"\n                type=\"text\"\n                value={especie}        \n                variant=\"outlined\"\n                fullWidth\n                onChange={(e) => setEspecie(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"especie\"\n                label=\"Raça\"\n                type=\"text\"\n                value={raca}        \n                variant=\"outlined\"\n                fullWidth\n                onChange={(e) => setRaca(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"especie\"\n                label=\"CPF do Dono\"\n                type=\"text\"\n                value={cpf}        \n                variant=\"outlined\"\n                fullWidth\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"especie\"\n                label=\"Idade\"\n                type=\"text\"\n                value={idade}        \n                variant=\"outlined\"\n                fullWidth\n                onChange={(e) => setIdade(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"especie\"\n                label=\"Sexo\"\n                type=\"text\"\n                value={sexo}        \n                variant=\"outlined\"\n                fullWidth\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"especie\"\n                label=\"Pelagem\"\n                type=\"text\"\n                value={pelagem}        \n                variant=\"outlined\"\n                fullWidth\n                onChange={(e) => setPelagem(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"especie\"\n                label=\"Temperamento\"\n                type=\"text\"\n                value={temperamento}        \n                variant=\"outlined\"\n                fullWidth\n                onChange={(e) => setTemperamento(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"especie\"\n                label=\"Peso\"\n                type=\"text\"\n                value={peso}        \n                variant=\"outlined\"\n                fullWidth\n                onChange={(e) => setPeso(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          \n        </Grid>\n      </form>\n      <ToastContainer />\n    </Paper>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  animalReducer: state.animals,\n  userReducer: state.user,\n  stateAll: state,\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      updatedVermifugos,\n      fetchAnimals,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatch)(EditProntuario);\n","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/adicionarMedicamento.js",["310"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport { createMedicamentos } from '../../../redux/actions'\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    table: {\n        marginTop: '80px',\n        padding: theme.spacing(2),\n        minHeight: 100\n    },\n    divider: {\n        border: 'solid 1px',\n        marginTop: '10px'\n    },\n    salvar: {\n        margin: '10px'\n    },\n    grids:{\n        paddingTop: '10px'\n    }\n}));\n\nconst AdicionarTratamento = ({ createMedicamentos, userReducer }) => {\n\n\n    const { id } = useParams();\n    const veterinario = userReducer.user.nome\n    const history = useHistory();\n    \n    const [values, setValues] = useState({\n        idAnimal: id,\n        veterinario,\n        data: Date.now()\n    })\n\n    const onChange = (ev) => {\n        const { name, value } = ev.target;\n        setValues({ ...values, [name]: value });\n    };\n\n    const onSubmit = async (ev) => {\n        ev.preventDefault();\n        createMedicamentos(values)\n\n        const timer = setTimeout(() => {\n            history.push('/dashboard')\n        }, 1000);\n        return () => clearTimeout(timer);\n    };\n\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n\n        <Paper className={classes.table} >\n\n           \n            <form onSubmit={onSubmit}>\n            <h1>Medicamentos</h1>\n            <Divider className={classes.divider} />\n                <Grid item sm={12} className={classes.grids}>\n                    <Grid container spacing={6}>\n\n                        <Grid item xs={12} sm={12} >\n                            <TextField\n                                required\n                                id=\"medicamento\"\n                                name=\"medicamento\"\n                                label=\"Medicamento\"\n                                type=\"text\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={12} >\n                            <TextField\n                                required\n                                id=\"descricao\"\n                                name=\"descricao\"\n                                label=\"Descrição\"\n                                type=\"text\"\n                                multiline\n                                rows={5}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n         \n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Button variant=\"contained\" type=\"submit\" color=\"primary\" className={classes.salvar}>\n                        Salvar\n                    </Button>\n                </Grid>\n            </form>\n            <ToastContainer/>\n        </Paper>\n\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    createMedicamentos\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(AdicionarTratamento)","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/AdicionarPronturio.js",["311","312"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/ProtuarioTable.js",["313","314","315","316","317"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/EditProntuario.js",["318"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport { updatedProntuario } from '../../../redux/actions'\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    table: {\n        marginTop: '80px',\n        padding: theme.spacing(2),\n        minHeight: 100\n    },\n    divider: {\n        border: 'solid 1px',\n        marginTop: '10px'\n    },\n    salvar: {\n        margin: '10px'\n    },\n    grids: {\n        paddingTop: '10px'\n    }\n}));\n\nconst EditProntuario = ({ updatedProntuario, userReducer, data }) => {\n\n\n    const { id } = useParams();\n    const veterinario = userReducer.user.nome\n\n    const [peso, setPeso] = useState(data.peso || '')\n    const [idade, setIdade] = useState(data.idade || '')\n    const [descricao, setDescricao] = useState(data.descricao || '')\n    const [progresso, setProgresso] = useState(data.progresso || '')\n    const [resultado, setResultado] = useState(data.resultado || '')\n    const [temperatura, setTemperatura] = useState(data.temperatura || '')\n    const [frequenciaCardiaca, setFrequenciaCardiaca] = useState(data.frequenciaCardiaca || '')\n    const [frequenciaRespiratoria, setFrequenciaRespiratoria] = useState(data.frequenciaRespiratoria || '')\n    const [tempoPreenchimentoCapilar, setTempoPreenchimentoCapilar] = useState(data.tempoPreenchimentoCapilar || '')\n    const [mucosas, setMucosas] = useState(data.mucosas || '')\n    const [hidratacao, setHidratacao] = useState(data.hidratacao || '')\n    const [ectoparasitos, setEctoparasitos] = useState(data.ectoparasitos || '')\n    const [exameFisico, setExameFisico] = useState(data.exameFisico || '')\n\n    const history = useHistory();\n\n    \n\n\n    const onSubmit = async (ev) => {\n        ev.preventDefault();\n        updatedProntuario({\n            peso,\n            idade,\n            descricao,\n            progresso,\n            resultado,\n            temperatura,\n            frequenciaCardiaca,\n            frequenciaRespiratoria,\n            tempoPreenchimentoCapilar,\n            mucosas,\n            hidratacao,\n            ectoparasitos,\n            exameFisico,\n            idAnimal: id,\n            veterinario,\n            data: Date.now(),\n            idDoProntuario: data._id\n        })\n\n        const timer = setTimeout(() => {\n            history.push('/dashboard')\n        }, 1000);\n        return () => clearTimeout(timer);\n    };\n\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n\n        <Paper className={classes.table} >\n\n\n            <form onSubmit={onSubmit}>\n                <h1>Análise Geral</h1>\n                <Divider className={classes.divider} />\n                <Grid item sm={12} className={classes.grids}>\n                    <Grid container spacing={6}>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n                                required\n                                id=\"peso\"\n                                name=\"peso\"\n                                label=\"Peso\"\n                                type=\"number\"\n                                value={peso}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setPeso(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n                                required\n                                id=\"idade\"\n                                name=\"idade\"\n                                label=\"Idade\"\n                                type=\"number\"\n                                value={idade}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setIdade(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"descricao\"\n                                name=\"descricao\"\n                                label=\"Descrição\"\n                                type=\"textarea\"\n                                multiline\n                                value={descricao}\n                                rows={3}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setDescricao(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"pregresso\"\n                                name=\"progresso\"\n                                label=\"Pregresso\"\n                                type=\"textarea\"\n                                value={progresso}\n                                multiline\n                                rows={3}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setProgresso(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"resultado\"\n                                name=\"resultado\"\n                                label=\"Resultado\"\n                                type=\"textarea\"\n                                value={resultado}\n                                multiline\n                                rows={3}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setResultado(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <h1>Exame Físico</h1>\n                    <Divider className={classes.divider} />\n                    <Grid container spacing={6} className={classes.grids}>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"temperatura\"\n                                name=\"temperatura\"\n                                label=\"Temperatura Cº\"\n                                type=\"number\"\n                                value={temperatura}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setTemperatura(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"frequencia-respiratoria\"\n                                name=\"frequenciaRespiratoria\"\n                                label=\"Frequencia respiratoria (MPM)\"\n                                type=\"number\"\n                                value={frequenciaRespiratoria}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setFrequenciaRespiratoria(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"frequencia-cardiaca\"\n                                name=\"frequenciaCardiaca\"\n                                label=\"Frequencia Cardiaca (BPM)\"\n                                type=\"number\"\n                                value={frequenciaCardiaca}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setFrequenciaCardiaca(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"tempo-de-preenchimento-capilar\"\n                                name=\"tempoPreenchimentoCapilar\"\n                                label=\"Tempo de preenchimento capilar (S)\"\n                                type=\"number\"\n                                variant=\"outlined\"\n                                fullWidth\n                                value={tempoPreenchimentoCapilar}\n                                onChange={e => setTempoPreenchimentoCapilar(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"mucosas\"\n                                name=\"mucosas\"\n                                label=\"Mucosas\"\n                                value={mucosas}\n                                type=\"text\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setMucosas(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"hidratacao\"\n                                name=\"hidratacao\"\n                                label=\"Hidratação\"\n                                type=\"text\"\n                                value={hidratacao}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setHidratacao(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"ectoparasitos\"\n                                name=\"ectoparasitos\"\n                                label=\"Ectoparasitos\"\n                                type=\"text\"\n                                value={ectoparasitos}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setEctoparasitos(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <h1>Exame Físico Específico</h1>\n                    <Divider className={classes.divider} />\n                    <Grid container spacing={6} className={classes.grids}>\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"exame-ficico\"\n                                name=\"exameFisico\"\n                                label=\"Exame Fífico Específico\"\n                                type=\"textarea\"\n                                multiline\n                                value={exameFisico}\n                                rows={3}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setExameFisico(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Button variant=\"contained\" type=\"submit\" color=\"primary\" className={classes.salvar}>\n                        Atualizar\n                    </Button>\n                </Grid>\n            </form>\n            <ToastContainer />\n        </Paper>\n\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    updatedProntuario\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(EditProntuario)","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/tableAlergia.js",["319","320","321","322","323","324"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/editAlergia.js",["325"],"import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { updatedAlergias } from \"../../../redux/actions\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  table: {\n    marginTop: \"80px\",\n    padding: theme.spacing(2),\n    minHeight: 100,\n  },\n  divider: {\n    border: \"solid 1px\",\n    marginTop: \"10px\",\n  },\n  salvar: {\n    margin: \"10px\",\n  },\n  grids: {\n    paddingTop: \"10px\",\n  },\n}));\n\nconst EditProntuario = ({ updatedAlergias, userReducer, data }) => {\n\n  const { id } = useParams();\n  const veterinario = userReducer.user.nome;\n  const [descricao, setDescricao] = useState(data.descricao || \"\");\n  const [alergias, setAlergias] = useState(data.alergias || \"\");\n\n  const history = useHistory();\n\n  const onSubmit = async (ev) => {\n    ev.preventDefault();\n    updatedAlergias({\n      descricao,\n      alergias,\n      idAnimal: id,\n      veterinario,\n      data: Date.now(),\n      idDaAlergia: data._id,\n    });\n\n    const timer = setTimeout(() => {\n      history.push(\"/dashboard\");\n    }, 1000);\n    return () => clearTimeout(timer);\n  };\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Paper className={classes.table}>\n      <form onSubmit={onSubmit}>\n        <h1>Alergias</h1>\n        <Divider className={classes.divider} />\n        <Grid item sm={12} className={classes.grids}>\n          <Grid container spacing={6}>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"Tratramento\"\n                name=\"alergias\"\n                label=\"Alergia\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                value={alergias}\n                onChange={e => setAlergias(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"descricao\"\n                label=\"Descrição\"\n                type=\"text\"\n                value={descricao}\n                multiline\n                rows={5}\n                variant=\"outlined\"\n                fullWidth\n                onChange={e => setDescricao(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            className={classes.salvar}\n          >\n            Atualizar\n          </Button>\n        </Grid>\n      </form>\n      <ToastContainer />\n    </Paper>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  animalReducer: state.animals,\n  userReducer: state.user,\n  stateAll: state,\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      updatedAlergias,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatch)(EditProntuario);\n","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/adicionarAlergias.js",["326"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport { createAlergias } from '../../../redux/actions'\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    table: {\n        marginTop: '80px',\n        padding: theme.spacing(2),\n        minHeight: 100\n    },\n    divider: {\n        border: 'solid 1px',\n        marginTop: '10px'\n    },\n    salvar: {\n        margin: '10px'\n    },\n    grids:{\n        paddingTop: '10px'\n    }\n}));\n\nconst AdicionarTratamento = ({ createAlergias, userReducer }) => {\n\n\n    const { id } = useParams();\n    const veterinario = userReducer.user.nome\n    const history = useHistory();\n    \n    const [values, setValues] = useState({\n        idAnimal: id,\n        veterinario,\n        data: Date.now()\n    })\n\n    const onChange = (ev) => {\n        const { name, value } = ev.target;\n        setValues({ ...values, [name]: value });\n    };\n\n    const onSubmit = async (ev) => {\n        ev.preventDefault();\n        createAlergias(values)\n\n        const timer = setTimeout(() => {\n            history.push('/dashboard')\n        }, 1000);\n        return () => clearTimeout(timer);\n    };\n\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n\n        <Paper className={classes.table} >\n\n           \n            <form onSubmit={onSubmit}>\n            <h1>Alergias</h1>\n            <Divider className={classes.divider} />\n                <Grid item sm={12} className={classes.grids}>\n                    <Grid container spacing={6}>\n\n                        <Grid item xs={12} sm={12} >\n                            <TextField\n                                required\n                                id=\"alergias\"\n                                name=\"alergias\"\n                                label=\"Alergias\"\n                                type=\"text\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={12} >\n                            <TextField\n                                required\n                                id=\"descricao\"\n                                name=\"descricao\"\n                                label=\"Descrição\"\n                                type=\"text\"\n                                multiline\n                                rows={5}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n         \n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Button variant=\"contained\" type=\"submit\" color=\"primary\" className={classes.salvar}>\n                        Salvar\n                    </Button>\n                </Grid>\n            </form>\n            <ToastContainer/>\n        </Paper>\n\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    createAlergias\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(AdicionarTratamento)",{"ruleId":"327","replacedBy":"328"},{"ruleId":"329","replacedBy":"330"},{"ruleId":"331","severity":1,"message":"332","line":69,"column":12,"nodeType":"333","messageId":"334","endLine":69,"endColumn":19},{"ruleId":"331","severity":1,"message":"335","line":70,"column":11,"nodeType":"333","messageId":"334","endLine":70,"endColumn":18},{"ruleId":"331","severity":1,"message":"336","line":19,"column":10,"nodeType":"333","messageId":"334","endLine":19,"endColumn":22},{"ruleId":"337","severity":1,"message":"338","line":97,"column":9,"nodeType":"339","messageId":"340","endLine":97,"endColumn":11},{"ruleId":"337","severity":1,"message":"341","line":98,"column":17,"nodeType":"339","messageId":"340","endLine":98,"endColumn":19},{"ruleId":"337","severity":1,"message":"338","line":99,"column":7,"nodeType":"339","messageId":"340","endLine":99,"endColumn":9},{"ruleId":"337","severity":1,"message":"338","line":100,"column":7,"nodeType":"339","messageId":"340","endLine":100,"endColumn":9},{"ruleId":"337","severity":1,"message":"338","line":101,"column":7,"nodeType":"339","messageId":"340","endLine":101,"endColumn":9},{"ruleId":"337","severity":1,"message":"338","line":102,"column":7,"nodeType":"339","messageId":"340","endLine":102,"endColumn":9},{"ruleId":"337","severity":1,"message":"338","line":103,"column":7,"nodeType":"339","messageId":"340","endLine":103,"endColumn":9},{"ruleId":"337","severity":1,"message":"338","line":104,"column":7,"nodeType":"339","messageId":"340","endLine":104,"endColumn":9},{"ruleId":"337","severity":1,"message":"338","line":105,"column":7,"nodeType":"339","messageId":"340","endLine":105,"endColumn":9},{"ruleId":"337","severity":1,"message":"338","line":106,"column":7,"nodeType":"339","messageId":"340","endLine":106,"endColumn":9},{"ruleId":"337","severity":1,"message":"338","line":107,"column":7,"nodeType":"339","messageId":"340","endLine":107,"endColumn":9},{"ruleId":"337","severity":1,"message":"338","line":108,"column":7,"nodeType":"339","messageId":"340","endLine":108,"endColumn":9},{"ruleId":"337","severity":1,"message":"338","line":115,"column":11,"nodeType":"339","messageId":"340","endLine":115,"endColumn":13},{"ruleId":"337","severity":1,"message":"338","line":115,"column":24,"nodeType":"339","messageId":"340","endLine":115,"endColumn":26},{"ruleId":"337","severity":1,"message":"341","line":117,"column":11,"nodeType":"339","messageId":"340","endLine":117,"endColumn":13},{"ruleId":"337","severity":1,"message":"338","line":123,"column":10,"nodeType":"339","messageId":"340","endLine":123,"endColumn":12},{"ruleId":"337","severity":1,"message":"338","line":123,"column":23,"nodeType":"339","messageId":"340","endLine":123,"endColumn":25},{"ruleId":"337","severity":1,"message":"341","line":125,"column":10,"nodeType":"339","messageId":"340","endLine":125,"endColumn":12},{"ruleId":"342","severity":1,"message":"343","line":149,"column":13,"nodeType":"344","endLine":161,"endColumn":4},{"ruleId":"342","severity":1,"message":"345","line":151,"column":21,"nodeType":"346","endLine":151,"endColumn":49},{"ruleId":"342","severity":1,"message":"343","line":163,"column":13,"nodeType":"344","endLine":177,"endColumn":4},{"ruleId":"342","severity":1,"message":"347","line":166,"column":21,"nodeType":"346","endLine":166,"endColumn":54},{"ruleId":"337","severity":1,"message":"338","line":167,"column":30,"nodeType":"339","messageId":"340","endLine":167,"endColumn":32},{"ruleId":"348","severity":1,"message":"349","line":258,"column":23,"nodeType":"350","messageId":"351","endLine":258,"endColumn":65},{"ruleId":"348","severity":1,"message":"349","line":272,"column":23,"nodeType":"350","messageId":"351","endLine":272,"endColumn":68},{"ruleId":"331","severity":1,"message":"352","line":1,"column":17,"nodeType":"333","messageId":"334","endLine":1,"endColumn":26},{"ruleId":"331","severity":1,"message":"353","line":1,"column":28,"nodeType":"333","messageId":"334","endLine":1,"endColumn":36},{"ruleId":"331","severity":1,"message":"354","line":5,"column":8,"nodeType":"333","messageId":"334","endLine":5,"endColumn":11},{"ruleId":"331","severity":1,"message":"355","line":8,"column":8,"nodeType":"333","messageId":"334","endLine":8,"endColumn":17},{"ruleId":"331","severity":1,"message":"356","line":53,"column":7,"nodeType":"333","messageId":"334","endLine":53,"endColumn":15},{"ruleId":"331","severity":1,"message":"357","line":18,"column":28,"nodeType":"333","messageId":"334","endLine":18,"endColumn":40},{"ruleId":"342","severity":1,"message":"358","line":63,"column":8,"nodeType":"359","endLine":63,"endColumn":17,"suggestions":"360"},{"ruleId":"331","severity":1,"message":"361","line":2,"column":8,"nodeType":"333","messageId":"334","endLine":2,"endColumn":12},{"ruleId":"331","severity":1,"message":"354","line":5,"column":8,"nodeType":"333","messageId":"334","endLine":5,"endColumn":11},{"ruleId":"342","severity":1,"message":"343","line":89,"column":13,"nodeType":"344","endLine":91,"endColumn":4},{"ruleId":"342","severity":1,"message":"362","line":91,"column":6,"nodeType":"359","endLine":91,"endColumn":8,"suggestions":"363"},{"ruleId":"331","severity":1,"message":"352","line":1,"column":27,"nodeType":"333","messageId":"334","endLine":1,"endColumn":36},{"ruleId":"331","severity":1,"message":"357","line":21,"column":22,"nodeType":"333","messageId":"334","endLine":21,"endColumn":34},{"ruleId":"331","severity":1,"message":"364","line":21,"column":36,"nodeType":"333","messageId":"334","endLine":21,"endColumn":44},{"ruleId":"342","severity":1,"message":"343","line":68,"column":15,"nodeType":"344","endLine":70,"endColumn":8},{"ruleId":"342","severity":1,"message":"362","line":70,"column":10,"nodeType":"359","endLine":70,"endColumn":12,"suggestions":"365"},{"ruleId":"331","severity":1,"message":"353","line":1,"column":17,"nodeType":"333","messageId":"334","endLine":1,"endColumn":25},{"ruleId":"331","severity":1,"message":"366","line":17,"column":10,"nodeType":"333","messageId":"334","endLine":17,"endColumn":25},{"ruleId":"331","severity":1,"message":"367","line":17,"column":27,"nodeType":"333","messageId":"334","endLine":17,"endColumn":45},{"ruleId":"331","severity":1,"message":"368","line":25,"column":9,"nodeType":"333","messageId":"334","endLine":25,"endColumn":19},{"ruleId":"342","severity":1,"message":"343","line":37,"column":13,"nodeType":"344","endLine":46,"endColumn":2},{"ruleId":"342","severity":1,"message":"369","line":46,"column":3,"nodeType":"359","endLine":46,"endColumn":5,"suggestions":"370"},{"ruleId":"331","severity":1,"message":"371","line":2,"column":8,"nodeType":"333","messageId":"334","endLine":2,"endColumn":12},{"ruleId":"331","severity":1,"message":"372","line":28,"column":11,"nodeType":"333","messageId":"334","endLine":28,"endColumn":18},{"ruleId":"342","severity":1,"message":"343","line":32,"column":15,"nodeType":"344","endLine":37,"endColumn":6},{"ruleId":"342","severity":1,"message":"373","line":37,"column":7,"nodeType":"359","endLine":37,"endColumn":9,"suggestions":"374"},{"ruleId":"331","severity":1,"message":"375","line":8,"column":8,"nodeType":"333","messageId":"334","endLine":8,"endColumn":18},{"ruleId":"331","severity":1,"message":"376","line":17,"column":7,"nodeType":"333","messageId":"334","endLine":17,"endColumn":11},{"ruleId":"331","severity":1,"message":"377","line":28,"column":47,"nodeType":"333","messageId":"334","endLine":28,"endColumn":54},{"ruleId":"331","severity":1,"message":"378","line":2,"column":17,"nodeType":"333","messageId":"334","endLine":2,"endColumn":23},{"ruleId":"331","severity":1,"message":"379","line":2,"column":25,"nodeType":"333","messageId":"334","endLine":2,"endColumn":39},{"ruleId":"331","severity":1,"message":"380","line":2,"column":41,"nodeType":"333","messageId":"334","endLine":2,"endColumn":55},{"ruleId":"331","severity":1,"message":"381","line":2,"column":57,"nodeType":"333","messageId":"334","endLine":2,"endColumn":64},{"ruleId":"331","severity":1,"message":"372","line":17,"column":11,"nodeType":"333","messageId":"334","endLine":17,"endColumn":18},{"ruleId":"342","severity":1,"message":"343","line":30,"column":15,"nodeType":"344","endLine":33,"endColumn":6},{"ruleId":"342","severity":1,"message":"373","line":33,"column":7,"nodeType":"359","endLine":33,"endColumn":9,"suggestions":"382"},{"ruleId":"331","severity":1,"message":"353","line":1,"column":27,"nodeType":"333","messageId":"334","endLine":1,"endColumn":35},{"ruleId":"331","severity":1,"message":"383","line":14,"column":8,"nodeType":"333","messageId":"334","endLine":14,"endColumn":15},{"ruleId":"342","severity":1,"message":"343","line":24,"column":15,"nodeType":"344","endLine":26,"endColumn":6},{"ruleId":"342","severity":1,"message":"362","line":26,"column":7,"nodeType":"359","endLine":26,"endColumn":9,"suggestions":"384"},{"ruleId":"331","severity":1,"message":"335","line":27,"column":11,"nodeType":"333","messageId":"334","endLine":27,"endColumn":18},{"ruleId":"331","severity":1,"message":"372","line":31,"column":11,"nodeType":"333","messageId":"334","endLine":31,"endColumn":18},{"ruleId":"331","severity":1,"message":"385","line":70,"column":9,"nodeType":"333","messageId":"334","endLine":70,"endColumn":25},{"ruleId":"331","severity":1,"message":"385","line":72,"column":11,"nodeType":"333","messageId":"334","endLine":72,"endColumn":27},{"ruleId":"331","severity":1,"message":"385","line":70,"column":9,"nodeType":"333","messageId":"334","endLine":70,"endColumn":25},{"ruleId":"331","severity":1,"message":"353","line":1,"column":27,"nodeType":"333","messageId":"334","endLine":1,"endColumn":35},{"ruleId":"331","severity":1,"message":"383","line":14,"column":8,"nodeType":"333","messageId":"334","endLine":14,"endColumn":15},{"ruleId":"342","severity":1,"message":"343","line":24,"column":15,"nodeType":"344","endLine":26,"endColumn":6},{"ruleId":"342","severity":1,"message":"362","line":26,"column":7,"nodeType":"359","endLine":26,"endColumn":9,"suggestions":"386"},{"ruleId":"331","severity":1,"message":"335","line":27,"column":11,"nodeType":"333","messageId":"334","endLine":27,"endColumn":18},{"ruleId":"331","severity":1,"message":"372","line":30,"column":11,"nodeType":"333","messageId":"334","endLine":30,"endColumn":18},{"ruleId":"331","severity":1,"message":"385","line":72,"column":11,"nodeType":"333","messageId":"334","endLine":72,"endColumn":27},{"ruleId":"331","severity":1,"message":"385","line":70,"column":9,"nodeType":"333","messageId":"334","endLine":70,"endColumn":25},{"ruleId":"331","severity":1,"message":"353","line":1,"column":27,"nodeType":"333","messageId":"334","endLine":1,"endColumn":35},{"ruleId":"331","severity":1,"message":"383","line":14,"column":8,"nodeType":"333","messageId":"334","endLine":14,"endColumn":15},{"ruleId":"342","severity":1,"message":"343","line":24,"column":15,"nodeType":"344","endLine":26,"endColumn":6},{"ruleId":"342","severity":1,"message":"362","line":26,"column":7,"nodeType":"359","endLine":26,"endColumn":9,"suggestions":"387"},{"ruleId":"331","severity":1,"message":"335","line":27,"column":11,"nodeType":"333","messageId":"334","endLine":27,"endColumn":18},{"ruleId":"331","severity":1,"message":"372","line":31,"column":11,"nodeType":"333","messageId":"334","endLine":31,"endColumn":18},{"ruleId":"331","severity":1,"message":"385","line":72,"column":11,"nodeType":"333","messageId":"334","endLine":72,"endColumn":27},{"ruleId":"331","severity":1,"message":"385","line":70,"column":9,"nodeType":"333","messageId":"334","endLine":70,"endColumn":25},{"ruleId":"331","severity":1,"message":"353","line":1,"column":27,"nodeType":"333","messageId":"334","endLine":1,"endColumn":35},{"ruleId":"331","severity":1,"message":"383","line":14,"column":8,"nodeType":"333","messageId":"334","endLine":14,"endColumn":15},{"ruleId":"342","severity":1,"message":"343","line":24,"column":15,"nodeType":"344","endLine":26,"endColumn":6},{"ruleId":"342","severity":1,"message":"362","line":26,"column":7,"nodeType":"359","endLine":26,"endColumn":9,"suggestions":"388"},{"ruleId":"331","severity":1,"message":"335","line":27,"column":11,"nodeType":"333","messageId":"334","endLine":27,"endColumn":18},{"ruleId":"331","severity":1,"message":"372","line":32,"column":11,"nodeType":"333","messageId":"334","endLine":32,"endColumn":18},{"ruleId":"331","severity":1,"message":"389","line":9,"column":8,"nodeType":"333","messageId":"334","endLine":9,"endColumn":14},{"ruleId":"342","severity":1,"message":"343","line":50,"column":13,"nodeType":"344","endLine":52,"endColumn":4},{"ruleId":"342","severity":1,"message":"362","line":52,"column":6,"nodeType":"359","endLine":52,"endColumn":8,"suggestions":"390"},{"ruleId":"331","severity":1,"message":"391","line":61,"column":15,"nodeType":"333","messageId":"334","endLine":61,"endColumn":21},{"ruleId":"331","severity":1,"message":"392","line":63,"column":16,"nodeType":"333","messageId":"334","endLine":63,"endColumn":23},{"ruleId":"331","severity":1,"message":"385","line":90,"column":9,"nodeType":"333","messageId":"334","endLine":90,"endColumn":25},{"ruleId":"331","severity":1,"message":"385","line":72,"column":11,"nodeType":"333","messageId":"334","endLine":72,"endColumn":27},{"ruleId":"331","severity":1,"message":"393","line":15,"column":10,"nodeType":"333","messageId":"334","endLine":15,"endColumn":21},{"ruleId":"331","severity":1,"message":"385","line":74,"column":11,"nodeType":"333","messageId":"334","endLine":74,"endColumn":27},{"ruleId":"331","severity":1,"message":"393","line":15,"column":10,"nodeType":"333","messageId":"334","endLine":15,"endColumn":21},{"ruleId":"331","severity":1,"message":"394","line":16,"column":7,"nodeType":"333","messageId":"334","endLine":16,"endColumn":16},{"ruleId":"342","severity":1,"message":"343","line":24,"column":15,"nodeType":"344","endLine":26,"endColumn":6},{"ruleId":"342","severity":1,"message":"362","line":26,"column":7,"nodeType":"359","endLine":26,"endColumn":9,"suggestions":"395"},{"ruleId":"331","severity":1,"message":"335","line":27,"column":11,"nodeType":"333","messageId":"334","endLine":27,"endColumn":18},{"ruleId":"331","severity":1,"message":"385","line":97,"column":11,"nodeType":"333","messageId":"334","endLine":97,"endColumn":27},{"ruleId":"331","severity":1,"message":"353","line":1,"column":27,"nodeType":"333","messageId":"334","endLine":1,"endColumn":35},{"ruleId":"331","severity":1,"message":"383","line":14,"column":8,"nodeType":"333","messageId":"334","endLine":14,"endColumn":15},{"ruleId":"342","severity":1,"message":"343","line":24,"column":15,"nodeType":"344","endLine":26,"endColumn":6},{"ruleId":"342","severity":1,"message":"362","line":26,"column":7,"nodeType":"359","endLine":26,"endColumn":9,"suggestions":"396"},{"ruleId":"331","severity":1,"message":"335","line":27,"column":11,"nodeType":"333","messageId":"334","endLine":27,"endColumn":18},{"ruleId":"331","severity":1,"message":"372","line":31,"column":11,"nodeType":"333","messageId":"334","endLine":31,"endColumn":18},{"ruleId":"331","severity":1,"message":"385","line":70,"column":9,"nodeType":"333","messageId":"334","endLine":70,"endColumn":25},{"ruleId":"331","severity":1,"message":"385","line":72,"column":11,"nodeType":"333","messageId":"334","endLine":72,"endColumn":27},"no-native-reassign",["397"],"no-negated-in-lhs",["398"],"no-unused-vars","'created' is assigned a value but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'fetchAnimals' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","Assignments to the 'cepConsumer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'cpfConsumer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useEffect' is defined but never used.","'useState' is defined but never used.","'Box' is defined but never used.","'TextField' is defined but never used.","'getToday' is assigned a value but never used.","'stateReducer' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["399"],"'clsx' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchAnimals'. Either include it or remove the dependency array. If 'fetchAnimals' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["400"],"'stateAll' is defined but never used.",["401"],"'numberAtendidos' is assigned a value but never used.","'setNumberAtendidos' is assigned a value but never used.","'createData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'count', 'dataAraay', and 'getToday'. Either include them or remove the dependency array.",["402"],"'Link' is defined but never used.","'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getToday'. Either include it or remove the dependency array.",["403"],"'Prontuario' is defined but never used.","'bull' is assigned a value but never used.","'pelagem' is assigned a value but never used.","'moment' is defined but never used.","'formatDistance' is defined but never used.","'formatRelative' is defined but never used.","'subDays' is defined but never used.",["404"],"'NoteAdd' is defined but never used.",["405"],"'fixedHeightPaper' is assigned a value but never used.",["406"],["407"],["408"],"'Button' is defined but never used.",["409"],"'setCpf' is assigned a value but never used.","'setSexo' is assigned a value but never used.","'useDispatch' is defined but never used.","'useStyles' is assigned a value but never used.",["410"],["411"],"no-global-assign","no-unsafe-negation",{"desc":"412","fix":"413"},{"desc":"414","fix":"415"},{"desc":"414","fix":"416"},{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},{"desc":"419","fix":"421"},{"desc":"414","fix":"422"},{"desc":"414","fix":"423"},{"desc":"414","fix":"424"},{"desc":"414","fix":"425"},{"desc":"414","fix":"426"},{"desc":"414","fix":"427"},{"desc":"414","fix":"428"},"Update the dependencies array to be: [history, success]",{"range":"429","text":"430"},"Update the dependencies array to be: [fetchAnimals]",{"range":"431","text":"432"},{"range":"433","text":"432"},"Update the dependencies array to be: [count, dataAraay, getToday]",{"range":"434","text":"435"},"Update the dependencies array to be: [getToday]",{"range":"436","text":"437"},{"range":"438","text":"437"},{"range":"439","text":"432"},{"range":"440","text":"432"},{"range":"441","text":"432"},{"range":"442","text":"432"},{"range":"443","text":"432"},{"range":"444","text":"432"},{"range":"445","text":"432"},[1975,1984],"[history, success]",[2278,2280],"[fetchAnimals]",[2033,2035],[1139,1141],"[count, dataAraay, getToday]",[1129,1131],"[getToday]",[941,943],[953,955],[953,955],[953,955],[953,955],[1309,1311],[953,955],[953,955]]