[{"/home/andrews_souza/Projects/vet-app/src/index.js":"1","/home/andrews_souza/Projects/vet-app/src/App.js":"2","/home/andrews_souza/Projects/vet-app/src/Router.js":"3","/home/andrews_souza/Projects/vet-app/src/redux/reducers/index.js":"4","/home/andrews_souza/Projects/vet-app/src/redux/reducers/animals.js":"5","/home/andrews_souza/Projects/vet-app/src/redux/reducers/user.js":"6","/home/andrews_souza/Projects/vet-app/src/redux/reducers/pessoa.js":"7","/home/andrews_souza/Projects/vet-app/src/pages/usuarios/Gerenciamento.js":"8","/home/andrews_souza/Projects/vet-app/src/pages/pets/pets.adicionar.js":"9","/home/andrews_souza/Projects/vet-app/src/pages/usuarios/index.js":"10","/home/andrews_souza/Projects/vet-app/src/pages/pets/index.js":"11","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/index.js":"12","/home/andrews_souza/Projects/vet-app/src/pages/singin/index.js":"13","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/index.js":"14","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/dados/index.js":"15","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/index.js":"16","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/index.js":"17","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/index.js":"18","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/index.js":"19","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/index.js":"20","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/index.js":"21","/home/andrews_souza/Projects/vet-app/src/pages/usuarios/TableUsuarios.js":"22","/home/andrews_souza/Projects/vet-app/src/pages/usuarios/EditUsuario.js":"23","/home/andrews_souza/Projects/vet-app/src/pages/usuarios/Permissao.js":"24","/home/andrews_souza/Projects/vet-app/src/components/menu.js":"25","/home/andrews_souza/Projects/vet-app/src/redux/constants/index.js":"26","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/permissaoMed.js":"27","/home/andrews_souza/Projects/vet-app/src/utils/cpf.js":"28","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/EditVermifugo.js":"29","/home/andrews_souza/Projects/vet-app/src/utils/cep.js":"30","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/adicionarVermufugos.js":"31","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/TableVermifugo.js":"32","/home/andrews_souza/Projects/vet-app/src/redux/actions/index.js":"33","/home/andrews_souza/Projects/vet-app/src/components/itensMenu.js":"34","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/vacinasTable.js":"35","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/EditVacinas.js":"36","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/adicionarVacinas.js":"37","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/EditMedimento.js":"38","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/tableMedicamento.js":"39","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/adicionarMedicamento.js":"40","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/AdicionarPronturio.js":"41","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/EdittTratamento.js":"42","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/TratamentoTable.js":"43","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/EditProntuario.js":"44","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/ProtuarioTable.js":"45","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/tableAlergia.js":"46","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/editAlergia.js":"47","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/adicionarAlergias.js":"48","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/dados/EditDados.js":"49","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/cadastrarTratamento.js":"50","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/deposits.js":"51","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/orders.js":"52","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/chart.js":"53","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/cardAnimal.js":"54","/home/andrews_souza/Projects/vet-app/src/pages/usuarios/Relatorios.js":"55"},{"size":1159,"mtime":1634863100793,"results":"56","hashOfConfig":"57"},{"size":145,"mtime":1634771399539,"results":"58","hashOfConfig":"57"},{"size":2289,"mtime":1638500507860,"results":"59","hashOfConfig":"57"},{"size":203,"mtime":1632685300636,"results":"60","hashOfConfig":"57"},{"size":1039,"mtime":1634962284497,"results":"61","hashOfConfig":"57"},{"size":1495,"mtime":1637192330755,"results":"62","hashOfConfig":"57"},{"size":894,"mtime":1637192338652,"results":"63","hashOfConfig":"57"},{"size":4185,"mtime":1637264633814,"results":"64","hashOfConfig":"57"},{"size":12548,"mtime":1637191066946,"results":"65","hashOfConfig":"57"},{"size":8462,"mtime":1638502787967,"results":"66","hashOfConfig":"57"},{"size":9594,"mtime":1637189406379,"results":"67","hashOfConfig":"57"},{"size":5178,"mtime":1634960064423,"results":"68","hashOfConfig":"57"},{"size":4659,"mtime":1637280683042,"results":"69","hashOfConfig":"57"},{"size":3621,"mtime":1634952289845,"results":"70","hashOfConfig":"57"},{"size":4222,"mtime":1634870886681,"results":"71","hashOfConfig":"57"},{"size":5327,"mtime":1634870403883,"results":"72","hashOfConfig":"57"},{"size":6400,"mtime":1634953534469,"results":"73","hashOfConfig":"57"},{"size":5353,"mtime":1634871004459,"results":"74","hashOfConfig":"57"},{"size":5361,"mtime":1634870948128,"results":"75","hashOfConfig":"57"},{"size":5324,"mtime":1634871058699,"results":"76","hashOfConfig":"57"},{"size":5348,"mtime":1634871098166,"results":"77","hashOfConfig":"57"},{"size":2527,"mtime":1637264589177,"results":"78","hashOfConfig":"57"},{"size":7249,"mtime":1637273419971,"results":"79","hashOfConfig":"57"},{"size":350,"mtime":1634870202039,"results":"80","hashOfConfig":"57"},{"size":4576,"mtime":1634771399543,"results":"81","hashOfConfig":"57"},{"size":1656,"mtime":1637190820967,"results":"82","hashOfConfig":"57"},{"size":348,"mtime":1634870244977,"results":"83","hashOfConfig":"57"},{"size":873,"mtime":1634946622878,"results":"84","hashOfConfig":"57"},{"size":3815,"mtime":1634871999246,"results":"85","hashOfConfig":"57"},{"size":260,"mtime":1634946240318,"results":"86","hashOfConfig":"57"},{"size":4706,"mtime":1634875884284,"results":"87","hashOfConfig":"57"},{"size":3093,"mtime":1634956646852,"results":"88","hashOfConfig":"57"},{"size":10696,"mtime":1637270346511,"results":"89","hashOfConfig":"57"},{"size":2193,"mtime":1634951744158,"results":"90","hashOfConfig":"57"},{"size":3082,"mtime":1634963490083,"results":"91","hashOfConfig":"57"},{"size":3774,"mtime":1634871985374,"results":"92","hashOfConfig":"57"},{"size":4579,"mtime":1634875836326,"results":"93","hashOfConfig":"57"},{"size":3845,"mtime":1634961569643,"results":"94","hashOfConfig":"57"},{"size":2679,"mtime":1634956694890,"results":"95","hashOfConfig":"57"},{"size":4290,"mtime":1634871876162,"results":"96","hashOfConfig":"57"},{"size":11380,"mtime":1634962363617,"results":"97","hashOfConfig":"57"},{"size":3824,"mtime":1634871971110,"results":"98","hashOfConfig":"57"},{"size":2666,"mtime":1634962266717,"results":"99","hashOfConfig":"57"},{"size":13564,"mtime":1634871835610,"results":"100","hashOfConfig":"57"},{"size":2617,"mtime":1634956630695,"results":"101","hashOfConfig":"57"},{"size":2670,"mtime":1637195415615,"results":"102","hashOfConfig":"57"},{"size":3792,"mtime":1634871955274,"results":"103","hashOfConfig":"57"},{"size":4260,"mtime":1634871844990,"results":"104","hashOfConfig":"57"},{"size":7376,"mtime":1634952851576,"results":"105","hashOfConfig":"57"},{"size":4280,"mtime":1634871896486,"results":"106","hashOfConfig":"57"},{"size":1262,"mtime":1634782199929,"results":"107","hashOfConfig":"57"},{"size":2273,"mtime":1634781850126,"results":"108","hashOfConfig":"57"},{"size":2187,"mtime":1634787639518,"results":"109","hashOfConfig":"57"},{"size":2158,"mtime":1634962910739,"results":"110","hashOfConfig":"57"},{"size":6699,"mtime":1638562208841,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"1ewsjpn",{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"114"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"114"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"114"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"114"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"114"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"114"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"114"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"114"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"114"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"114"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"114"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"114"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"114"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"114"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"114"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"114"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"114"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"114"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"114"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"114"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"114"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"114"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"114"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"114"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"114"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"114"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"114"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"114"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"114"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"114"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"114"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"114"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"114"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"114"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"114"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"114"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"114"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/andrews_souza/Projects/vet-app/src/index.js",[],["261","262"],"/home/andrews_souza/Projects/vet-app/src/App.js",[],"/home/andrews_souza/Projects/vet-app/src/Router.js",[],"/home/andrews_souza/Projects/vet-app/src/redux/reducers/index.js",[],"/home/andrews_souza/Projects/vet-app/src/redux/reducers/animals.js",[],"/home/andrews_souza/Projects/vet-app/src/redux/reducers/user.js",["263"],"import {\n  LOAD_USER,\n  SUCCESS_USER,\n  ERROR_USER,\n  AUTHETICATE_USER,\n  CREATE_USER,\n  EXIT_PESSOA,\n  FETCH_PESSOAS,\n} from \"../constants\";\n\nconst userAuthentication = localStorage.getItem(\"user@authentication\") || null;\n\nconst initialState = {\n  userInfo: userAuthentication ? JSON.parse(userAuthentication) : {},\n  success: false,\n  error: false,\n  loading: false,\n  isLoggd: false,\n  fetchPessoas: [],\n};\n\nconst user = (state = initialState, action) => {\n  switch (action.type) {\n    case AUTHETICATE_USER: {\n      const { payload } = action;\n      return {\n        ...state,\n        isLoggd: true,\n        userInfo: payload,\n      };\n    }\n    case FETCH_PESSOAS: {\n      const { payload } = action;\n      return {\n        ...state,\n        fetchPessoas: payload,\n      };\n    }\n    case LOAD_USER: {\n      return {\n        ...state,\n        loading: true,\n        success: false,\n        error: false,\n      };\n    }\n    case SUCCESS_USER: {\n      return {\n        ...state,\n        isLoggd: true,\n        success: true,\n        error: false,\n        loading: false,\n      };\n    }\n\n    case ERROR_USER: {\n      return {\n        ...state,\n        error: true,\n        success: false,\n        loading: false,\n      };\n    }\n\n    case CREATE_USER: {\n      const { payload } = action;\n      return {\n        ...state,\n      };\n    }\n    case EXIT_PESSOA: {\n      return {\n        ...state,\n        isLoggd: false,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default user;\n","/home/andrews_souza/Projects/vet-app/src/redux/reducers/pessoa.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/usuarios/Gerenciamento.js",["264","265","266","267","268","269","270","271"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Menu from '../../components/menu';\nimport Button from '@material-ui/core/Button';\nimport { useHistory, useParams } from 'react-router-dom';\nimport TableProtuario from './TableUsuarios'\nimport NoteAdd from '@material-ui/icons/NoteAdd';\nimport { fetchUsuarios } from '../../redux/actions'\nimport EditProntuario from './EditUsuario'\nimport { useSelector } from 'react-redux';\nimport Permissao from './Permissao';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 80,\n\n    },\n    gridContainer: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        padding: \"18px\"\n    },\n    table: {\n        marginTop: '10px',\n        padding: theme.spacing(2),\n        minHeight: 100\n    },\n    createProntuario: {\n        marginTop: '40px'\n    }\n}));\n\nconst Prontuario = ({ animalReducer, fetchUsuarios }) => {\n\n    useEffect(async () => {\n        await fetchUsuarios();\n      }, []);\n      const permissao = useSelector(state => state.user.userInfo.user)\n\n      const { funcao } = permissao\n\n    const history = useHistory();\n\n    const { id } = useParams();\n    const [createProntuarioButton, setCreateProntuario] = useState(false)\n\n    const [viewProntuario, setViewProntuario] = useState(false)\n    \n    const createProntuario = () => {\n        setViewProntuario(false)\n        setCreateProntuario(true)\n    }\n\n    \n\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n        funcao === 'Administrativo' ?\n        <div className={classes.root}>\n            <CssBaseline />\n            <Menu msg=\"Gerenciamento de Usuarios\" />\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <Grid item sm={12}>\n                      \n\n                        {\n                            viewProntuario && viewProntuario !== false ?\n\n                                <Paper className={classes.table} >\n                                    {\n                                        <EditProntuario data={viewProntuario}/>\n                                    }\n                                </Paper> :\n                                <Paper className={classes.table} >\n                                    {\n                                        <TableProtuario viewProntuario={setViewProntuario} data={id} />\n                                    }\n                                </Paper>\n                        }\n\n                    </Grid>\n\n                    <Box pt={4}>\n                        {/* <Footer /> */}\n                    </Box>\n                </Container>\n            </main>\n        </div>:<Permissao/>\n    );\n};\n\n\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    fetchUsuarios\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(Prontuario)","/home/andrews_souza/Projects/vet-app/src/pages/pets/pets.adicionar.js",["272"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Menu from '../../components/menu';\nimport InputMask from \"react-input-mask\";\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { creatAnimal } from '../../redux/actions';\n\nconst caes = ['Pastor-Alemão', 'Labrador', 'Zwergspitz', 'Husky', 'Golden', 'Buldogue', 'Poodle', 'Pit-Bull', 'Chihuahua', 'Shiba Inu', 'Rottweiler', 'Bobermann', 'Pug', 'Dachshulund'];\nconst gatos = ['Persa', ' Maine Coon', 'Siamês', 'Gato Inglês', 'Ragdoll', 'Munchkin', 'Norueguês', 'Siberiano'];\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        padding: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column'\n    },\n    fixedHeight: {\n        height: 350,\n    },\n    Button: {\n        marginBottom: 'auto'\n    },\n    pets: {\n        marginLeft: '10px'\n    }\n}));\n\nconst AdicionarAnimals = ({ creatAnimal, stateReducer }) => {\n\n    const [values, setValues] = useState();\n    const [created, setCreated] = useState(false);\n    const history = useHistory();\n\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    const [especie, setEspecie] = useState(null);\n\n    const selectEspecie = (ev) => {\n        const selected = ev.target.value\n        setEspecie(selected)\n    };\n\n    const { success } = stateReducer;\n    \n   \n    const onSubmit = async (ev) => {\n        ev.preventDefault();\n        creatAnimal(values)\n        setCreated(true)\n         if (success) {\n            const timer = setTimeout(() => {\n              history.push(\"/pets\");\n            }, 1000);\n            return () => clearTimeout(timer);\n          }\n    };\n    const onChange = (ev) => {\n        const { name, value } = ev.target;\n        setValues({ ...values, [name]: value });\n       \n    }\n    const callTowFunction = (ev) =>{\n        onChange(ev)\n        selectEspecie(ev)\n    }\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Menu msg=\"Pets\" />\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <h1>\n                        Cadastrar Pet\n                    </h1>\n                    <form onSubmit={onSubmit}>\n                        <Grid item sm={10}>\n                            <Paper className={fixedHeightPaper}>\n                                <Grid container spacing={4}>\n                                    <Grid item xs={12} >\n                                        <TextField\n                                            required\n                                            id=\"nome\"\n                                            name=\"nome\"\n                                            label=\"Nome\"\n                                            fullWidth\n                                            onChange={onChange}\n                                            autoComplete=\"shipping address-line1\"\n                                        />\n                                    </Grid>\n                                </Grid>\n\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12} sm={6}>\n                                        <InputMask\n                                            mask=\"999.999.999-99\"\n                                            maskChar=\" \"\n                                            onChange={onChange}\n                                            id=\"cpf\"\n                                            name=\"cpf\"\n                                        >\n                                            {() => <TextField fullWidth className={classes.inputText} label=\"CPF do Dono\" required name=\"cpf\" />}\n                                        </InputMask>\n                                    </Grid>\n\n                                    <Grid item xs={12} sm={6}>\n                                        <FormControl fullWidth className={classes.formControl} >\n                                            <InputLabel item >Espécie</InputLabel>\n                                            <Select\n                                                name=\"especie\"\n                                                onChange={callTowFunction}\n                                                native\n                                            >\n\n                                                <option aria-label=\"None\" value=\"\" />\n                                                <option value={'Cachorro'}>Cachorro</option>\n                                                <option value={'Gato'}>Gato</option>\n\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n\n                                </Grid>\n\n                                <Grid container spacing={3}>\n\n                                    <Grid item xs={12} sm={6}>\n                                        <FormControl fullWidth className={classes.formControl} >\n                                            <InputLabel item >Raça</InputLabel>\n                                            <Select\n                                                name=\"raca\"\n                                                onChange={onChange}\n                                                native\n                                            >\n                                                <option aria-label=\"None\" value=\"\" />\n                                                {\n                                                    especie && especie === 'Cachorro' ? caes.map(i => <option value={i}>{i}</option>) : ''\n\n                                                }\n                                                {\n                                                    especie && especie === 'Gato' ? gatos.map(i => <option value={i}>{i}</option>) : ''\n\n                                                }\n\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <FormControl fullWidth className={classes.formControl} >\n                                            <InputLabel item >Pelagem</InputLabel>\n                                            <Select\n                                                name=\"pelagem\"\n                                                onChange={onChange}\n                                                native\n                                            >\n                                                <option aria-label=\"None\" value=\"\" />\n                                                <option value='Curto'>Curto</option>\n                                                <option value='Médio'>Médio</option>\n                                                <option value='Alto'>Alto</option>\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n\n\n                                </Grid>\n\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            required\n                                            id=\"idade\"\n                                            name=\"idade\"\n                                            label=\"Idade\"\n                                            type=\"number\"\n                                            onChange={onChange}\n                                            fullWidth\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <FormControl fullWidth className={classes.formControl} >\n                                            <InputLabel item >Sexo</InputLabel>\n                                            <Select\n                                                name='sexo'\n                                                native\n                                                onChange={onChange}\n                                            >\n                                                <option aria-label=\"None\" value=\"\" />\n                                                <option value='Femea'>Femea</option>\n                                                <option value='Macho'>Macho</option>\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n                                </Grid>\n\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            required\n                                            id=\"peso\"\n                                            name=\"peso\"\n                                            label=\"Peso\"\n                                            type=\"number\"\n                                            onChange={onChange}\n                                            fullWidth\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <FormControl fullWidth className={classes.formControl} >\n                                            <InputLabel item >Temperamento</InputLabel>\n                                            <Select\n                                                native\n                                                name='temperamento'\n                                                onChange={onChange}\n                                            >\n                                                <option aria-label=\"None\" value=\"\" />\n                                                <option value='Calmo'>Calmo</option>\n                                                <option value='Bravo'>Bravo</option>\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n                                            Adicionar\n                                        </Button>\n\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </Grid>\n                    </form>\n                </Container>\n            </main>\n            <ToastContainer />\n        </div>\n    );\n};\n\n\n\nconst mapStateToProps = state => ({\n    stateReducer: state.animals,\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    creatAnimal\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatch)(AdicionarAnimals);","/home/andrews_souza/Projects/vet-app/src/pages/usuarios/index.js",["273","274","275","276","277","278","279","280","281","282","283"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Menu from \"../../components/menu\";\nimport InputMask from \"react-input-mask\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport { ToastContainer,toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { createUser, stateReducer, stateAll } from \"../../redux/actions\";\nimport Permissao from './Permissao'\nimport { useSelector } from 'react-redux'\nimport { ValidarCPF } from \"./../../utils/cpf\"\nimport Settings from \"@material-ui/icons/Settings\";\nimport Assignment from \"@material-ui/icons/Assignment\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 350,\n  },\n}));\n\nconst CreatedUser = ({ createUser, stateReducer, stateAll }) => {\n\n  const permissao = useSelector(state => state.user.userInfo.user)\n  const { funcao:funcPermissao } = permissao\n  \n  const history = useHistory();\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const { success, loading } = stateReducer;\n  const [values, setValues] = useState({\n    nome: '',\n    cpf: '',\n    telefone: '',\n    crmv: '',\n    funcao:'',\n    email: '',\n    senha: ''\n  });\n\n  const { nome, cpf, email, telefone, crmv, funcao, senha } = values\n  const onChange = useCallback((ev) => {\n    const { name, value } = ev.target;\n    setValues({ ...values, [name]: value });\n  }, [values])\n\n  let cpfConsumer = cpf ? cpf : null;\n  useEffect(async () => {\n    if(cpfConsumer !== null){\n      cpfConsumer = cpfConsumer.replace(/[^\\d]+/g,'');\n      if (cpfConsumer.length == 11 ) {\n        const cpfValidado = ValidarCPF(cpfConsumer)\n        if(!cpfValidado){\n          toast.error(\"CPF invalido !\")\n        }\n      }\n    }\n  }, [cpfConsumer]);\n\n  const onSubmit = async (ev) => {\n    ev.preventDefault();\n    createUser(values);\n    \n    if (success) {\n      const timer = setTimeout(() => {\n        history.push(\"/dashboard\");\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  };\n\nconst goGerencimento = ()=>{\n  history.push(\"/usuarios/gerenciamento\");\n}\n\nconst goRelatorios = ()=>{\n  history.push(\"/usuarios/relatorios\");\n}\n\n  return (\n    funcPermissao === 'Administrativo' ?\n  <form onSubmit={onSubmit}>\n    <div className={classes.root}>\n      <CssBaseline />\n      <Menu msg=\"Usuarios\" />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid item sm={10}>\n            <Paper className={fixedHeightPaper}>\n              <Grid container spacing={4}>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    id=\"nome\"\n                    name=\"nome\"\n                    label=\"Nome\"\n                    fullWidth\n                    autoComplete=\"shipping address-line1\"\n                    onChange={onChange}\n                  />\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={3}>\n                <Grid item xs={12} sm={6}>\n                  <InputMask\n                    mask=\"999.999.999-99\"\n                    maskChar=\" \"\n                    onChange={onChange}\n                    id=\"cpf\"\n                    name=\"cpf\"\n                  >\n                    {() => (\n                      <TextField\n                        fullWidth\n                        className={classes.inputText}\n                        label=\"CPF\"\n                        required\n                        name=\"cpf\"\n                      />\n                    )}\n                  </InputMask>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <InputMask\n                    mask=\"(99) - 9 9999-9999\"\n                    maskChar=\" \"\n                    onChange={onChange}\n                    id=\"celular\"\n                    name=\"telefone\"\n                  >\n                    {() => (\n                      <TextField\n                        fullWidth\n                        className={classes.inputText}\n                        label=\"Celular\"\n                        name=\"telefone\"\n                      />\n                    )}\n                  </InputMask>\n                </Grid>\n              </Grid>\n              <Grid container spacing={3}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    required\n                    id=\"crmv\"\n                    name=\"crmv\"\n                    label=\"Crmv\"\n                    fullWidth\n                    onChange={onChange}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <FormControl fullWidth className={classes.formControl}>\n                    <InputLabel item>Função</InputLabel>\n                    <Select name=\"funcao\" onChange={onChange} native>\n                      <option aria-label=\"None\" value=\"\" />\n                      <option value={\"Administrativo\"}>Administrativo</option>\n                      <option value={\"Médico\"}>Médico</option>\n                      <option value={\"Recepcionista\"}>Recepcionista</option>\n                    </Select>\n                  </FormControl>\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={3}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    required\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"Email\"\n                    fullWidth\n                    autoComplete=\"shipping address-line1\"\n                    onChange={onChange}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    type=\"password\"\n                    required\n                    id=\"senha\"\n                    name=\"senha\"\n                    label=\"Senha\"\n                    fullWidth\n                    autoComplete=\"shipping address-line1\"\n                    onChange={onChange}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                    {loading ? \"loading\" : \"Salvar\"}\n                  </Button>\n                </Grid>\n                \n                <Grid item xs={12} sm={6}>\n                  <Button onClick={goGerencimento} variant=\"contained\" color=\"primary\">\n                    <Settings/>\n                  </Button>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Button onClick={goRelatorios} variant=\"contained\" color=\"primary\">\n                    <Assignment/>\n                  </Button>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n        </Container>\n      </main>\n    </div>\n    <ToastContainer />\n  </form> : <Permissao/>\n   \n   );\n};\n\nconst mapStateToProps = (state) => ({\n  stateReducer: state.user,\n  stateAll: state,\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      createUser,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatch)(CreatedUser);\n","/home/andrews_souza/Projects/vet-app/src/pages/pets/index.js",["284","285","286","287","288","289"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport { Link } from \"react-router-dom\"\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Menu from \"../../components/menu\";\nimport InputMask from \"react-input-mask\";\nimport Button from \"@material-ui/core/Button\";\nimport Pets from \"@material-ui/icons/Pets\";\n\nimport { toast ,ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { fetchAnimals, creatPessoa } from \"../../redux/actions\";\nimport { fetchCep } from \"./../../utils/cep\"\nimport { ValidarCPF } from \"./../../utils/cpf\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    padding: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 350,\n  },\n  Button: {\n    marginBottom: \"auto\",\n  },\n  pets: {\n    marginLeft: \"10px\",\n  },\n}));\n\nconst Animais = ({\n  fetchAnimals,\n  creatPessoa,\n  stateReducer,\n  stateReducerUser,\n  stateAll,\n}) => {\n\n  const classes = useStyles()\n  \n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight)\n  const [values, setValues] = useState({\n    nome: \"\",\n    cpf: \"\",\n    email: \"\",\n    telefone: \"\",\n    sus: \"\",\n    cep: \"\",\n    endereco: \"\",\n    bairro: \"\",\n    numero: \"\",\n    uf: \"\",\n  });\n\n  \n  const { nome, cpf, email, telefone, sus, cep, endereco, bairro, numero, uf } = values\n  let cpfConsumer = cpf ? cpf : null;\n  useEffect(async () => {\n    if(cpfConsumer !== null){\n      cpfConsumer = cpfConsumer.replace(/[^\\d]+/g,'');\n      if (cpfConsumer.length == 11 ) {\n        const cpfValidado = ValidarCPF(cpfConsumer)\n        if(!cpfValidado){\n          toast.error(\"CPF invalido !\")\n        }\n      }\n    }\n  }, [cpfConsumer]);\n\n  const onChange = useCallback((ev) => {\n    const { name, value } = ev.target;\n    setValues({ ...values, [name]: value });\n  }, [values])\n\n  const { success, loading } = stateReducer;\n  const history = useHistory();\n  \n  const onSubmit = useCallback((env) => {\n    env.preventDefault();\n    creatPessoa(values);\n    if (success) {\n      const timer = setTimeout(() => {\n        history.push(\"/dashboard\");\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n\n  }, [creatPessoa, values])\n\n  const findCep = useCallback(() => {\n    if (cep.length && cep.length >= 8) {\n      (async () => {\n        const response = await fetchCep(cep.replace(\"-\", \"\"))\n        if (response) {\n          setValues({\n            ...values,\n            uf: response.uf,\n            bairro: response.bairro,\n            endereco: response.logradouro,\n          })\n        }\n      })()\n    }\n  }, [cep, values])\n\n \n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Menu msg=\"Pets\" />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n        <h1>Responsável</h1>\n        <form onSubmit={onSubmit}>\n          <Grid item sm={12}>\n            <Paper className={fixedHeightPaper}>\n              <Grid container spacing={4}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    required\n                    id=\"nome\"\n                    name=\"nome\"\n                    label=\"Nome\"\n                    fullWidth\n                    value={nome}\n                    autoComplete=\"shipping address-line1\"\n                    onChange={onChange}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <InputMask\n                    mask=\"999.999.999-99\"\n                    maskChar=\" \"\n                    id=\"cpf\"\n                    name=\"cpf\"\n                    value={cpf}\n                    onChange={onChange}\n                  >\n                    {() => (\n                      <TextField\n                        fullWidth\n                        className={classes.inputText}\n                        label=\"CPF\"\n                        required\n                        name=\"cpf\"\n                      />\n                    )}\n                  </InputMask>\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={3}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"Email\"\n                    fullWidth\n                    autoComplete=\"shipping address-line1\"\n                    value={email}\n                    onChange={onChange}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <InputMask\n                    mask=\"(99) - 9 9999-9999\"\n                    maskChar=\" \"\n                    id=\"celular\"\n                    name=\"telefone\"\n                    value={telefone}\n                    onChange={onChange}\n                  >\n                    {() => (\n                      <TextField\n                        fullWidth\n                        className={classes.inputText}\n                        label=\"Celular\"\n                        name=\"telefone\"\n                      />\n                    )}\n                  </InputMask>\n                </Grid>\n              </Grid>\n              <Grid container spacing={3}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    id=\"sus\"\n                    name=\"sus\"\n                    label=\"Carteirinha do SUS\"\n                    fullWidth\n                    value={sus}\n                    onChange={onChange}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <InputMask\n                    mask=\"99999-999\"\n                    maskChar=\" \"\n                    id=\"cep\"\n                    name=\"cep\"\n                    value={cep}\n                    onChange={onChange}\n                    onBlur={findCep}\n                  >\n                    {() => (\n                      <TextField\n                        fullWidth\n                        className={classes.inputText}\n                        label=\"CEP\"\n                        required\n                        name=\"cep\"\n                      />\n                    )}\n                  </InputMask>\n                </Grid>\n              </Grid>\n              <Grid container spacing={3}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    id=\"endereco\"\n                    name=\"endereco\"\n                    label=\"Endereço\"\n                    fullWidth\n                    value={endereco}\n                    onChange={onChange}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    id=\"bairro\"\n                    name=\"bairro\"\n                    label=\"Bairro\"\n                    fullWidth\n                    value={bairro}\n                    onChange={onChange}\n                  />\n                </Grid>\n              </Grid>\n              <Grid container spacing={3}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    required\n                    id=\"numero\"\n                    name=\"numero\"\n                    label=\"numero\"\n                    value={numero}\n                    fullWidth\n                    onChange={onChange}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    id=\"uf\"\n                    name=\"uf\"\n                    label=\"UF\"\n                    value={uf}\n                    fullWidth\n                    autoComplete=\"shipping address-line1\"\n                    onChange={onChange}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n                    Salvar\n                  </Button>\n\n                  <Link to={`/pets/adicionar`}>\n                    <Button className={classes.pets} variant=\"contained\" color=\"primary\" >\n                      <Pets />\n                    </Button>\n                  </Link>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n        </form>\n      </Container>\n      </main>\n      <ToastContainer />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  stateReducer: state.animals,\n  stateReducerUser: state.user,\n  stateAll: state,\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      creatPessoa,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatch)(Animais);\n","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/index.js",["290","291","292","293","294","295","296"],"import React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Menu from \"../../components/menu\";\nimport Button from \"@material-ui/core/Button\";\nimport { Divider } from \"@material-ui/core\";\nimport { Typography } from \"@material-ui/core\";\nimport CardAnimal from \"./cardAnimal\";\nimport { fetchAnimals } from \"../../redux/actions\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Search from \"@material-ui/icons/Search\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputMask from \"react-input-mask\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nconst API = axios.create({\n  baseURL: \"http://localhost:5001\",\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n    marginTop: 64\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 300,\n  },\n  hr: {\n    marginTop: \"60px\",\n    border: \"1px solid \",\n  },\n  title: {\n    fontSize: \"30px\",\n    fontFamily: \"Patua One\",\n    position: \"absolute\",\n    marginTop: \"10px\",\n  },\n  divCard: {\n    display: \"flex\",\n    overflow: \"scroll\",\n    flexDirection: \"row\",\n    flexWrap: \"nowrap\",\n    padding: theme.spacing(2),\n    marginTop: 20\n  },\n  findCpf: {\n    width: \"20px\",\n    height: \"40px\",\n    marginTop: \"30px\",\n  },\n  wrapper: {\n    display: \"flex\",\n    marginLeft: 280,\n    marginTop: 15\n  },\n}));\n\nconst Atendimento = ({ fetchAnimals, stateReducer }) => {\n\n  useEffect(async () => {\n    await fetchAnimals();\n  }, []);\n\n  const host = \"http://localhost:5001/\";\n  \n  const history = useHistory();\n  const [fetchAnimaisPessoas, setFetchAnimais] = useState();\n  const [modal, showModal] = useState(false);\n  const [animaisArray, setAnimaisArray] = useState([])\n  \n\n  const fetchAnimalsByPessoa =  (data) => {\n    const cpf = data;\n    const animais =  API.post(`${host}pessoas/fetch`, { cpf }).then((r) => r);\n    return animais;\n  };\n\n  const { success, loading } = stateReducer;\n  const setterAnimais= (animais) =>{\n    setAnimaisArray(animais)\n    showModal(true)\n  };\n  \n  const onSubmit = async (ev) => {\n    ev.preventDefault();\n    const { data } = await fetchAnimalsByPessoa(fetchAnimaisPessoas);\n    setterAnimais(data.animais)\n     \n   \n  };\n  \n  \n  const classes = useStyles();\n\n  return (\n    <form onSubmit={onSubmit} >\n      <div className={classes.root}>\n        <CssBaseline />\n        <Menu msg=\"Atendimento\" />\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <Typography className={classes.title}>Buscar Animais</Typography>\n            <Divider className={classes.hr} light=\"true\" />\n            <Grid item sm={12} className={classes.wrapper}>\n              <Grid container spacing={6}>\n                <Grid item xs={6} sm={6}>\n                  <InputMask\n                    mask=\"999.999.999-99\"\n                    maskChar=\" \"\n                    value={fetchAnimaisPessoas}\n                    onChange={(e) => setFetchAnimais(e.target.value)}\n                    id=\"cpf\"\n                    name=\"cpf\"\n                  >\n                    {() => (\n                      <TextField\n                        fullWidth\n                        className={classes.inputText}\n                        label=\"Buscar por CPF\"\n                        required\n                        name=\"cpf\"\n                      />\n                    )}\n                  </InputMask>\n                </Grid>\n\n                <Button\n                  variant=\"contained\"\n                  type=\"submit\"\n                  color=\"primary\"\n                  className={classes.findCpf}\n                >\n                  <Search />\n                </Button>\n              </Grid>\n            </Grid>\n           \n            {modal ? <Paper className={classes.divCard}> {animaisArray.map((el) => <CardAnimal data={el}></CardAnimal>) }</Paper> : null }\n\n            \n          </Container>\n        </main>\n      </div>\n    </form>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  stateReducer: state.animals,\n  stateReducerUser: state.user,\n  stateAll: state,\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      fetchAnimals,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatch)(Atendimento);\n","/home/andrews_souza/Projects/vet-app/src/pages/singin/index.js",["297","298"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { userAuthenticate, stateReducer } from '../../redux/actions';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst SignIn = ({userAuthenticate, stateReducer}) => {\n    const classes = useStyles();\n    const initialState = {\n        email: \"\",\n        password: \"\",\n    };\n    \n    const { isLoggd, loading } = stateReducer;\n    const history = useHistory();\n    const [values, setValues] = useState(initialState);\n\n    const onSubmit = async (ev) => {\n        ev.preventDefault();\n        await userAuthenticate(values)\n    };\n\n    useEffect(() => {\n        if (isLoggd) {\n            const timer = setTimeout(() => {\n                history.push('/dashboard')\n            }, 1000);\n            return () => clearTimeout(timer);\n        }\n    }, [isLoggd]);\n\n    const onChange = (ev) => {\n        const { name, value } = ev.target;\n        setValues({ ...values, [name]: value });\n    };\n\n    return (\n\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Entrar\n                    </Typography>\n                    <form className={classes.form} noValidate onSubmit={onSubmit}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                            onChange={onChange}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            onChange={onChange}\n                            name=\"password\"\n                            label=\"Senha\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                        <FormControlLabel\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\n                            label=\"Lembrar-me\"\n                        />\n                       \n                            <Button\n\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                type=\"submit\"\n                            >\n                                {loading ? ('loading'): ('Entrar')}\n                            </Button>\n                        \n                        \n                    </form>\n                </div>\n                <ToastContainer/>\n            </Container>\n            \n       \n    );\n};\n\nconst mapStateToProps = state => ({\n    stateReducer: state.user\n})\n\nconst mapDispatch = dispatch => bindActionCreators({\n    userAuthenticate\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatch)(SignIn);","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/index.js",["299","300","301","302","303","304"],"import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Menu from '../../components/menu';\nimport Chart from './chart';\nimport Orders from './orders';\nimport Deposits from './deposits';\nimport axios from \"axios\";\nimport { useSelector } from 'react-redux'\nimport { exitPessoa } from '../../redux/actions';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n}));\n\nconst API = axios.create({\n    baseURL: \"http://localhost:5001\",\n  });\nconst host = \"http://localhost:5001/\";\n\nconst getToday = async ()=>{\n    const { data } =  await API.get(`${host}animaistoday`).then((r) => r).catch(e => e);\n    return data\n};\nconst Dashboard = ({exitPessoa})=> {\n    \n    const permissao = useSelector(state => state.user)\n    \n    useEffect(()=>{\n        exitPessoa()\n    },[])\n    \n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Menu msg=\"Dashboard\" />\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n\n                    <Grid container spacing={3}>\n                        {/* Chart */}\n                        <Grid item xs={12} md={8} lg={9}>\n                            <Paper className={fixedHeightPaper}>\n                                <Chart />\n                            </Paper>\n                        </Grid>\n                        {/* Recent Deposits */}\n                        <Grid item xs={12} md={4} lg={3}>\n                            <Paper className={fixedHeightPaper}>\n                                <Deposits />\n                            </Paper>\n                        </Grid>\n                        {/* Recent Orders */}\n                        <Grid item xs={12}>\n                            <Paper className={classes.paper}>\n                                <Orders />\n                            </Paper>\n                        </Grid>\n                    </Grid>\n\n                </Container>\n            </main>\n        </div >\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    stateReducer: state.animals,\n    stateReducerUser: state.user,\n    stateAll: state,\n  });\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n        exitPessoa,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatch)(Dashboard);","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/dados/index.js",["305"],"import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Menu from \"../../../components/menu\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\nimport Permissao from '../permissaoMed';\n\nimport EditDados from \"./EditDados\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 80,\n  },\n  aaa: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: \"18px\",\n  },\n  table: {\n    marginTop: \"10px\",\n    padding: theme.spacing(2),\n    minHeight: 100,\n  },\n  createTratamento: {\n    marginTop: \"40px\",\n  },\n}));\n\nconst Prontuario = () => {\n  const history = useHistory();\n  const { id } = useParams();\n  const permissao = useSelector(state => state.user.userInfo.user)\n  const { funcao } = permissao\n  const onClick = (ev) => {\n    const types = ev.target.innerText;\n    switch (types) {\n      case \"PRONTUARIO\": {\n        return history.push(`/pets/prontuario/${id}`);\n      }\n\n      case \"TRATAMENTOS\": {\n        return history.push(`/pets/tratamentos/${id}`);\n      }\n\n      case \"ALERGIAS\": {\n        return history.push(`/pets/alergias/${id}`);\n      }\n\n      case \"MEDICAMENTO\": {\n        return history.push(`/pets/medicamentos/${id}`);\n      }\n\n      case \"VACINAS\": {\n        return history.push(`/pets/vacinas/${id}`);\n      }\n\n      case \"VERMIFUGO\": {\n        return history.push(`/pets/vermifugos/${id}`);\n      }\n\n      case \"DADOS\": {\n        return history.push(`/pets/dados/${id}`);\n      }\n\n      default:\n        return history.push(\"/dashboard\");\n    }\n  };\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  \n  return (\n    funcao === 'Administrativo' || funcao === 'Médico' ?\n    <div className={classes.root}>\n      <CssBaseline />\n      <Menu msg=\"Vermifugos\" />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid item sm={12}>\n            <Paper className={fixedHeightPaper}>\n              <Grid container spacing={3} className={classes.aaa}>\n                <Button variant=\"outlined\" onClick={onClick}>\n                  Prontuario\n                </Button>\n                <Button variant=\"outlined\" onClick={onClick}>\n                  Tratamentos\n                </Button>\n                <Button variant=\"outlined\" onClick={onClick}>\n                  Alergias\n                </Button>\n                <Button variant=\"outlined\" onClick={onClick}>\n                  Medicamento\n                </Button>\n                <Button variant=\"outlined\" onClick={onClick}>\n                  Vacinas\n                </Button>\n                <Button variant=\"outlined\" onClick={onClick}>\n                  Vermifugo\n                </Button>\n                <Button variant=\"contained\" onClick={onClick}>\n                  Dados\n                </Button>\n              </Grid>\n            </Paper>\n           \n              <Paper className={classes.table}>\n                <EditDados  data={id}/>\n              </Paper>\n            \n          </Grid>\n\n          <Box pt={4}>{/* <Footer /> */}</Box>\n        </Container>\n      </main>\n    </div>:<Permissao/>\n  );\n};\n\nexport default Prontuario;\n","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/index.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/index.js",["306","307"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Menu from '../../../components/menu';\nimport Button from '@material-ui/core/Button';\nimport { useHistory, useParams } from 'react-router-dom';\nimport TableProtuario from './ProtuarioTable'\nimport NoteAdd from '@material-ui/icons/NoteAdd';\nimport AdicionarProntuario from './AdicionarPronturio'\nimport { fetchAnimals } from '../../../redux/actions'\nimport EditProntuario from './EditProntuario'\nimport { useSelector } from 'react-redux';\nimport Permissao from '../permissaoMed';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 80,\n\n    },\n    gridContainer: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        padding: \"18px\"\n    },\n    table: {\n        marginTop: '10px',\n        padding: theme.spacing(2),\n        minHeight: 100\n    },\n    createProntuario: {\n        marginTop: '40px'\n    }\n}));\n\nconst Prontuario = ({ animalReducer, fetchAnimals }) => {\n\n    useEffect(async () => {\n        await fetchAnimals();\n      }, []);\n      const permissao = useSelector(state => state.user.userInfo.user)\n      const { funcao } = permissao\n    const history = useHistory();\n    const { id } = useParams();\n    const [createProntuarioButton, setCreateProntuario] = useState(false)\n\n    const [viewProntuario, setViewProntuario] = useState(false)\n    \n    const createProntuario = () => {\n        setViewProntuario(false)\n        setCreateProntuario(true)\n    }\n\n    const onClick = (ev) => {\n        const types = ev.target.innerText\n        switch (types) {\n\n            case 'PRONTUARIO': {\n                return history.push(`/pets/prontuario/${id}`)\n            }\n\n            case 'TRATAMENTOS': {\n                return history.push(`/pets/tratamentos/${id}`)\n            }\n\n            case 'ALERGIAS': {\n                return history.push(`/pets/alergias/${id}`)\n            }\n\n            case 'MEDICAMENTO': {\n                return history.push(`/pets/medicamentos/${id}`)\n            }\n\n            case 'VACINAS': {\n                return history.push(`/pets/vacinas/${id}`)\n            }\n\n            case 'VERMIFUGO': {\n                return history.push(`/pets/vermifugos/${id}`)\n            }\n\n            case 'DADOS': {\n                return history.push(`/pets/dados/${id}`)\n            }\n\n            default:\n                return history.push('/dashboard')\n        }\n    }\n\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n        funcao === 'Administrativo' || funcao === 'Médico' ?\n        <div className={classes.root}>\n            <CssBaseline />\n            <Menu msg=\"Atendimento\" />\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <Grid item sm={12}>\n                        <Paper className={fixedHeightPaper}>\n                            <Grid container spacing={3} className={classes.gridContainer}>\n                                <Button variant=\"contained\" onClick={onClick} >Prontuario</Button>\n                                <Button variant=\"outlined\" onClick={onClick} >Tratamentos</Button>\n                                <Button variant=\"outlined\" onClick={onClick} >Alergias</Button>\n                                <Button variant=\"outlined\" onClick={onClick} >Medicamento</Button>\n                                <Button variant=\"outlined\" onClick={onClick} >Vacinas</Button>\n                                <Button variant=\"outlined\" onClick={onClick} >Vermifugo</Button>\n                                <Button variant=\"outlined\" onClick={onClick} >Dados</Button>\n                            </Grid>\n                        </Paper>\n\n                        \n                        <Button className={classes.createProntuario} variant=\"contained\" onClick={createProntuario} type=\"submit\" color=\"primary\">\n                            <NoteAdd />\n                        </Button>\n\n                        {\n                            viewProntuario && viewProntuario !== false ?\n\n                                <Paper className={classes.table} >\n                                    {\n                                        <EditProntuario data={viewProntuario}/>\n                                    }\n                                </Paper> :\n                                <Paper className={classes.table} >\n                                    {\n                                        createProntuarioButton && createProntuarioButton === true ? <AdicionarProntuario /> : <TableProtuario viewProntuario={setViewProntuario} data={id} />\n                                    }\n                                </Paper>\n                        }\n\n                    </Grid>\n\n                    <Box pt={4}>\n                        {/* <Footer /> */}\n                    </Box>\n                </Container>\n            </main>\n        </div>:<Permissao/>\n    );\n};\n\n\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    fetchAnimals\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(Prontuario)","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/index.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/index.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/index.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/index.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/usuarios/TableUsuarios.js",["308","309","310","311","312"],"import React, { useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Visibility from '@material-ui/icons/Visibility'\nimport Button from '@material-ui/core/Button';\nimport { fetchUsuarios } from '../../redux/actions'\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst ProntuarioTable = ({ fetchUsuarios, data, animalReducer, viewProntuario }) => {\n    \n    useEffect(async()=>{\n         await fetchUsuarios()  \n    },[])\n    const history = useHistory()\n    \n    const pessoas = useSelector(state => state.user.fetchPessoas)\n    \n    \n    const showView = e => {\n        viewProntuario(e)\n    } \n    return (\n        <>\n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Nome</TableCell>\n                        <TableCell>Email</TableCell>\n                        <TableCell>Função</TableCell>\n                        <TableCell></TableCell>\n                        \n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    \n                    {pessoas.map((row) => (\n                        <TableRow key={row._id}>\n                            <TableCell>{row.nome}</TableCell>\n                            <TableCell>{row.email}</TableCell>\n                            <TableCell>{row.funcao}</TableCell>\n                            <TableCell>\n                               <Button onClick={()=> showView(row)} > <Visibility /> </Button>\n                            </TableCell>\n                            \n                        </TableRow>\n                    ))}\n                    \n                </TableBody>\n            </Table>\n            \n        </>\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    fetchUsuarios\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(ProntuarioTable)","/home/andrews_souza/Projects/vet-app/src/pages/usuarios/EditUsuario.js",["313","314","315","316"],"import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { updatedUsuario } from \"../../redux/actions\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useSelector } from \"react-redux\";\nimport InputMask from \"react-input-mask\";\nimport { CropFreeOutlined } from \"@material-ui/icons\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  table: {\n    marginTop: \"80px\",\n    padding: theme.spacing(2),\n    minHeight: 100,\n  },\n  divider: {\n    border: \"solid 1px\",\n    marginTop: \"10px\",\n  },\n  salvar: {\n    margin: \"10px\",\n  },\n  grids: {\n    paddingTop: \"10px\",\n  },\n}));\n\nconst EditProntuario = ({ updatedUsuario, userReducer, data }) => {\n  const { id } = useParams();\n  const veterinario = useSelector((state) => state.user.userInfo.user.nome);\n\n  const [nome, setNome] = useState(data.nome || \"\");\n  const [cpf, setCpf] = useState(data.cpf || \"\");\n  const [email, setEmail] = useState(data.email || \"\");\n  const [telefone, setTelefone] = useState(data.telefone || \"\");\n  const [crmv, setCrmv] = useState(data.crmv || \"\");\n  const [senha, setSenha] = useState('');\n  const [funcao, setFuncao] = useState(data.funcao || \"\");\n\n  const history = useHistory();\n\n  console.log(\"data\", data);\n  const onSubmit = async (ev) => {\n    ev.preventDefault();\n    updatedUsuario({\n      nome,\n      cpf,\n      email,\n      crmv,\n      telefone,\n      senha,\n      funcao,\n      data: Date.now(),\n      idDoProntuario: data._id,\n    });\n\n    const timer = setTimeout(() => {\n      history.push(\"/dashboard\");\n    }, 1000);\n    return () => clearTimeout(timer);\n  };\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Paper className={classes.table}>\n      <form onSubmit={onSubmit}>\n        <h1>{data.nome}</h1>\n        <Divider className={classes.divider} />\n        <Grid item sm={12} className={classes.grids}>\n          <Grid container spacing={6}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                required\n                id=\"nome\"\n                name=\"nome\"\n                label=\"Nome\"\n                type=\"text\"\n                value={nome}\n                variant=\"outlined\"\n                fullWidth\n                onChange={(e) => setNome(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n                required\n                id=\"email\"\n                name=\"email\"\n                label=\"Email\"\n                type=\"text\"\n                value={email}\n                variant=\"outlined\"\n                fullWidth\n                onChange={(e) => setEmail(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <InputMask\n                mask=\"999.999.999-99\"\n                maskChar=\" \"\n                onChange={(e) => setCpf(e.target.value)}\n                id=\"cpf\"\n                name=\"cpf\"\n                value={cpf}\n                variant=\"outlined\"\n                autoComplete=\"shipping address-line1\"\n              >\n                {() => (\n                  <TextField\n                    fullWidth\n                    className={classes.inputText}\n                    label=\"CPF\"\n                    required\n                    variant=\"outlined\"\n                    autoComplete=\"shipping address-line1\"\n                    name=\"cpf\"\n                  />\n                )}\n              </InputMask>\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <InputMask\n                mask=\"(99) - 9 9999-9999\"\n                maskChar=\" \"\n                value={telefone}\n                onChange={(e) => setTelefone(e.target.value)}\n                id=\"celular\"\n                name=\"telefone\"\n              >\n                {() => (\n                  <TextField\n                    fullWidth\n                    className={classes.inputText}\n                    label=\"Celular\"\n                    name=\"telefone\"\n                    variant=\"outlined\"\n                    autoComplete=\"shipping address-line1\"\n                  />\n                )}\n              </InputMask>\n            </Grid>\n\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n             \n                id=\"crmv\"\n                name=\"crmv\"\n                label=\"Crmv\"\n                type=\"text\"\n                value={crmv}\n                variant=\"outlined\"\n                fullWidth\n                onChange={(e) => setCrmv(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n               \n                id=\"senha\"\n                name=\"senha\"\n                label=\"Atulizar Senha\"\n                type=\"password\"\n                variant=\"outlined\"\n                fullWidth\n                onChange={(e) => setSenha(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n                  <FormControl fullWidth className={classes.formControl} >\n                      \n                    <InputLabel item >Função</InputLabel >\n                    <Select variant=\"outlined\" name=\"funcao\" onChange={(e) => setFuncao(e.target.value)} native>\n                    <option >{funcao}</option>\n                      <option value={\"Administrativo\"}>Administrativo</option>\n                      <option value={\"Médico\"}>Médico</option>\n                      <option value={\"Recepcionista\"}>Recepcionista</option>\n                    </Select>\n                  </FormControl>\n                </Grid>\n\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            className={classes.salvar}\n          >\n            Atualizar\n          </Button>\n        </Grid>\n      </form>\n      <ToastContainer />\n    </Paper>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  animalReducer: state.animals,\n  userReducer: state.user,\n  stateAll: state,\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      updatedUsuario,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatch)(EditProntuario);\n","/home/andrews_souza/Projects/vet-app/src/pages/usuarios/Permissao.js",["317"],"import React from \"react\";\nimport {  Redirect } from 'react-router-dom'\nimport { ToastContainer,toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n\n\nconst Permissao= ()=>{\n    return (\n        <>\n        <Redirect to=\"/dashboard\"/>\n        <ToastContainer></ToastContainer>\n        </>\n    )\n};\n\nexport default Permissao;","/home/andrews_souza/Projects/vet-app/src/components/menu.js",[],"/home/andrews_souza/Projects/vet-app/src/redux/constants/index.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/permissaoMed.js",["318"],"import React from \"react\";\nimport {  Redirect } from 'react-router-dom'\nimport { ToastContainer,toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst Permissao= ()=>{\n    return (\n        <>\n        <Redirect to=\"/dashboard\"/>\n        <ToastContainer></ToastContainer>\n        </>\n    )\n};\n\nexport default Permissao;","/home/andrews_souza/Projects/vet-app/src/utils/cpf.js",["319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336"],"export const ValidarCPF = (cpf)=> {\t\n\tcpf = cpf.replace(/[^\\d]+/g,'');\t\n\tif(cpf == '') return false;\t\t\n\tif (cpf.length != 11 || \n\t\tcpf == \"00000000000\" || \n\t\tcpf == \"11111111111\" || \n\t\tcpf == \"22222222222\" || \n\t\tcpf == \"33333333333\" || \n\t\tcpf == \"44444444444\" || \n\t\tcpf == \"55555555555\" || \n\t\tcpf == \"66666666666\" || \n\t\tcpf == \"77777777777\" || \n\t\tcpf == \"88888888888\" || \n\t\tcpf == \"99999999999\")\n\t\t\treturn false;\t\t\n\n\tlet add = 0;\t\n\tfor (let i=0; i < 9; i ++)\t\t\n\t\tadd += parseInt(cpf.charAt(i)) * (10 - i);\t\n\t\tlet rev = 11 - (add % 11);\t\n\t\tif (rev == 10 || rev == 11)\t\t\n\t\t\trev = 0;\t\n\t\tif (rev != parseInt(cpf.charAt(9)))\t\t\n\t\t\treturn false;\t\t\n\tadd = 0;\t\n\tfor (let i = 0; i < 10; i ++)\t\t\n\t\tadd += parseInt(cpf.charAt(i)) * (11 - i);\t\n\trev = 11 - (add % 11);\t\n\tif (rev == 10 || rev == 11)\t\n\t\trev = 0;\t\n\tif (rev != parseInt(cpf.charAt(10)))\n\t\treturn false;\t\t\n\treturn true;   \n};","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/EditVermifugo.js",["337"],"import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { updatedVermifugos } from \"../../../redux/actions\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  table: {\n    marginTop: \"80px\",\n    padding: theme.spacing(2),\n    minHeight: 100,\n  },\n  divider: {\n    border: \"solid 1px\",\n    marginTop: \"10px\",\n  },\n  salvar: {\n    margin: \"10px\",\n  },\n  grids: {\n    paddingTop: \"10px\",\n  },\n}));\n\nconst EditProntuario = ({ updatedVermifugos, userReducer, data }) => {\n\n  const { id } = useParams();\n  const veterinario = useSelector(state => state.user.userInfo.user.nome)\n  const [descricao, setDescricao] = useState(data.descricao || \"\");\n  const [vermifugo, setVermifugo] = useState(data.vermifugo || \"\");\n  \n  const history = useHistory();\n\n  const onSubmit = async (ev) => {\n    ev.preventDefault();\n    updatedVermifugos({\n      descricao,\n      vermifugo,\n      idAnimal: id,\n      veterinario,\n      data: Date.now(),\n      idDovermifugo: data._id,\n    });\n\n    const timer = setTimeout(() => {\n      history.push(\"/dashboard\");\n    }, 1000);\n    return () => clearTimeout(timer);\n  };\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Paper className={classes.table}>\n      <form onSubmit={onSubmit}>\n        <h1>Vermifugos</h1>\n        <Divider className={classes.divider} />\n        <Grid item sm={12} className={classes.grids}>\n          <Grid container spacing={6}>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"Tratramento\"\n                name=\"vermifugo\"\n                label=\"Vermifugo\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                value={vermifugo}\n                onChange={e => setVermifugo(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"descricao\"\n                label=\"Descrição\"\n                type=\"text\"\n                value={descricao}\n                multiline\n                rows={5}\n                variant=\"outlined\"\n                fullWidth\n                onChange={e => setDescricao(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            className={classes.salvar}\n          >\n            Atualizar\n          </Button>\n        </Grid>\n      </form>\n      <ToastContainer />\n    </Paper>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  animalReducer: state.animals,\n  userReducer: state.user,\n  stateAll: state,\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      updatedVermifugos,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatch)(EditProntuario);\n","/home/andrews_souza/Projects/vet-app/src/utils/cep.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/adicionarVermufugos.js",["338","339"],"import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { createVermifugos } from \"../../../redux/actions\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useSelector } from \"react-redux\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  table: {\n    marginTop: \"80px\",\n    padding: theme.spacing(2),\n    minHeight: 100,\n  },\n  divider: {\n    border: \"solid 1px\",\n    marginTop: \"10px\",\n  },\n  salvar: {\n    margin: \"10px\",\n  },\n  grids: {\n    paddingTop: \"10px\",\n  },\n}));\n\nconst AdicionarTratamento = ({ createVermifugos, userReducer }) => {\n  const { id } = useParams();\n  const veterinario = useSelector((state) => state.user.userInfo.user.nome);\n  const history = useHistory();\n\n  const [vermifugo, setVacina] = useState()\n  const [descricao, setDescricao]  = useState()\n  const [primeiraDose, setPrimeiraDose] = useState(false)\n  const [segundaDose, setSegundaDose] = useState(false)\n\n  const [values, setValues] = useState({\n    idAnimal: id,\n    veterinario,\n    data: Date.now(),\n  });\n\n  const onChange = (ev) => {\n    const { name, value } = ev.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const onSubmit = async (ev) => {\n    ev.preventDefault();\n    createVermifugos({\n        idAnimal: id,\n        veterinario,\n        data: Date.now(),\n        vermifugo,\n        descricao,\n        primeiraDose,\n        segundaDose\n    });\n\n    const timer = setTimeout(() => {\n      history.push(\"/dashboard\");\n    }, 1000);\n    return () => clearTimeout(timer);\n  };\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Paper className={classes.table}>\n      <form onSubmit={onSubmit}>\n        <h1>Vermifugos</h1>\n        <Divider className={classes.divider} />\n        <Grid item sm={12} className={classes.grids}>\n          <Grid container spacing={6}>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"Tratramento\"\n                name=\"vermifugo\"\n                label=\"Vermifugo\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                onChange={e => setVacina(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <label>\n                1º Dose\n                <input\n                  name=\"primeiraDose\"\n                  onChange={(e) => setPrimeiraDose(e.currentTarget.checked)}\n                  type=\"checkbox\"\n                ></input>\n              </label>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <label>\n                2º Dose\n                <input\n                  name=\"segundaDose\"\n                  onChange={(e) => setSegundaDose(e.currentTarget.checked)}\n                  type=\"checkbox\"\n                ></input>\n              </label>\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"descricao\"\n                label=\"Descrição\"\n                type=\"text\"\n                multiline\n                rows={5}\n                variant=\"outlined\"\n                fullWidth\n                onChange={e => setDescricao(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            className={classes.salvar}\n          >\n            Salvar\n          </Button>\n        </Grid>\n      </form>\n      <ToastContainer />\n    </Paper>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  animalReducer: state.animals,\n  userReducer: state.user,\n  stateAll: state,\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      createVermifugos,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatch)(AdicionarTratamento);\n","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/TableVermifugo.js",["340","341","342","343","344","345","346"],"import React, {useEffect, useState} from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Visibility from '@material-ui/icons/Visibility'\nimport Button from '@material-ui/core/Button';\nimport { fetchAnimals } from '../../../redux/actions'\nimport { useHistory } from 'react-router-dom';\nimport NoteAdd from '@material-ui/icons/NoteAdd';\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport CheckBoxOutlineBlank from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst ProntuarioTable = ({ fetchAnimals, data, animalReducer, viewTratamento }) => {\n    \n    useEffect(async()=>{\n        await fetchAnimals()\n    },[])\n    const history = useHistory()\n    const animal = useSelector(state => state.animals.animals)\n    const redenrTable = animal.filter(el => el._id === data)\n    \n    const classes = useStyles();\n    const showView = e => {\n        viewTratamento(e)\n    } \n    return (\n        <>\n            \n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Data</TableCell>\n                        <TableCell>Vermifugos</TableCell>\n                        <TableCell>Veterinário</TableCell>\n                        <TableCell>1º Dose</TableCell>\n                        <TableCell>2º Dose</TableCell>\n                        \n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {redenrTable[0].vermifugos.map((row) => (\n                        <TableRow key={row._id}>\n                            <TableCell>{row.data}</TableCell>\n                            <TableCell>{row.vermifugo}</TableCell>\n                            <TableCell>{row.veterinario}</TableCell>\n                            <TableCell>{row.primeiraDose ? <CheckBoxIcon/> : <CheckBoxOutlineBlank/>}</TableCell>\n                            <TableCell>{row.segundaDose ? <CheckBoxIcon/> : <CheckBoxOutlineBlank/> }</TableCell>\n                            <TableCell>\n                               <Button onClick={()=> showView(row)} > <Visibility /> </Button>\n                            </TableCell>\n                            \n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            \n        </>\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    fetchAnimals\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(ProntuarioTable)","/home/andrews_souza/Projects/vet-app/src/redux/actions/index.js",[],"/home/andrews_souza/Projects/vet-app/src/components/itensMenu.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/vacinasTable.js",["347","348","349","350","351","352","353"],"import React, {useEffect, useState} from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Visibility from '@material-ui/icons/Visibility'\nimport Button from '@material-ui/core/Button';\nimport { fetchAnimals } from '../../../redux/actions'\nimport { useHistory } from 'react-router-dom';\nimport NoteAdd from '@material-ui/icons/NoteAdd';\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport CheckBoxOutlineBlank from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport { useDispatch, useSelector } from 'react-redux';\nconst useStyles = makeStyles((theme) => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst ProntuarioTable = ({ fetchAnimals, data, animalReducer, viewTratamento }) => {\n    \n    useEffect(async()=>{\n        await fetchAnimals()\n    },[])\n    const history = useHistory()\n    const animal = useSelector(state => state.animals.animals)\n    const redenrTable = animal.filter(el => el._id === data)\n   \n    const classes = useStyles();\n    const showView = e => {\n        viewTratamento(e)\n    } \n    return (\n        <>\n            \n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Data</TableCell>\n                        <TableCell>Vacinas</TableCell>\n                        <TableCell>Veterinário</TableCell>\n                        <TableCell>1º Dose</TableCell>\n                        <TableCell>2º Dose</TableCell>\n                        \n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {redenrTable[0].vacinas.map((row) => (\n                        <TableRow key={row._id}>\n                            <TableCell>{row.data}</TableCell>\n                            <TableCell>{row.vacina}</TableCell>\n                            <TableCell>{row.veterinario}</TableCell>\n                            <TableCell>{row.primeiraDose ? <CheckBoxIcon/> : <CheckBoxOutlineBlank/>}</TableCell>\n                            <TableCell>{row.segundaDose ? <CheckBoxIcon/> : <CheckBoxOutlineBlank/> }</TableCell>\n                            <TableCell>\n                               <Button onClick={()=> showView(row)} > <Visibility /> </Button>\n                            </TableCell>\n                            \n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            \n        </>\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    fetchAnimals\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(ProntuarioTable)","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/EditVacinas.js",["354"],"import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { updatedVacinas } from \"../../../redux/actions\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  table: {\n    marginTop: \"80px\",\n    padding: theme.spacing(2),\n    minHeight: 100,\n  },\n  divider: {\n    border: \"solid 1px\",\n    marginTop: \"10px\",\n  },\n  salvar: {\n    margin: \"10px\",\n  },\n  grids: {\n    paddingTop: \"10px\",\n  },\n}));\n\nconst EditProntuario = ({ updatedVacinas, userReducer, data }) => {\n\n  const { id } = useParams();\n  const veterinario = useSelector(state => state.user.userInfo.user.nome)\n  const [descricao, setDescricao] = useState(data.descricao || \"\");\n  const [vacina, setVacina] = useState(data.vacina || \"\");\n  \n  const history = useHistory();\n\n  const onSubmit = async (ev) => {\n    ev.preventDefault();\n    updatedVacinas({\n      descricao,\n      vacina,\n      idAnimal: id,\n      veterinario,\n      data: Date.now(),\n      idDaVacina: data._id,\n    });\n\n    const timer = setTimeout(() => {\n      history.push(\"/dashboard\");\n    }, 1000);\n    return () => clearTimeout(timer);\n  };\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Paper className={classes.table}>\n      <form onSubmit={onSubmit}>\n        <h1>Vacinas</h1>\n        <Divider className={classes.divider} />\n        <Grid item sm={12} className={classes.grids}>\n          <Grid container spacing={6}>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"Tratramento\"\n                name=\"vacina\"\n                label=\"Vacinas\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                value={vacina}\n                onChange={e => setVacina(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"descricao\"\n                label=\"Descrição\"\n                type=\"text\"\n                value={descricao}\n                multiline\n                rows={5}\n                variant=\"outlined\"\n                fullWidth\n                onChange={e => setDescricao(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            className={classes.salvar}\n          >\n            Atualizar\n          </Button>\n        </Grid>\n      </form>\n      <ToastContainer />\n    </Paper>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  animalReducer: state.animals,\n  userReducer: state.user,\n  stateAll: state,\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      updatedVacinas,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatch)(EditProntuario);\n","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/adicionarVacinas.js",["355","356","357","358","359"],"import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { createVacinas } from \"../../../redux/actions\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useSelector } from \"react-redux\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport CheckBoxOutlineBlank from \"@material-ui/icons/CheckBoxOutlineBlank\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  table: {\n    marginTop: \"80px\",\n    padding: theme.spacing(2),\n    minHeight: 100,\n  },\n  divider: {\n    border: \"solid 1px\",\n    marginTop: \"10px\",\n  },\n  salvar: {\n    margin: \"10px\",\n  },\n  grids: {\n    paddingTop: \"10px\",\n  },\n  check: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\nconst AdicionarTratamento = ({ createVacinas, userReducer }) => {\n  const { id } = useParams();\n  const veterinario = useSelector((state) => state.user.userInfo.user.nome);\n  const history = useHistory();\n\n  const [vacina, setVacina] = useState()\n  const [descricao, setDescricao]  = useState()\n  const [primeiraDose, setPrimeiraDose] = useState(false)\n  const [segundaDose, setSegundaDose] = useState(false)\n\n  \n \n\n  const onSubmit = async (ev) => {\n    ev.preventDefault();\n    createVacinas({\n        idAnimal: id,\n        veterinario,\n        data: Date.now(),\n        vacina,\n        descricao,\n        primeiraDose,\n        segundaDose\n    });\n\n    const timer = setTimeout(() => {\n      history.push(\"/dashboard\");\n    }, 1000);\n    return () => clearTimeout(timer);\n  };\n \n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Paper className={classes.table}>\n      <form onSubmit={onSubmit}>\n        <h1>Vacinas</h1>\n        <Divider className={classes.divider} />\n        <Grid item sm={12} className={classes.grids}>\n          <Grid container spacing={6}>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"Tratramento\"\n                name=\"vacina\"\n                label=\"Vacina\"\n                type=\"text\"\n                variant=\"outlined\"\n                onChange={e => setVacina(e.target.value)}\n                fullWidth\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n            <label>1º Dose\n                <input name=\"primeiraDose\" onChange={e => setPrimeiraDose(e.currentTarget.checked)} type='checkbox'></input>\n            </label>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n            <label>2º Dose\n                <input  name=\"segundaDose\" onChange={e => setSegundaDose(e.currentTarget.checked)} type='checkbox'></input>\n            </label>\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"descricao\"\n                label=\"Descrição\"\n                type=\"text\"\n                multiline\n                rows={5}\n                variant=\"outlined\"\n                fullWidth\n                onChange={e => setDescricao(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            className={classes.salvar}\n          >\n            Salvar\n          </Button>\n        </Grid>\n      </form>\n      <ToastContainer />\n    </Paper>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  animalReducer: state.animals,\n  userReducer: state.user,\n  stateAll: state,\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      createVacinas,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatch)(AdicionarTratamento);\n","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/EditMedimento.js",["360"],"import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { updatedMedicamentos } from \"../../../redux/actions\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  table: {\n    marginTop: \"80px\",\n    padding: theme.spacing(2),\n    minHeight: 100,\n  },\n  divider: {\n    border: \"solid 1px\",\n    marginTop: \"10px\",\n  },\n  salvar: {\n    margin: \"10px\",\n  },\n  grids: {\n    paddingTop: \"10px\",\n  },\n}));\n\nconst EditProntuario = ({ updatedMedicamentos, userReducer, data }) => {\n\n  const { id } = useParams();\n  const veterinario = useSelector(state => state.user.userInfo.user.nome)\n  const [descricao, setDescricao] = useState(data.descricao || \"\");\n  const [medicamento, setMedicamentos] = useState(data.medicamento || \"\");\n  \n  const history = useHistory();\n\n  const onSubmit = async (ev) => {\n    ev.preventDefault();\n    updatedMedicamentos({\n      descricao,\n      medicamento,\n      idAnimal: id,\n      veterinario,\n      data: Date.now(),\n      idDoMedicamento: data._id,\n    });\n\n    const timer = setTimeout(() => {\n      history.push(\"/dashboard\");\n    }, 1000);\n    return () => clearTimeout(timer);\n  };\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Paper className={classes.table}>\n      <form onSubmit={onSubmit}>\n        <h1>Medicamentos</h1>\n        <Divider className={classes.divider} />\n        <Grid item sm={12} className={classes.grids}>\n          <Grid container spacing={6}>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"Tratramento\"\n                name=\"medicamento\"\n                label=\"Medicamento\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                value={medicamento}\n                onChange={e => setMedicamentos(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"descricao\"\n                label=\"Descrição\"\n                type=\"text\"\n                value={descricao}\n                multiline\n                rows={5}\n                variant=\"outlined\"\n                fullWidth\n                onChange={e => setDescricao(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            className={classes.salvar}\n          >\n            Atualizar\n          </Button>\n        </Grid>\n      </form>\n      <ToastContainer />\n    </Paper>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  animalReducer: state.animals,\n  userReducer: state.user,\n  stateAll: state,\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      updatedMedicamentos,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatch)(EditProntuario);\n","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/tableMedicamento.js",["361","362","363","364","365","366","367"],"import React, {useEffect, useState} from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Visibility from '@material-ui/icons/Visibility'\nimport Button from '@material-ui/core/Button';\nimport { fetchAnimals } from '../../../redux/actions'\nimport { useHistory } from 'react-router-dom';\nimport NoteAdd from '@material-ui/icons/NoteAdd';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst ProntuarioTable = ({ fetchAnimals, data, animalReducer, viewTratamento }) => {\n    \n    useEffect(async()=>{\n        await fetchAnimals()\n    },[])\n    const history = useHistory()\n    const animal = useSelector(state => state.animals.animals)\n    const redenrTable = animal.filter(el => el._id === data);\n    \n  \n    const classes = useStyles();\n    const showView = e => {\n        viewTratamento(e)\n    } \n    return (\n        <>\n            \n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Data</TableCell>\n                        <TableCell>Medicamentos</TableCell>\n                        <TableCell>Veterinário</TableCell>\n                        <TableCell></TableCell>\n                        \n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {redenrTable[0].medicamentos.map((row) => (\n                        <TableRow key={row._id}>\n                            <TableCell>{row.data}</TableCell>\n                            <TableCell>{row.medicamento}</TableCell>\n                            <TableCell>{row.veterinario}</TableCell>\n                            <TableCell>\n                               <Button onClick={()=> showView(row)} > <Visibility /> </Button>\n                            </TableCell>\n                            \n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            \n        </>\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    fetchAnimals\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(ProntuarioTable)","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/adicionarMedicamento.js",["368"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport { createMedicamentos } from '../../../redux/actions'\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    table: {\n        marginTop: '80px',\n        padding: theme.spacing(2),\n        minHeight: 100\n    },\n    divider: {\n        border: 'solid 1px',\n        marginTop: '10px'\n    },\n    salvar: {\n        margin: '10px'\n    },\n    grids:{\n        paddingTop: '10px'\n    }\n}));\n\nconst AdicionarTratamento = ({ createMedicamentos, userReducer }) => {\n\n\n    const { id } = useParams();\n    const veterinario = useSelector(state => state.user.userInfo.user.nome)\n    const history = useHistory();\n    \n    const [values, setValues] = useState({\n        idAnimal: id,\n        veterinario,\n        data: Date.now()\n    })\n\n    const onChange = (ev) => {\n        const { name, value } = ev.target;\n        setValues({ ...values, [name]: value });\n    };\n\n    const onSubmit = async (ev) => {\n        ev.preventDefault();\n        createMedicamentos(values)\n\n        const timer = setTimeout(() => {\n            history.push('/dashboard')\n        }, 1000);\n        return () => clearTimeout(timer);\n    };\n\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n\n        <Paper className={classes.table} >\n\n           \n            <form onSubmit={onSubmit}>\n            <h1>Medicamentos</h1>\n            <Divider className={classes.divider} />\n                <Grid item sm={12} className={classes.grids}>\n                    <Grid container spacing={6}>\n\n                        <Grid item xs={12} sm={12} >\n                            <TextField\n                                required\n                                id=\"medicamento\"\n                                name=\"medicamento\"\n                                label=\"Medicamento\"\n                                type=\"text\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={12} >\n                            <TextField\n                                required\n                                id=\"descricao\"\n                                name=\"descricao\"\n                                label=\"Descrição\"\n                                type=\"text\"\n                                multiline\n                                rows={5}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n         \n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Button variant=\"contained\" type=\"submit\" color=\"primary\" className={classes.salvar}>\n                        Salvar\n                    </Button>\n                </Grid>\n            </form>\n            <ToastContainer/>\n        </Paper>\n\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    createMedicamentos\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(AdicionarTratamento)","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/AdicionarPronturio.js",["369","370"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField'; \nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport { createProntuario } from '../../../redux/actions'\nimport { ToastContainer } from 'react-toastify';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    table: {\n        marginTop: '80px',\n        padding: theme.spacing(2),\n        minHeight: 100\n    },\n    divider: {\n        border: 'solid 1px',\n        marginTop: '10px'\n    },\n    salvar: {\n        margin: '10px'\n    },\n    grids:{\n        paddingTop: '10px'\n    }\n}));\n\nconst Prontuario = ({ createProntuario, userReducer }) => {\n\n\n    const { id } = useParams();\n   // const veterinario = userReducer.user.nome\n    const veterinario = useSelector(state => state.user.userInfo.user.nome)\n    console.log('veterinario',veterinario)\n    const history = useHistory();\n    const [values, setValues] = useState({\n        idAnimal: id,\n        veterinario,\n        data: Date.now()\n    })\n\n    const onChange = (ev) => {\n        const { name, value } = ev.target;\n        setValues({ ...values, [name]: value });\n    };\n\n    const onSubmit = async (ev) => {\n        ev.preventDefault();\n        createProntuario(values)\n\n        const timer = setTimeout(() => {\n            history.push('/dashboard')\n        }, 1000);\n        return () => clearTimeout(timer);\n    };\n\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n\n        <Paper className={classes.table} >\n\n           \n            <form onSubmit={onSubmit}>\n            <h1>Análise Geral</h1>\n            <Divider className={classes.divider} />\n                <Grid item sm={12} className={classes.grids}>\n                    <Grid container spacing={6}>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n                                required\n                                id=\"peso\"\n                                name=\"peso\"\n                                label=\"Peso\"\n                                type=\"number\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n                                required\n                                id=\"idade\"\n                                name=\"idade\"\n                                label=\"Idade\"\n                                type=\"number\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"descricao\"\n                                name=\"descricao\"\n                                label=\"Descrição\"\n                                type=\"textarea\"\n                                multiline\n                                rows={3}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"pregresso\"\n                                name=\"progresso\"\n                                label=\"Pregresso\"\n                                type=\"textarea\"\n                                multiline\n                                rows={3}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"resultado\"\n                                name=\"resultado\"\n                                label=\"Resultado\"\n                                type=\"textarea\"\n                                multiline\n                                rows={3}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <h1>Exame Físico</h1>\n                    <Divider className={classes.divider} />\n                    <Grid container spacing={6} className={classes.grids}>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"temperatura\"\n                                name=\"temperatura\"\n                                label=\"Temperatura Cº\"\n                                type=\"number\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"frequencia-respiratoria\"\n                                name=\"frequenciaRespiratoria\"\n                                label=\"Frequencia respiratoria (MPM)\"\n                                type=\"number\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"frequencia-cardiaca\"\n                                name=\"frequenciaCardiaca\"\n                                label=\"Frequencia Cardiaca (BPM)\"\n                                type=\"number\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"tempo-de-preenchimento-capilar\"\n                                name=\"tempoPreenchimentoCapilar\"\n                                label=\"Tempo de preenchimento capilar (S)\"\n                                type=\"number\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"mucosas\"\n                                name=\"mucosas\"\n                                label=\"Mucosas\"\n                                type=\"text\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"hidratacao\"\n                                name=\"hidratacao\"\n                                label=\"Hidratação\"\n                                type=\"text\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"ectoparasitos\"\n                                name=\"ectoparasitos\"\n                                label=\"Ectoparasitos\"\n                                type=\"text\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <h1>Exame Físico Específico</h1>\n                    <Divider className={classes.divider} />\n                    <Grid container spacing={6} className={classes.grids}>\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"exame-ficico\"\n                                name=\"exameFisico\"\n                                label=\"Exame Fífico Específico\"\n                                type=\"textarea\"\n                                multiline\n                                rows={3}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Button variant=\"contained\" type=\"submit\" color=\"primary\" className={classes.salvar}>\n                        Salvar\n                    </Button>\n                </Grid>\n            </form>\n            <ToastContainer/>\n        </Paper>\n\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    createProntuario\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(Prontuario)","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/EdittTratamento.js",["371"],"import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { updatedTratamento } from \"../../../redux/actions\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  table: {\n    marginTop: \"80px\",\n    padding: theme.spacing(2),\n    minHeight: 100,\n  },\n  divider: {\n    border: \"solid 1px\",\n    marginTop: \"10px\",\n  },\n  salvar: {\n    margin: \"10px\",\n  },\n  grids: {\n    paddingTop: \"10px\",\n  },\n}));\n\nconst EditProntuario = ({ updatedTratamento, userReducer, data }) => {\n\n  const { id } = useParams();\n  const veterinario = useSelector(state => state.user.userInfo.user.nome)\n  const [descricao, setDescricao] = useState(data.descricao || \"\");\n  const [tratamento, setTratamento] = useState(data.tratamento || \"\");\n\n  const history = useHistory();\n\n  const onSubmit = async (ev) => {\n    ev.preventDefault();\n    updatedTratamento({\n      descricao,\n      tratamento,\n      idAnimal: id,\n      veterinario,\n      data: Date.now(),\n      idDoTratamento: data._id,\n    });\n\n    const timer = setTimeout(() => {\n      history.push(\"/dashboard\");\n    }, 1000);\n    return () => clearTimeout(timer);\n  };\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Paper className={classes.table}>\n      <form onSubmit={onSubmit}>\n        <h1>Tratamentos</h1>\n        <Divider className={classes.divider} />\n        <Grid item sm={12} className={classes.grids}>\n          <Grid container spacing={6}>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"Tratramento\"\n                name=\"tratamento\"\n                label=\"Tratramento\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                value={tratamento}\n                onChange={e => setTratamento(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"descricao\"\n                label=\"Descrição\"\n                type=\"text\"\n                value={descricao}\n                multiline\n                rows={5}\n                variant=\"outlined\"\n                fullWidth\n                onChange={e => setDescricao(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            className={classes.salvar}\n          >\n            Atualizar\n          </Button>\n        </Grid>\n      </form>\n      <ToastContainer />\n    </Paper>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  animalReducer: state.animals,\n  userReducer: state.user,\n  stateAll: state,\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      updatedTratamento,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatch)(EditProntuario);\n","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/TratamentoTable.js",["372","373","374","375","376","377","378"],"import React, {useEffect, useState} from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Visibility from '@material-ui/icons/Visibility'\nimport Button from '@material-ui/core/Button';\nimport { fetchAnimals } from '../../../redux/actions'\nimport { useHistory } from 'react-router-dom';\nimport NoteAdd from '@material-ui/icons/NoteAdd';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst ProntuarioTable = ({ fetchAnimals, data, animalReducer, viewTratamento }) => {\n    \n    useEffect(async()=>{\n        await fetchAnimals()\n    },[])\n    const history = useHistory()\n    const animal = useSelector(state => state.animals.animals)\n    const redenrTable = animal.filter(el => el._id === data)\n    const classes = useStyles();\n    const showView = e => {\n        viewTratamento(e)\n    } \n    return (\n        <>\n            \n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Data</TableCell>\n                        <TableCell>Tratamento</TableCell>\n                        <TableCell>Veterinário</TableCell>\n                        <TableCell></TableCell>\n                        \n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {redenrTable[0].tratamentos.map((row) => (\n                        <TableRow key={row._id}>\n                            <TableCell>{row.data}</TableCell>\n                            <TableCell>{row.tratamento}</TableCell>\n                            <TableCell>{row.veterinario}</TableCell>\n                            <TableCell>\n                               <Button onClick={()=> showView(row)} > <Visibility /> </Button>\n                            </TableCell>\n                            \n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            \n        </>\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    fetchAnimals\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(ProntuarioTable)","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/EditProntuario.js",["379"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport { updatedProntuario } from '../../../redux/actions'\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    table: {\n        marginTop: '80px',\n        padding: theme.spacing(2),\n        minHeight: 100\n    },\n    divider: {\n        border: 'solid 1px',\n        marginTop: '10px'\n    },\n    salvar: {\n        margin: '10px'\n    },\n    grids: {\n        paddingTop: '10px'\n    }\n}));\n\nconst EditProntuario = ({ updatedProntuario, userReducer, data }) => {\n\n\n    const { id } = useParams();\n    const veterinario = useSelector(state => state.user.userInfo.user.nome)\n\n    const [peso, setPeso] = useState(data.peso || '')\n    const [idade, setIdade] = useState(data.idade || '')\n    const [descricao, setDescricao] = useState(data.descricao || '')\n    const [progresso, setProgresso] = useState(data.progresso || '')\n    const [resultado, setResultado] = useState(data.resultado || '')\n    const [temperatura, setTemperatura] = useState(data.temperatura || '')\n    const [frequenciaCardiaca, setFrequenciaCardiaca] = useState(data.frequenciaCardiaca || '')\n    const [frequenciaRespiratoria, setFrequenciaRespiratoria] = useState(data.frequenciaRespiratoria || '')\n    const [tempoPreenchimentoCapilar, setTempoPreenchimentoCapilar] = useState(data.tempoPreenchimentoCapilar || '')\n    const [mucosas, setMucosas] = useState(data.mucosas || '')\n    const [hidratacao, setHidratacao] = useState(data.hidratacao || '')\n    const [ectoparasitos, setEctoparasitos] = useState(data.ectoparasitos || '')\n    const [exameFisico, setExameFisico] = useState(data.exameFisico || '')\n\n    const history = useHistory();\n\n    \n\n\n    const onSubmit = async (ev) => {\n        ev.preventDefault();\n        updatedProntuario({\n            peso,\n            idade,\n            descricao,\n            progresso,\n            resultado,\n            temperatura,\n            frequenciaCardiaca,\n            frequenciaRespiratoria,\n            tempoPreenchimentoCapilar,\n            mucosas,\n            hidratacao,\n            ectoparasitos,\n            exameFisico,\n            idAnimal: id,\n            veterinario,\n            data: Date.now(),\n            idDoProntuario: data._id\n        })\n\n        const timer = setTimeout(() => {\n            history.push('/dashboard')\n        }, 1000);\n        return () => clearTimeout(timer);\n    };\n\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n\n        <Paper className={classes.table} >\n\n\n            <form onSubmit={onSubmit}>\n                <h1>Análise Geral</h1>\n                <Divider className={classes.divider} />\n                <Grid item sm={12} className={classes.grids}>\n                    <Grid container spacing={6}>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n                                required\n                                id=\"peso\"\n                                name=\"peso\"\n                                label=\"Peso\"\n                                type=\"number\"\n                                value={peso}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setPeso(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n                                required\n                                id=\"idade\"\n                                name=\"idade\"\n                                label=\"Idade\"\n                                type=\"number\"\n                                value={idade}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setIdade(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"descricao\"\n                                name=\"descricao\"\n                                label=\"Descrição\"\n                                type=\"textarea\"\n                                multiline\n                                value={descricao}\n                                rows={3}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setDescricao(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"pregresso\"\n                                name=\"progresso\"\n                                label=\"Pregresso\"\n                                type=\"textarea\"\n                                value={progresso}\n                                multiline\n                                rows={3}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setProgresso(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"resultado\"\n                                name=\"resultado\"\n                                label=\"Resultado\"\n                                type=\"textarea\"\n                                value={resultado}\n                                multiline\n                                rows={3}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setResultado(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <h1>Exame Físico</h1>\n                    <Divider className={classes.divider} />\n                    <Grid container spacing={6} className={classes.grids}>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"temperatura\"\n                                name=\"temperatura\"\n                                label=\"Temperatura Cº\"\n                                type=\"number\"\n                                value={temperatura}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setTemperatura(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"frequencia-respiratoria\"\n                                name=\"frequenciaRespiratoria\"\n                                label=\"Frequencia respiratoria (MPM)\"\n                                type=\"number\"\n                                value={frequenciaRespiratoria}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setFrequenciaRespiratoria(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"frequencia-cardiaca\"\n                                name=\"frequenciaCardiaca\"\n                                label=\"Frequencia Cardiaca (BPM)\"\n                                type=\"number\"\n                                value={frequenciaCardiaca}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setFrequenciaCardiaca(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"tempo-de-preenchimento-capilar\"\n                                name=\"tempoPreenchimentoCapilar\"\n                                label=\"Tempo de preenchimento capilar (S)\"\n                                type=\"number\"\n                                variant=\"outlined\"\n                                fullWidth\n                                value={tempoPreenchimentoCapilar}\n                                onChange={e => setTempoPreenchimentoCapilar(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"mucosas\"\n                                name=\"mucosas\"\n                                label=\"Mucosas\"\n                                value={mucosas}\n                                type=\"text\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setMucosas(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"hidratacao\"\n                                name=\"hidratacao\"\n                                label=\"Hidratação\"\n                                type=\"text\"\n                                value={hidratacao}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setHidratacao(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"ectoparasitos\"\n                                name=\"ectoparasitos\"\n                                label=\"Ectoparasitos\"\n                                type=\"text\"\n                                value={ectoparasitos}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setEctoparasitos(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <h1>Exame Físico Específico</h1>\n                    <Divider className={classes.divider} />\n                    <Grid container spacing={6} className={classes.grids}>\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"exame-ficico\"\n                                name=\"exameFisico\"\n                                label=\"Exame Fífico Específico\"\n                                type=\"textarea\"\n                                multiline\n                                value={exameFisico}\n                                rows={3}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setExameFisico(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Button variant=\"contained\" type=\"submit\" color=\"primary\" className={classes.salvar}>\n                        Atualizar\n                    </Button>\n                </Grid>\n            </form>\n            <ToastContainer />\n        </Paper>\n\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    updatedProntuario\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(EditProntuario)","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/ProtuarioTable.js",["380","381","382","383","384"],"import React, { useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Visibility from '@material-ui/icons/Visibility'\nimport Button from '@material-ui/core/Button';\nimport { fetchAnimals } from '../../../redux/actions'\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst ProntuarioTable = ({ fetchAnimals, data, animalReducer, viewProntuario }) => {\n    \n    useEffect(async()=>{\n         await fetchAnimals()  \n    },[])\n    const history = useHistory()\n    \n    const animal = useSelector(state => state.animals.animals)\n    const redenrTable = animal.filter(el => el._id === data)\n    \n    const showView = e => {\n        viewProntuario(e)\n    } \n    return (\n        <>\n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Data</TableCell>\n                        <TableCell>Descrição</TableCell>\n                        <TableCell>Veterinário</TableCell>\n                        <TableCell></TableCell>\n                        \n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    \n                    {redenrTable[0].prontuarios.map((row) => (\n                        <TableRow key={row._id}>\n                            <TableCell>{row.data}</TableCell>\n                            <TableCell>{row.descricao}</TableCell>\n                            <TableCell>{row.veterinario}</TableCell>\n                            <TableCell>\n                               <Button onClick={()=> showView(row)} > <Visibility /> </Button>\n                            </TableCell>\n                            \n                        </TableRow>\n                    ))}\n                    \n                </TableBody>\n            </Table>\n            \n        </>\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    fetchAnimals\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(ProntuarioTable)","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/tableAlergia.js",["385","386","387","388","389","390","391"],"import React, {useEffect, useState} from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Visibility from '@material-ui/icons/Visibility'\nimport Button from '@material-ui/core/Button';\nimport { fetchAnimals } from '../../../redux/actions'\nimport { useHistory } from 'react-router-dom';\nimport NoteAdd from '@material-ui/icons/NoteAdd';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst ProntuarioTable = ({ fetchAnimals, data, animalReducer, viewTratamento }) => {\n    \n    useEffect(async()=>{\n        await fetchAnimals()\n    },[])\n    \n    const history = useHistory()\n    const animal = useSelector(state => state.animals.animals)\n    const redenrTable = animal.filter(el => el._id === data);\n    \n    const classes = useStyles();\n    const showView = e => {\n        viewTratamento(e)\n    } \n    return (\n        <>\n            \n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Data</TableCell>\n                        <TableCell>Alergias</TableCell>\n                        <TableCell>Veterinário</TableCell>\n                        <TableCell></TableCell>\n                        \n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {redenrTable[0].alergias.map((row) => (\n                        <TableRow key={row._id}>\n                            <TableCell>{row.data}</TableCell>\n                            <TableCell>{row.alergias}</TableCell>\n                            <TableCell>{row.veterinario}</TableCell>\n                            <TableCell>\n                               <Button onClick={()=> showView(row)} > <Visibility /> </Button>\n                            </TableCell>\n                            \n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            \n        </>\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    fetchAnimals\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(ProntuarioTable)","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/editAlergia.js",["392"],"import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { updatedAlergias } from \"../../../redux/actions\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  table: {\n    marginTop: \"80px\",\n    padding: theme.spacing(2),\n    minHeight: 100,\n  },\n  divider: {\n    border: \"solid 1px\",\n    marginTop: \"10px\",\n  },\n  salvar: {\n    margin: \"10px\",\n  },\n  grids: {\n    paddingTop: \"10px\",\n  },\n}));\n\nconst EditProntuario = ({ updatedAlergias, userReducer, data }) => {\n\n  const { id } = useParams();\n  const veterinario = useSelector(state => state.user.userInfo.user.nome)\n  const [descricao, setDescricao] = useState(data.descricao || \"\");\n  const [alergias, setAlergias] = useState(data.alergias || \"\");\n\n  const history = useHistory();\n\n  const onSubmit = async (ev) => {\n    ev.preventDefault();\n    updatedAlergias({\n      descricao,\n      alergias,\n      idAnimal: id,\n      veterinario,\n      data: Date.now(),\n      idDaAlergia: data._id,\n    });\n\n    const timer = setTimeout(() => {\n      history.push(\"/dashboard\");\n    }, 1000);\n    return () => clearTimeout(timer);\n  };\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Paper className={classes.table}>\n      <form onSubmit={onSubmit}>\n        <h1>Alergias</h1>\n        <Divider className={classes.divider} />\n        <Grid item sm={12} className={classes.grids}>\n          <Grid container spacing={6}>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"Tratramento\"\n                name=\"alergias\"\n                label=\"Alergia\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                value={alergias}\n                onChange={e => setAlergias(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"descricao\"\n                label=\"Descrição\"\n                type=\"text\"\n                value={descricao}\n                multiline\n                rows={5}\n                variant=\"outlined\"\n                fullWidth\n                onChange={e => setDescricao(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            className={classes.salvar}\n          >\n            Atualizar\n          </Button>\n        </Grid>\n      </form>\n      <ToastContainer />\n    </Paper>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  animalReducer: state.animals,\n  userReducer: state.user,\n  stateAll: state,\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      updatedAlergias,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatch)(EditProntuario);\n","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/adicionarAlergias.js",["393"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport { createAlergias } from '../../../redux/actions'\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useSelector } from 'react-redux';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    table: {\n        marginTop: '80px',\n        padding: theme.spacing(2),\n        minHeight: 100\n    },\n    divider: {\n        border: 'solid 1px',\n        marginTop: '10px'\n    },\n    salvar: {\n        margin: '10px'\n    },\n    grids:{\n        paddingTop: '10px'\n    }\n}));\n\nconst AdicionarTratamento = ({ createAlergias, userReducer }) => {\n\n\n    const { id } = useParams();\n    const veterinario = useSelector(state => state.user.userInfo.user.nome)\n    const history = useHistory();\n    \n    const [values, setValues] = useState({\n        idAnimal: id,\n        veterinario,\n        data: Date.now()\n    })\n\n    const onChange = (ev) => {\n        const { name, value } = ev.target;\n        setValues({ ...values, [name]: value });\n    };\n\n    const onSubmit = async (ev) => {\n        ev.preventDefault();\n        createAlergias(values)\n\n        const timer = setTimeout(() => {\n            history.push('/dashboard')\n        }, 1000);\n        return () => clearTimeout(timer);\n    };\n\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n\n        <Paper className={classes.table} >\n\n           \n            <form onSubmit={onSubmit}>\n            <h1>Alergias</h1>\n            <Divider className={classes.divider} />\n                <Grid item sm={12} className={classes.grids}>\n                    <Grid container spacing={6}>\n\n                        <Grid item xs={12} sm={12} >\n                            <TextField\n                                required\n                                id=\"alergias\"\n                                name=\"alergias\"\n                                label=\"Alergias\"\n                                type=\"text\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={12} >\n                            <TextField\n                                required\n                                id=\"descricao\"\n                                name=\"descricao\"\n                                label=\"Descrição\"\n                                type=\"text\"\n                                multiline\n                                rows={5}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n         \n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Button variant=\"contained\" type=\"submit\" color=\"primary\" className={classes.salvar}>\n                        Salvar\n                    </Button>\n                </Grid>\n            </form>\n            <ToastContainer/>\n        </Paper>\n\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    createAlergias\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(AdicionarTratamento)","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/dados/EditDados.js",["394","395","396","397","398","399"],"import React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { updatedVermifugos, fetchAnimals } from \"../../../redux/actions\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  table: {\n    marginTop: \"80px\",\n    padding: theme.spacing(2),\n    minHeight: 100,\n  },\n  divider: {\n    border: \"solid 1px\",\n    marginTop: \"10px\",\n  },\n  salvar: {\n    margin: \"10px\",\n  },\n  grids: {\n    paddingTop: \"10px\",\n  },\n}));\n\nconst EditProntuario = ({\n  updatedVermifugos,\n  userReducer,\n  fetchAnimals,\n  animalReducer,\n}) => {\n  const { id } = useParams();\n  useEffect(async () => {\n    await fetchAnimals();\n  }, []);\n\n  const animal = animalReducer.animals;\n\n  const redenrTable = animal.filter((el) => el._id === id);\n  const veterinario = useSelector(state => state.user.userInfo.user.nome)\n\n  const [nome, setNome] = useState(redenrTable[0].nome || \"\");\n  const [especie, setEspecie] = useState(redenrTable[0].especie || \"\");\n  const [raca, setRaca] = useState(redenrTable[0].raca || \"\");\n  const [cpf, setCpf] = useState(redenrTable[0].cpf || \"\");\n  const [idade, setIdade] = useState(redenrTable[0].idade || \"\");\n  const [sexo, setSexo] = useState(redenrTable[0].sexo || \"\");\n  const [pelagem, setPelagem] = useState(redenrTable[0].pelagem || \"\");\n  const [temperamento, setTemperamento] = useState(\n    redenrTable[0].temperamento || \"\"\n  );\n  const [peso, setPeso] = useState(redenrTable[0].peso || \"\");\n    \n \n  const history = useHistory();\n\n  const onSubmit = async (ev) => {\n    ev.preventDefault();\n    updatedVermifugos({\n      \n      idAnimal: id,\n      veterinario,\n      data: Date.now(),\n      idDovermifugo: id._id,\n    });\n\n    const timer = setTimeout(() => {\n      history.push(\"/dashboard\");\n    }, 1000);\n    return () => clearTimeout(timer);\n  };\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Paper className={classes.table}>\n      <form onSubmit={onSubmit}>\n        <h1>Dados</h1>\n        <Divider className={classes.divider} />\n        <Grid item sm={12} className={classes.grids}>\n          <Grid container spacing={6}>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"Tratramento\"\n                name=\"nome\"\n                label=\"Nome\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                value={nome}\n                onChange={(e) => setNome(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"especie\"\n                label=\"Especie\"\n                type=\"text\"\n                value={especie}        \n                variant=\"outlined\"\n                fullWidth\n                onChange={(e) => setEspecie(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"especie\"\n                label=\"Raça\"\n                type=\"text\"\n                value={raca}        \n                variant=\"outlined\"\n                fullWidth\n                onChange={(e) => setRaca(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"especie\"\n                label=\"CPF do Dono\"\n                type=\"text\"\n                value={cpf}        \n                variant=\"outlined\"\n                fullWidth\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"especie\"\n                label=\"Idade\"\n                type=\"text\"\n                value={idade}        \n                variant=\"outlined\"\n                fullWidth\n                onChange={(e) => setIdade(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"especie\"\n                label=\"Sexo\"\n                type=\"text\"\n                value={sexo}        \n                variant=\"outlined\"\n                fullWidth\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"especie\"\n                label=\"Pelagem\"\n                type=\"text\"\n                value={pelagem}        \n                variant=\"outlined\"\n                fullWidth\n                onChange={(e) => setPelagem(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"especie\"\n                label=\"Temperamento\"\n                type=\"text\"\n                value={temperamento}        \n                variant=\"outlined\"\n                fullWidth\n                onChange={(e) => setTemperamento(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"especie\"\n                label=\"Peso\"\n                type=\"text\"\n                value={peso}        \n                variant=\"outlined\"\n                fullWidth\n                onChange={(e) => setPeso(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          \n        </Grid>\n      </form>\n      <ToastContainer />\n    </Paper>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  animalReducer: state.animals,\n  userReducer: state.user,\n  stateAll: state,\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      updatedVermifugos,\n      fetchAnimals,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatch)(EditProntuario);\n","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/cadastrarTratamento.js",["400"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport { createTratamento } from '../../../redux/actions'\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    table: {\n        marginTop: '80px',\n        padding: theme.spacing(2),\n        minHeight: 100\n    },\n    divider: {\n        border: 'solid 1px',\n        marginTop: '10px'\n    },\n    salvar: {\n        margin: '10px'\n    },\n    grids:{\n        paddingTop: '10px'\n    }\n}));\n\nconst AdicionarTratamento = ({ createTratamento, userReducer }) => {\n\n\n    const { id } = useParams();\n    const veterinario = useSelector(state => state.user.userInfo.user.nome)\n    const history = useHistory();\n    \n    const [values, setValues] = useState({\n        idAnimal: id,\n        veterinario,\n        data: Date.now()\n    })\n\n    const onChange = (ev) => {\n        const { name, value } = ev.target;\n        setValues({ ...values, [name]: value });\n    };\n\n    const onSubmit = async (ev) => {\n        ev.preventDefault();\n        createTratamento(values)\n\n        const timer = setTimeout(() => {\n            history.push('/dashboard')\n        }, 1000);\n        return () => clearTimeout(timer);\n    };\n\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n\n        <Paper className={classes.table} >\n\n           \n            <form onSubmit={onSubmit}>\n            <h1>Tratamentos</h1>\n            <Divider className={classes.divider} />\n                <Grid item sm={12} className={classes.grids}>\n                    <Grid container spacing={6}>\n\n                        <Grid item xs={12} sm={12} >\n                            <TextField\n                                required\n                                id=\"Tratramento\"\n                                name=\"tratamento\"\n                                label=\"Tratramento\"\n                                type=\"text\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={12} >\n                            <TextField\n                                required\n                                id=\"descricao\"\n                                name=\"descricao\"\n                                label=\"Descrição\"\n                                type=\"text\"\n                                multiline\n                                rows={5}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n         \n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Button variant=\"contained\" type=\"submit\" color=\"primary\" className={classes.salvar}>\n                        Salvar\n                    </Button>\n                </Grid>\n            </form>\n            <ToastContainer/>\n        </Paper>\n\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    createTratamento\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(AdicionarTratamento)","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/deposits.js",["401","402","403","404","405","406","407"],"import React, { useEffect, useState } from 'react';\nimport { format,moment, formatDistance, formatRelative, subDays } from 'date-fns'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport axios from \"axios\";\n\n\nconst useStyles = makeStyles({\n    depositContext: {\n        flex: 1,\n    },\n});\n\nconst dataFormat =  format( new Date (), 'yyyy-MM-dd')\n\nconst Deposits = ()=> {\n    const classes = useStyles();\n    \n    const API = axios.create({\n        baseURL: \"http://localhost:5001\",\n      });\n    const host = \"http://localhost:5001/\";\n    \n    const getToday = async ()=>{\n        const { data } =  await API.get(`${host}animaistoday`).then((r) => r).catch(e => e);\n        return data\n    };\n    const [numberAtendidos, setNumberAtendidos] = useState(0)\n    \n    useEffect(async()=>{\n        const response = await getToday()\n        setNumberAtendidos(response.length)\n    },[])\n    return (\n        <React.Fragment>\n            <Typography component=\"p\" variant=\"h4\">\n                {numberAtendidos}\n            </Typography>\n            <div>\n                <p> Atendidos Hoje </p>\n                {dataFormat}\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default Deposits;","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/orders.js",["408","409","410","411"],"import React, { useEffect, useState } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst Orders = ({ data })=> {\n\n    const API = axios.create({\n        baseURL: \"http://localhost:5001\",\n      });\n    const host = \"http://localhost:5001/\";\n    \n    const getToday = async ()=>{\n        const { data } =  await API.get(`${host}animaistoday`).then((r) => r).catch(e => e);\n        return data\n    };\n    const classes = useStyles();\n    const [animais, setAnimais ] = useState();\n    const [showModal, setShowModal] = useState(false)\n\n    useEffect(async()=>{\n        \n        const response = await getToday()\n        setAnimais(response)\n        setShowModal(true)\n    },[])\n\n    return (\n        <>\n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Nome</TableCell>\n                        <TableCell>Especie</TableCell>\n                        <TableCell>Raça</TableCell>\n                        <TableCell>Sexo</TableCell>\n                        <TableCell align=\"right\">Idade</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                   showModal ?  animais.map((row) => (\n                        <TableRow >\n                            <TableCell>{row.nome}</TableCell>\n                            <TableCell>{row.especie}</TableCell>\n                            <TableCell>{row.raca}</TableCell>\n                            <TableCell>{row.sexo}</TableCell>\n                            <TableCell align=\"right\">{row.idade}</TableCell>\n                        </TableRow>\n                    ))\n                    : null\n                    }\n                </TableBody>\n            </Table>\n            \n        </>\n    );\n}\nexport default Orders;","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/chart.js",["412","413","414","415","416"],"import React, { useEffect, useState } from \"react\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Label,\n  ResponsiveContainer,\n} from \"recharts\";\nimport axios from \"axios\";\nimport { getHours } from 'date-fns'\n\nconst Chart = () => {\n  const theme = useTheme();\n  const [dataGrafico, setData] = useState([])\n  const [numberAtendidos, setNumberAtendidos] = useState(0)\n\n  const [modal, setshowmodal] = useState(false)\n\n  const API = axios.create({\n    baseURL: \"http://localhost:5001\",\n  });\n  const host = \"http://localhost:5001/\";\n  const createData= (time, amount)=> {\n    return { time, amount };\n  }\n  const getToday = async () => {\n    const { data } = await API.get(`${host}animaistoday`)\n      .then((r) => r)\n      .catch((e) => e);\n    return data;\n  };\n  let count = 0 \n  const dataAraay = []\n\n  useEffect(async()=>{\n    const response = await getToday()\n    response.forEach(element => {\n        count++\n        const horas = getHours(new Date(element.createdAt))\n        dataAraay.push({time: horas, amount:count})\n    });\n    setshowmodal(true)\n    setData(dataAraay)\n},[])\n\n  return (\n    <React.Fragment>\n        {   \n            modal ?\n             <ResponsiveContainer>\n            <LineChart\n              data={dataGrafico}\n              margin={{\n                top: 16,\n                right: 16,\n                bottom: 0,\n                left: 24,\n              }}\n            >\n              <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n              <YAxis stroke={theme.palette.text.secondary}>\n                <Label\n                  angle={270}\n                  position=\"left\"\n                  style={{ textAnchor: \"middle\", fill: theme.palette.text.primary }}\n                >\n                  Hoje\n                </Label>\n              </YAxis>\n              <Line\n                type=\"monotone\"\n                dataKey=\"amount\"\n                stroke={theme.palette.primary.main}\n                dot={false}\n              />\n            </LineChart>\n          </ResponsiveContainer> \n          : null\n        }\n      \n\n    </React.Fragment>\n  );\n};\n\nexport default Chart;\n","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/cardAnimal.js",["417","418","419"],"import React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { Typography } from '@material-ui/core';\nimport { Card, CardActions, CardContent } from '@material-ui/core';\nimport Prontuario from './prontuario';\n\nconst useStyles = makeStyles((theme) => ({\n    Card: {\n        width: '220px',\n        margin: 8\n    }\n}));\n\nconst bull = (\n    <Box\n        component=\"span\"\n        sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\n    >\n        \n    </Box>\n);\nconst CardAnimal = ({ data }) => {\n    const history = useHistory()\n    \n    const { nome, idade, raca, especie, sexo, pelagem, temperamento, peso, _id:id  } = data;\n    \n    const onClick = () => {\n        history.push(`pets/prontuario/${id}`)\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.Card}>\n            <CardContent>\n                <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                    {especie}\n                </Typography>\n                <Typography variant=\"h5\" component=\"div\">\n                    {nome}\n                </Typography>\n\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                    Raça: {raca}\n                </Typography>\n\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                    Idade: {idade}\n                </Typography>\n\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                    Sexo: {sexo}\n                </Typography>\n\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                    Peso: {peso}\n                </Typography>\n\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                    Temperamento: {temperamento}\n                </Typography>\n\n            </CardContent>\n            <CardActions>\n                <Button size=\"small\" onClick={onClick}>Prontuário</Button>\n            </CardActions>\n        </Card>\n    )\n};\n\nexport default CardAnimal;","/home/andrews_souza/Projects/vet-app/src/pages/usuarios/Relatorios.js",["420","421","422","423","424"],{"ruleId":"425","replacedBy":"426"},{"ruleId":"427","replacedBy":"428"},{"ruleId":"429","severity":1,"message":"430","line":67,"column":15,"nodeType":"431","messageId":"432","endLine":67,"endColumn":22},{"ruleId":"429","severity":1,"message":"433","line":12,"column":8,"nodeType":"431","messageId":"432","endLine":12,"endColumn":14},{"ruleId":"429","severity":1,"message":"434","line":15,"column":8,"nodeType":"431","messageId":"432","endLine":15,"endColumn":15},{"ruleId":"435","severity":1,"message":"436","line":69,"column":15,"nodeType":"437","endLine":71,"endColumn":8},{"ruleId":"435","severity":1,"message":"438","line":71,"column":10,"nodeType":"439","endLine":71,"endColumn":12,"suggestions":"440"},{"ruleId":"429","severity":1,"message":"441","line":76,"column":11,"nodeType":"431","messageId":"432","endLine":76,"endColumn":18},{"ruleId":"429","severity":1,"message":"442","line":79,"column":12,"nodeType":"431","messageId":"432","endLine":79,"endColumn":34},{"ruleId":"429","severity":1,"message":"443","line":83,"column":11,"nodeType":"431","messageId":"432","endLine":83,"endColumn":27},{"ruleId":"429","severity":1,"message":"444","line":91,"column":11,"nodeType":"431","messageId":"432","endLine":91,"endColumn":27},{"ruleId":"429","severity":1,"message":"445","line":69,"column":12,"nodeType":"431","messageId":"432","endLine":69,"endColumn":19},{"ruleId":"429","severity":1,"message":"446","line":20,"column":22,"nodeType":"431","messageId":"432","endLine":20,"endColumn":34},{"ruleId":"429","severity":1,"message":"447","line":20,"column":36,"nodeType":"431","messageId":"432","endLine":20,"endColumn":44},{"ruleId":"429","severity":1,"message":"448","line":80,"column":11,"nodeType":"431","messageId":"432","endLine":80,"endColumn":15},{"ruleId":"429","severity":1,"message":"449","line":80,"column":22,"nodeType":"431","messageId":"432","endLine":80,"endColumn":27},{"ruleId":"429","severity":1,"message":"450","line":80,"column":29,"nodeType":"431","messageId":"432","endLine":80,"endColumn":37},{"ruleId":"429","severity":1,"message":"451","line":80,"column":39,"nodeType":"431","messageId":"432","endLine":80,"endColumn":43},{"ruleId":"429","severity":1,"message":"452","line":80,"column":45,"nodeType":"431","messageId":"432","endLine":80,"endColumn":51},{"ruleId":"429","severity":1,"message":"453","line":80,"column":53,"nodeType":"431","messageId":"432","endLine":80,"endColumn":58},{"ruleId":"435","severity":1,"message":"436","line":87,"column":13,"nodeType":"437","endLine":97,"endColumn":4},{"ruleId":"435","severity":1,"message":"454","line":89,"column":21,"nodeType":"455","endLine":89,"endColumn":54},{"ruleId":"456","severity":1,"message":"457","line":90,"column":30,"nodeType":"458","messageId":"459","endLine":90,"endColumn":32},{"ruleId":"429","severity":1,"message":"460","line":20,"column":10,"nodeType":"431","messageId":"432","endLine":20,"endColumn":22},{"ruleId":"435","severity":1,"message":"436","line":89,"column":13,"nodeType":"437","endLine":99,"endColumn":4},{"ruleId":"435","severity":1,"message":"454","line":91,"column":21,"nodeType":"455","endLine":91,"endColumn":54},{"ruleId":"456","severity":1,"message":"457","line":92,"column":30,"nodeType":"458","messageId":"459","endLine":92,"endColumn":32},{"ruleId":"429","severity":1,"message":"461","line":106,"column":20,"nodeType":"431","messageId":"432","endLine":106,"endColumn":27},{"ruleId":"435","severity":1,"message":"462","line":119,"column":6,"nodeType":"439","endLine":119,"endColumn":27,"suggestions":"463"},{"ruleId":"429","severity":1,"message":"464","line":2,"column":8,"nodeType":"431","messageId":"432","endLine":2,"endColumn":12},{"ruleId":"429","severity":1,"message":"465","line":5,"column":8,"nodeType":"431","messageId":"432","endLine":5,"endColumn":11},{"ruleId":"435","severity":1,"message":"436","line":90,"column":13,"nodeType":"437","endLine":92,"endColumn":4},{"ruleId":"435","severity":1,"message":"466","line":92,"column":6,"nodeType":"439","endLine":92,"endColumn":8,"suggestions":"467"},{"ruleId":"429","severity":1,"message":"441","line":96,"column":9,"nodeType":"431","messageId":"432","endLine":96,"endColumn":16},{"ruleId":"429","severity":1,"message":"468","line":108,"column":11,"nodeType":"431","messageId":"432","endLine":108,"endColumn":18},{"ruleId":"429","severity":1,"message":"461","line":108,"column":20,"nodeType":"431","messageId":"432","endLine":108,"endColumn":27},{"ruleId":"429","severity":1,"message":"446","line":18,"column":28,"nodeType":"431","messageId":"432","endLine":18,"endColumn":40},{"ruleId":"435","severity":1,"message":"469","line":63,"column":8,"nodeType":"439","endLine":63,"endColumn":17,"suggestions":"470"},{"ruleId":"429","severity":1,"message":"471","line":1,"column":28,"nodeType":"431","messageId":"432","endLine":1,"endColumn":36},{"ruleId":"429","severity":1,"message":"465","line":5,"column":8,"nodeType":"431","messageId":"432","endLine":5,"endColumn":11},{"ruleId":"429","severity":1,"message":"472","line":8,"column":8,"nodeType":"431","messageId":"432","endLine":8,"endColumn":17},{"ruleId":"429","severity":1,"message":"473","line":57,"column":7,"nodeType":"431","messageId":"432","endLine":57,"endColumn":15},{"ruleId":"429","severity":1,"message":"474","line":63,"column":11,"nodeType":"431","messageId":"432","endLine":63,"endColumn":20},{"ruleId":"435","severity":1,"message":"475","line":67,"column":7,"nodeType":"439","endLine":67,"endColumn":9,"suggestions":"476"},{"ruleId":"429","severity":1,"message":"471","line":1,"column":17,"nodeType":"431","messageId":"432","endLine":1,"endColumn":25},{"ruleId":"435","severity":1,"message":"436","line":70,"column":15,"nodeType":"437","endLine":72,"endColumn":8},{"ruleId":"435","severity":1,"message":"466","line":72,"column":10,"nodeType":"439","endLine":72,"endColumn":12,"suggestions":"477"},{"ruleId":"429","severity":1,"message":"478","line":14,"column":10,"nodeType":"431","messageId":"432","endLine":14,"endColumn":21},{"ruleId":"429","severity":1,"message":"479","line":16,"column":7,"nodeType":"431","messageId":"432","endLine":16,"endColumn":16},{"ruleId":"435","severity":1,"message":"436","line":24,"column":15,"nodeType":"437","endLine":26,"endColumn":6},{"ruleId":"435","severity":1,"message":"438","line":26,"column":7,"nodeType":"439","endLine":26,"endColumn":9,"suggestions":"480"},{"ruleId":"429","severity":1,"message":"441","line":27,"column":11,"nodeType":"431","messageId":"432","endLine":27,"endColumn":18},{"ruleId":"429","severity":1,"message":"481","line":17,"column":10,"nodeType":"431","messageId":"432","endLine":17,"endColumn":26},{"ruleId":"429","severity":1,"message":"482","line":50,"column":11,"nodeType":"431","messageId":"432","endLine":50,"endColumn":13},{"ruleId":"429","severity":1,"message":"483","line":51,"column":9,"nodeType":"431","messageId":"432","endLine":51,"endColumn":20},{"ruleId":"429","severity":1,"message":"444","line":85,"column":9,"nodeType":"431","messageId":"432","endLine":85,"endColumn":25},{"ruleId":"429","severity":1,"message":"484","line":3,"column":25,"nodeType":"431","messageId":"432","endLine":3,"endColumn":30},{"ruleId":"429","severity":1,"message":"484","line":3,"column":25,"nodeType":"431","messageId":"432","endLine":3,"endColumn":30},{"ruleId":"456","severity":1,"message":"457","line":3,"column":9,"nodeType":"458","messageId":"459","endLine":3,"endColumn":11},{"ruleId":"456","severity":1,"message":"485","line":4,"column":17,"nodeType":"458","messageId":"459","endLine":4,"endColumn":19},{"ruleId":"456","severity":1,"message":"457","line":5,"column":7,"nodeType":"458","messageId":"459","endLine":5,"endColumn":9},{"ruleId":"456","severity":1,"message":"457","line":6,"column":7,"nodeType":"458","messageId":"459","endLine":6,"endColumn":9},{"ruleId":"456","severity":1,"message":"457","line":7,"column":7,"nodeType":"458","messageId":"459","endLine":7,"endColumn":9},{"ruleId":"456","severity":1,"message":"457","line":8,"column":7,"nodeType":"458","messageId":"459","endLine":8,"endColumn":9},{"ruleId":"456","severity":1,"message":"457","line":9,"column":7,"nodeType":"458","messageId":"459","endLine":9,"endColumn":9},{"ruleId":"456","severity":1,"message":"457","line":10,"column":7,"nodeType":"458","messageId":"459","endLine":10,"endColumn":9},{"ruleId":"456","severity":1,"message":"457","line":11,"column":7,"nodeType":"458","messageId":"459","endLine":11,"endColumn":9},{"ruleId":"456","severity":1,"message":"457","line":12,"column":7,"nodeType":"458","messageId":"459","endLine":12,"endColumn":9},{"ruleId":"456","severity":1,"message":"457","line":13,"column":7,"nodeType":"458","messageId":"459","endLine":13,"endColumn":9},{"ruleId":"456","severity":1,"message":"457","line":14,"column":7,"nodeType":"458","messageId":"459","endLine":14,"endColumn":9},{"ruleId":"456","severity":1,"message":"457","line":21,"column":11,"nodeType":"458","messageId":"459","endLine":21,"endColumn":13},{"ruleId":"456","severity":1,"message":"457","line":21,"column":24,"nodeType":"458","messageId":"459","endLine":21,"endColumn":26},{"ruleId":"456","severity":1,"message":"485","line":23,"column":11,"nodeType":"458","messageId":"459","endLine":23,"endColumn":13},{"ruleId":"456","severity":1,"message":"457","line":29,"column":10,"nodeType":"458","messageId":"459","endLine":29,"endColumn":12},{"ruleId":"456","severity":1,"message":"457","line":29,"column":23,"nodeType":"458","messageId":"459","endLine":29,"endColumn":25},{"ruleId":"456","severity":1,"message":"485","line":31,"column":10,"nodeType":"458","messageId":"459","endLine":31,"endColumn":12},{"ruleId":"429","severity":1,"message":"444","line":71,"column":9,"nodeType":"431","messageId":"432","endLine":71,"endColumn":25},{"ruleId":"429","severity":1,"message":"486","line":59,"column":9,"nodeType":"431","messageId":"432","endLine":59,"endColumn":17},{"ruleId":"429","severity":1,"message":"444","line":83,"column":9,"nodeType":"431","messageId":"432","endLine":83,"endColumn":25},{"ruleId":"429","severity":1,"message":"471","line":1,"column":27,"nodeType":"431","messageId":"432","endLine":1,"endColumn":35},{"ruleId":"429","severity":1,"message":"434","line":14,"column":8,"nodeType":"431","messageId":"432","endLine":14,"endColumn":15},{"ruleId":"429","severity":1,"message":"478","line":17,"column":10,"nodeType":"431","messageId":"432","endLine":17,"endColumn":21},{"ruleId":"435","severity":1,"message":"436","line":27,"column":15,"nodeType":"437","endLine":29,"endColumn":6},{"ruleId":"435","severity":1,"message":"466","line":29,"column":7,"nodeType":"439","endLine":29,"endColumn":9,"suggestions":"487"},{"ruleId":"429","severity":1,"message":"441","line":30,"column":11,"nodeType":"431","messageId":"432","endLine":30,"endColumn":18},{"ruleId":"429","severity":1,"message":"488","line":34,"column":11,"nodeType":"431","messageId":"432","endLine":34,"endColumn":18},{"ruleId":"429","severity":1,"message":"471","line":1,"column":27,"nodeType":"431","messageId":"432","endLine":1,"endColumn":35},{"ruleId":"429","severity":1,"message":"434","line":14,"column":8,"nodeType":"431","messageId":"432","endLine":14,"endColumn":15},{"ruleId":"429","severity":1,"message":"478","line":17,"column":10,"nodeType":"431","messageId":"432","endLine":17,"endColumn":21},{"ruleId":"435","severity":1,"message":"436","line":26,"column":15,"nodeType":"437","endLine":28,"endColumn":6},{"ruleId":"435","severity":1,"message":"466","line":28,"column":7,"nodeType":"439","endLine":28,"endColumn":9,"suggestions":"489"},{"ruleId":"429","severity":1,"message":"441","line":29,"column":11,"nodeType":"431","messageId":"432","endLine":29,"endColumn":18},{"ruleId":"429","severity":1,"message":"488","line":33,"column":11,"nodeType":"431","messageId":"432","endLine":33,"endColumn":18},{"ruleId":"429","severity":1,"message":"444","line":71,"column":9,"nodeType":"431","messageId":"432","endLine":71,"endColumn":25},{"ruleId":"429","severity":1,"message":"490","line":16,"column":8,"nodeType":"431","messageId":"432","endLine":16,"endColumn":16},{"ruleId":"429","severity":1,"message":"491","line":17,"column":8,"nodeType":"431","messageId":"432","endLine":17,"endColumn":18},{"ruleId":"429","severity":1,"message":"492","line":18,"column":8,"nodeType":"431","messageId":"432","endLine":18,"endColumn":20},{"ruleId":"429","severity":1,"message":"493","line":19,"column":8,"nodeType":"431","messageId":"432","endLine":19,"endColumn":28},{"ruleId":"429","severity":1,"message":"444","line":84,"column":9,"nodeType":"431","messageId":"432","endLine":84,"endColumn":25},{"ruleId":"429","severity":1,"message":"444","line":71,"column":9,"nodeType":"431","messageId":"432","endLine":71,"endColumn":25},{"ruleId":"429","severity":1,"message":"471","line":1,"column":27,"nodeType":"431","messageId":"432","endLine":1,"endColumn":35},{"ruleId":"429","severity":1,"message":"434","line":14,"column":8,"nodeType":"431","messageId":"432","endLine":14,"endColumn":15},{"ruleId":"429","severity":1,"message":"478","line":15,"column":10,"nodeType":"431","messageId":"432","endLine":15,"endColumn":21},{"ruleId":"435","severity":1,"message":"436","line":25,"column":15,"nodeType":"437","endLine":27,"endColumn":6},{"ruleId":"435","severity":1,"message":"466","line":27,"column":7,"nodeType":"439","endLine":27,"endColumn":9,"suggestions":"494"},{"ruleId":"429","severity":1,"message":"441","line":28,"column":11,"nodeType":"431","messageId":"432","endLine":28,"endColumn":18},{"ruleId":"429","severity":1,"message":"488","line":33,"column":11,"nodeType":"431","messageId":"432","endLine":33,"endColumn":18},{"ruleId":"429","severity":1,"message":"444","line":73,"column":11,"nodeType":"431","messageId":"432","endLine":73,"endColumn":27},{"ruleId":"429","severity":1,"message":"478","line":15,"column":10,"nodeType":"431","messageId":"432","endLine":15,"endColumn":21},{"ruleId":"429","severity":1,"message":"444","line":75,"column":11,"nodeType":"431","messageId":"432","endLine":75,"endColumn":27},{"ruleId":"429","severity":1,"message":"444","line":71,"column":9,"nodeType":"431","messageId":"432","endLine":71,"endColumn":25},{"ruleId":"429","severity":1,"message":"471","line":1,"column":27,"nodeType":"431","messageId":"432","endLine":1,"endColumn":35},{"ruleId":"429","severity":1,"message":"434","line":14,"column":8,"nodeType":"431","messageId":"432","endLine":14,"endColumn":15},{"ruleId":"429","severity":1,"message":"478","line":15,"column":10,"nodeType":"431","messageId":"432","endLine":15,"endColumn":21},{"ruleId":"435","severity":1,"message":"436","line":25,"column":15,"nodeType":"437","endLine":27,"endColumn":6},{"ruleId":"435","severity":1,"message":"466","line":27,"column":7,"nodeType":"439","endLine":27,"endColumn":9,"suggestions":"495"},{"ruleId":"429","severity":1,"message":"441","line":28,"column":11,"nodeType":"431","messageId":"432","endLine":28,"endColumn":18},{"ruleId":"429","severity":1,"message":"488","line":31,"column":11,"nodeType":"431","messageId":"432","endLine":31,"endColumn":18},{"ruleId":"429","severity":1,"message":"444","line":98,"column":11,"nodeType":"431","messageId":"432","endLine":98,"endColumn":27},{"ruleId":"429","severity":1,"message":"478","line":14,"column":10,"nodeType":"431","messageId":"432","endLine":14,"endColumn":21},{"ruleId":"429","severity":1,"message":"479","line":16,"column":7,"nodeType":"431","messageId":"432","endLine":16,"endColumn":16},{"ruleId":"435","severity":1,"message":"436","line":24,"column":15,"nodeType":"437","endLine":26,"endColumn":6},{"ruleId":"435","severity":1,"message":"466","line":26,"column":7,"nodeType":"439","endLine":26,"endColumn":9,"suggestions":"496"},{"ruleId":"429","severity":1,"message":"441","line":27,"column":11,"nodeType":"431","messageId":"432","endLine":27,"endColumn":18},{"ruleId":"429","severity":1,"message":"471","line":1,"column":27,"nodeType":"431","messageId":"432","endLine":1,"endColumn":35},{"ruleId":"429","severity":1,"message":"434","line":14,"column":8,"nodeType":"431","messageId":"432","endLine":14,"endColumn":15},{"ruleId":"429","severity":1,"message":"478","line":15,"column":10,"nodeType":"431","messageId":"432","endLine":15,"endColumn":21},{"ruleId":"435","severity":1,"message":"436","line":25,"column":15,"nodeType":"437","endLine":27,"endColumn":6},{"ruleId":"435","severity":1,"message":"466","line":27,"column":7,"nodeType":"439","endLine":27,"endColumn":9,"suggestions":"497"},{"ruleId":"429","severity":1,"message":"441","line":29,"column":11,"nodeType":"431","messageId":"432","endLine":29,"endColumn":18},{"ruleId":"429","severity":1,"message":"488","line":33,"column":11,"nodeType":"431","messageId":"432","endLine":33,"endColumn":18},{"ruleId":"429","severity":1,"message":"444","line":71,"column":9,"nodeType":"431","messageId":"432","endLine":71,"endColumn":25},{"ruleId":"429","severity":1,"message":"444","line":72,"column":11,"nodeType":"431","messageId":"432","endLine":72,"endColumn":27},{"ruleId":"429","severity":1,"message":"433","line":9,"column":8,"nodeType":"431","messageId":"432","endLine":9,"endColumn":14},{"ruleId":"435","severity":1,"message":"436","line":51,"column":13,"nodeType":"437","endLine":53,"endColumn":4},{"ruleId":"435","severity":1,"message":"466","line":53,"column":6,"nodeType":"439","endLine":53,"endColumn":8,"suggestions":"498"},{"ruleId":"429","severity":1,"message":"499","line":63,"column":15,"nodeType":"431","messageId":"432","endLine":63,"endColumn":21},{"ruleId":"429","severity":1,"message":"500","line":65,"column":16,"nodeType":"431","messageId":"432","endLine":65,"endColumn":23},{"ruleId":"429","severity":1,"message":"444","line":92,"column":9,"nodeType":"431","messageId":"432","endLine":92,"endColumn":25},{"ruleId":"429","severity":1,"message":"444","line":73,"column":11,"nodeType":"431","messageId":"432","endLine":73,"endColumn":27},{"ruleId":"429","severity":1,"message":"501","line":2,"column":17,"nodeType":"431","messageId":"432","endLine":2,"endColumn":23},{"ruleId":"429","severity":1,"message":"502","line":2,"column":25,"nodeType":"431","messageId":"432","endLine":2,"endColumn":39},{"ruleId":"429","severity":1,"message":"503","line":2,"column":41,"nodeType":"431","messageId":"432","endLine":2,"endColumn":55},{"ruleId":"429","severity":1,"message":"504","line":2,"column":57,"nodeType":"431","messageId":"432","endLine":2,"endColumn":64},{"ruleId":"429","severity":1,"message":"488","line":17,"column":11,"nodeType":"431","messageId":"432","endLine":17,"endColumn":18},{"ruleId":"435","severity":1,"message":"436","line":30,"column":15,"nodeType":"437","endLine":33,"endColumn":6},{"ruleId":"435","severity":1,"message":"505","line":33,"column":7,"nodeType":"439","endLine":33,"endColumn":9,"suggestions":"506"},{"ruleId":"429","severity":1,"message":"507","line":2,"column":8,"nodeType":"431","messageId":"432","endLine":2,"endColumn":12},{"ruleId":"429","severity":1,"message":"488","line":28,"column":11,"nodeType":"431","messageId":"432","endLine":28,"endColumn":18},{"ruleId":"435","severity":1,"message":"436","line":32,"column":15,"nodeType":"437","endLine":37,"endColumn":6},{"ruleId":"435","severity":1,"message":"505","line":37,"column":7,"nodeType":"439","endLine":37,"endColumn":9,"suggestions":"508"},{"ruleId":"429","severity":1,"message":"509","line":17,"column":10,"nodeType":"431","messageId":"432","endLine":17,"endColumn":25},{"ruleId":"429","severity":1,"message":"510","line":17,"column":27,"nodeType":"431","messageId":"432","endLine":17,"endColumn":45},{"ruleId":"429","severity":1,"message":"511","line":25,"column":9,"nodeType":"431","messageId":"432","endLine":25,"endColumn":19},{"ruleId":"435","severity":1,"message":"436","line":37,"column":13,"nodeType":"437","endLine":46,"endColumn":2},{"ruleId":"435","severity":1,"message":"512","line":46,"column":3,"nodeType":"439","endLine":46,"endColumn":5,"suggestions":"513"},{"ruleId":"429","severity":1,"message":"514","line":8,"column":8,"nodeType":"431","messageId":"432","endLine":8,"endColumn":18},{"ruleId":"429","severity":1,"message":"515","line":17,"column":7,"nodeType":"431","messageId":"432","endLine":17,"endColumn":11},{"ruleId":"429","severity":1,"message":"516","line":28,"column":47,"nodeType":"431","messageId":"432","endLine":28,"endColumn":54},{"ruleId":"429","severity":1,"message":"517","line":13,"column":10,"nodeType":"431","messageId":"432","endLine":13,"endColumn":20},{"ruleId":"429","severity":1,"message":"518","line":13,"column":22,"nodeType":"431","messageId":"432","endLine":13,"endColumn":31},{"ruleId":"435","severity":1,"message":"436","line":80,"column":13,"nodeType":"437","endLine":82,"endColumn":4},{"ruleId":"435","severity":1,"message":"466","line":82,"column":6,"nodeType":"439","endLine":82,"endColumn":8,"suggestions":"519"},{"ruleId":"429","severity":1,"message":"444","line":111,"column":9,"nodeType":"431","messageId":"432","endLine":111,"endColumn":25},"no-native-reassign",["520"],"no-negated-in-lhs",["521"],"no-unused-vars","'payload' is assigned a value but never used.","Identifier","unusedVar","'Button' is defined but never used.","'NoteAdd' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'fetchUsuarios'. Either include it or remove the dependency array. If 'fetchUsuarios' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["522"],"'history' is assigned a value but never used.","'createProntuarioButton' is assigned a value but never used.","'createProntuario' is assigned a value but never used.","'fixedHeightPaper' is assigned a value but never used.","'created' is assigned a value but never used.","'stateReducer' is defined but never used.","'stateAll' is defined but never used.","'nome' is assigned a value but never used.","'email' is assigned a value but never used.","'telefone' is assigned a value but never used.","'crmv' is assigned a value but never used.","'funcao' is assigned a value but never used.","'senha' is assigned a value but never used.","Assignments to the 'cpfConsumer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'fetchAnimals' is defined but never used.","'loading' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'history' and 'success'. Either include them or remove the dependency array.",["523"],"'clsx' is defined but never used.","'Box' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchAnimals'. Either include it or remove the dependency array. If 'fetchAnimals' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["524"],"'success' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["525"],"'useState' is defined but never used.","'TextField' is defined but never used.","'getToday' is assigned a value but never used.","'permissao' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'exitPessoa'. Either include it or remove the dependency array. If 'exitPessoa' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["526"],["527"],"'useDispatch' is defined but never used.","'useStyles' is assigned a value but never used.",["528"],"'CropFreeOutlined' is defined but never used.","'id' is assigned a value but never used.","'veterinario' is assigned a value but never used.","'toast' is defined but never used.","Expected '!==' and instead saw '!='.","'onChange' is assigned a value but never used.",["529"],"'classes' is assigned a value but never used.",["530"],"'Checkbox' is defined but never used.","'InputLabel' is defined but never used.","'CheckBoxIcon' is defined but never used.","'CheckBoxOutlineBlank' is defined but never used.",["531"],["532"],["533"],["534"],["535"],"'setCpf' is assigned a value but never used.","'setSexo' is assigned a value but never used.","'moment' is defined but never used.","'formatDistance' is defined but never used.","'formatRelative' is defined but never used.","'subDays' is defined but never used.","React Hook useEffect has a missing dependency: 'getToday'. Either include it or remove the dependency array.",["536"],"'Link' is defined but never used.",["537"],"'numberAtendidos' is assigned a value but never used.","'setNumberAtendidos' is assigned a value but never used.","'createData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'count', 'dataAraay', and 'getToday'. Either include them or remove the dependency array.",["538"],"'Prontuario' is defined but never used.","'bull' is assigned a value but never used.","'pelagem' is assigned a value but never used.","'useHistory' is defined but never used.","'useParams' is defined but never used.",["539"],"no-global-assign","no-unsafe-negation",{"desc":"540","fix":"541"},{"desc":"542","fix":"543"},{"desc":"544","fix":"545"},{"desc":"546","fix":"547"},{"desc":"548","fix":"549"},{"desc":"544","fix":"550"},{"desc":"540","fix":"551"},{"desc":"544","fix":"552"},{"desc":"544","fix":"553"},{"desc":"544","fix":"554"},{"desc":"544","fix":"555"},{"desc":"544","fix":"556"},{"desc":"544","fix":"557"},{"desc":"544","fix":"558"},{"desc":"559","fix":"560"},{"desc":"559","fix":"561"},{"desc":"562","fix":"563"},{"desc":"544","fix":"564"},"Update the dependencies array to be: [fetchUsuarios]",{"range":"565","text":"566"},"Update the dependencies array to be: [creatPessoa, history, success, values]",{"range":"567","text":"568"},"Update the dependencies array to be: [fetchAnimals]",{"range":"569","text":"570"},"Update the dependencies array to be: [history, isLoggd]",{"range":"571","text":"572"},"Update the dependencies array to be: [exitPessoa]",{"range":"573","text":"574"},{"range":"575","text":"570"},{"range":"576","text":"566"},{"range":"577","text":"570"},{"range":"578","text":"570"},{"range":"579","text":"570"},{"range":"580","text":"570"},{"range":"581","text":"570"},{"range":"582","text":"570"},{"range":"583","text":"570"},"Update the dependencies array to be: [getToday]",{"range":"584","text":"585"},{"range":"586","text":"585"},"Update the dependencies array to be: [count, dataAraay, getToday]",{"range":"587","text":"588"},{"range":"589","text":"570"},[2051,2053],"[fetchUsuarios]",[3086,3107],"[creatPessoa, history, success, values]",[2325,2327],"[fetchAnimals]",[1979,1988],"[history, isLoggd]",[1935,1937],"[exitPessoa]",[2117,2119],[954,956],[1141,1143],[1140,1142],[1009,1011],[1009,1011],[954,956],[1009,1011],[1352,1354],[941,943],"[getToday]",[1129,1131],[1139,1141],"[count, dataAraay, getToday]",[2312,2314]]