[{"/home/andrews_souza/Projects/vet-app/src/index.js":"1","/home/andrews_souza/Projects/vet-app/src/App.js":"2","/home/andrews_souza/Projects/vet-app/src/redux/reducers/index.js":"3","/home/andrews_souza/Projects/vet-app/src/Router.js":"4","/home/andrews_souza/Projects/vet-app/src/redux/reducers/animals.js":"5","/home/andrews_souza/Projects/vet-app/src/redux/reducers/user.js":"6","/home/andrews_souza/Projects/vet-app/src/redux/reducers/pessoa.js":"7","/home/andrews_souza/Projects/vet-app/src/pages/pets/pets.adicionar.js":"8","/home/andrews_souza/Projects/vet-app/src/pages/pets/index.js":"9","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/index.js":"10","/home/andrews_souza/Projects/vet-app/src/pages/singin/index.js":"11","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/index.js":"12","/home/andrews_souza/Projects/vet-app/src/pages/usuarios/index.js":"13","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/index.js":"14","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/index.js":"15","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/index.js":"16","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/dados/index.js":"17","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/index.js":"18","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/index.js":"19","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/index.js":"20","/home/andrews_souza/Projects/vet-app/src/components/menu.js":"21","/home/andrews_souza/Projects/vet-app/src/redux/constants/index.js":"22","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/chart.js":"23","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/orders.js":"24","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/cardAnimal.js":"25","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/deposits.js":"26","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/vacinasTable.js":"27","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/EditVacinas.js":"28","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/adicionarVacinas.js":"29","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/EdittTratamento.js":"30","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/TratamentoTable.js":"31","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/cadastrarTratamento.js":"32","/home/andrews_souza/Projects/vet-app/src/redux/actions/index.js":"33","/home/andrews_souza/Projects/vet-app/src/components/itensMenu.js":"34","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/EditVermifugo.js":"35","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/TableVermifugo.js":"36","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/adicionarVermufugos.js":"37","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/EditMedimento.js":"38","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/tableMedicamento.js":"39","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/dados/EditDados.js":"40","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/adicionarMedicamento.js":"41","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/AdicionarPronturio.js":"42","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/ProtuarioTable.js":"43","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/EditProntuario.js":"44","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/tableAlergia.js":"45","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/editAlergia.js":"46","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/adicionarAlergias.js":"47","/home/andrews_souza/Projects/vet-app/src/components/AdmRoute.js":"48","/home/andrews_souza/Projects/vet-app/src/pages/usuarios/Permissao.js":"49","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/permissaoMed.js":"50"},{"size":1159,"mtime":1634863100793,"results":"51","hashOfConfig":"52"},{"size":145,"mtime":1634771399539,"results":"53","hashOfConfig":"52"},{"size":203,"mtime":1632685300636,"results":"54","hashOfConfig":"52"},{"size":1948,"mtime":1634865392213,"results":"55","hashOfConfig":"52"},{"size":1039,"mtime":1634771399595,"results":"56","hashOfConfig":"52"},{"size":1326,"mtime":1634869863720,"results":"57","hashOfConfig":"52"},{"size":1120,"mtime":1632685300640,"results":"58","hashOfConfig":"52"},{"size":12297,"mtime":1634771399591,"results":"59","hashOfConfig":"52"},{"size":11572,"mtime":1634789236063,"results":"60","hashOfConfig":"52"},{"size":3175,"mtime":1634869719044,"results":"61","hashOfConfig":"52"},{"size":4643,"mtime":1633393620932,"results":"62","hashOfConfig":"52"},{"size":5048,"mtime":1634777494707,"results":"63","hashOfConfig":"52"},{"size":7236,"mtime":1634870278636,"results":"64","hashOfConfig":"52"},{"size":5327,"mtime":1634870403883,"results":"65","hashOfConfig":"52"},{"size":6400,"mtime":1634870462685,"results":"66","hashOfConfig":"52"},{"size":5361,"mtime":1634870948128,"results":"67","hashOfConfig":"52"},{"size":4222,"mtime":1634870886681,"results":"68","hashOfConfig":"52"},{"size":5324,"mtime":1634871058699,"results":"69","hashOfConfig":"52"},{"size":5348,"mtime":1634871098166,"results":"70","hashOfConfig":"52"},{"size":5353,"mtime":1634871004459,"results":"71","hashOfConfig":"52"},{"size":4576,"mtime":1634771399543,"results":"72","hashOfConfig":"52"},{"size":1569,"mtime":1632761528757,"results":"73","hashOfConfig":"52"},{"size":2187,"mtime":1634787639518,"results":"74","hashOfConfig":"52"},{"size":2273,"mtime":1634781850126,"results":"75","hashOfConfig":"52"},{"size":2158,"mtime":1634778552222,"results":"76","hashOfConfig":"52"},{"size":1262,"mtime":1634782199929,"results":"77","hashOfConfig":"52"},{"size":3005,"mtime":1634875659353,"results":"78","hashOfConfig":"52"},{"size":3774,"mtime":1634871985374,"results":"79","hashOfConfig":"52"},{"size":4579,"mtime":1634875836326,"results":"80","hashOfConfig":"52"},{"size":3824,"mtime":1634871971110,"results":"81","hashOfConfig":"52"},{"size":2588,"mtime":1634771399567,"results":"82","hashOfConfig":"52"},{"size":4280,"mtime":1634871896486,"results":"83","hashOfConfig":"52"},{"size":9790,"mtime":1634778573134,"results":"84","hashOfConfig":"52"},{"size":2160,"mtime":1634771399543,"results":"85","hashOfConfig":"52"},{"size":3815,"mtime":1634871999246,"results":"86","hashOfConfig":"52"},{"size":3015,"mtime":1634875728234,"results":"87","hashOfConfig":"52"},{"size":4706,"mtime":1634875884284,"results":"88","hashOfConfig":"52"},{"size":3845,"mtime":1634871962590,"results":"89","hashOfConfig":"52"},{"size":2601,"mtime":1634778558370,"results":"90","hashOfConfig":"52"},{"size":7303,"mtime":1634610314358,"results":"91","hashOfConfig":"52"},{"size":4290,"mtime":1634871876162,"results":"92","hashOfConfig":"52"},{"size":11380,"mtime":1634871690303,"results":"93","hashOfConfig":"52"},{"size":2616,"mtime":1634871775498,"results":"94","hashOfConfig":"52"},{"size":13564,"mtime":1634871835610,"results":"95","hashOfConfig":"52"},{"size":2587,"mtime":1634778555190,"results":"96","hashOfConfig":"52"},{"size":3792,"mtime":1634871955274,"results":"97","hashOfConfig":"52"},{"size":4260,"mtime":1634871844990,"results":"98","hashOfConfig":"52"},{"size":856,"mtime":1634865486646,"results":"99","hashOfConfig":"52"},{"size":350,"mtime":1634870202039,"results":"100","hashOfConfig":"52"},{"size":348,"mtime":1634870244977,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"1ewsjpn",{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"104"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"104"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"104"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"104"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"104"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"104"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"104"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"104"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"104"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"104"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"104"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"104"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"104"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"104"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"104"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"104"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"104"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"104"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"104"},"/home/andrews_souza/Projects/vet-app/src/index.js",[],["223","224"],"/home/andrews_souza/Projects/vet-app/src/App.js",[],"/home/andrews_souza/Projects/vet-app/src/redux/reducers/index.js",[],"/home/andrews_souza/Projects/vet-app/src/Router.js",["225"],"import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport SignIn from './pages/singin';\nimport Dashboard from './pages/dashboard';\n\nimport Atendimento  from './pages/atendimento';\nimport Usuarios from './pages/usuarios'\nimport Pets from './pages/pets';\n\nimport Alergias from './pages/atendimento/alergias';\nimport Dados from './pages/atendimento/dados';\nimport Medicamento from './pages/atendimento/medicamento';\nimport Prontuario from './pages/atendimento/prontuario';\nimport Tratamentos from './pages/atendimento/tratamentos';\nimport Vacinas from './pages/atendimento/vacinas';\nimport Vermifugo from './pages/atendimento/vermifugo';\n\nimport AdmRoute from './components/AdmRoute'\n\nimport AddPets from './pages/pets/pets.adicionar'\nconst Router = () => {\n    return(\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/\" exact component={SignIn} /> \n                <Route path=\"/dashboard\" exact component={Dashboard} /> \n                \n                <Route path=\"/atendimento\" exact component={Atendimento} /> \n                <Route path=\"/usuarios\" exact component={Usuarios} /> \n                <Route path=\"/pets\" exact component={Pets} /> \n                <Route path=\"/pets/adicionar\" exact component={AddPets} /> \n\n                <Route path=\"/pets/alergias/:id\" exact component={Alergias} /> \n                <Route path=\"/pets/dados/:id\" exact component={Dados} /> \n                <Route path=\"/pets/medicamentos/:id\" exact component={Medicamento} /> \n                <Route path=\"/pets/prontuario/:id\" exact component={Prontuario} /> \n                <Route path=\"/pets/tratamentos/:id\" exact component={Tratamentos} /> \n                <Route path=\"/pets/vacinas/:id\" exact component={Vacinas} /> \n                <Route path=\"/pets/vermifugos/:id\" exact component={Vermifugo} /> \n\n\n\n\n            </Switch>\n        </BrowserRouter>\n    )\n};\n\nexport default Router;","/home/andrews_souza/Projects/vet-app/src/redux/reducers/animals.js",[],"/home/andrews_souza/Projects/vet-app/src/redux/reducers/user.js",[],"/home/andrews_souza/Projects/vet-app/src/redux/reducers/pessoa.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/pets/pets.adicionar.js",["226","227"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Menu from '../../components/menu';\nimport InputMask from \"react-input-mask\";\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { creatAnimal } from '../../redux/actions';\n\nconst caes = ['Pastor-Alemão', 'Labrador', 'Zwergspitz', 'Husky', 'Golden', 'Buldogue', 'Poodle', 'Pit-Bull', 'Chihuahua', 'Shiba Inu', 'Rottweiler', 'Bobermann', 'Pug', 'Dachshulund'];\nconst gatos = ['Persa', ' Maine Coon', 'Siamês', 'Gato Inglês', 'Ragdoll', 'Munchkin', 'Norueguês', 'Siberiano'];\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        padding: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column'\n    },\n    fixedHeight: {\n        height: 350,\n    },\n    Button: {\n        marginBottom: 'auto'\n    },\n    pets: {\n        marginLeft: '10px'\n    }\n}));\n\nconst AdicionarAnimals = ({ creatAnimal }) => {\n\n    const [values, setValues] = useState();\n    const [created, setCreated] = useState(false);\n    const history = useHistory();\n\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    const [especie, setEspecie] = useState(null);\n\n    const selectEspecie = (ev) => {\n        const selected = ev.target.value\n        setEspecie(selected)\n    };\n\n    const onSubmit = async (ev) => {\n        ev.preventDefault();\n        creatAnimal(values)\n        setCreated(true)\n    };\n    const onChange = (ev) => {\n        const { name, value } = ev.target;\n        setValues({ ...values, [name]: value });\n       \n    }\n    const callTowFunction = (ev) =>{\n        onChange(ev)\n        selectEspecie(ev)\n    }\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Menu msg=\"Pets\" />\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <h1>\n                        Cadastrar Pet\n                    </h1>\n                    <form onSubmit={onSubmit}>\n                        <Grid item sm={10}>\n                            <Paper className={fixedHeightPaper}>\n                                <Grid container spacing={4}>\n                                    <Grid item xs={12} >\n                                        <TextField\n                                            required\n                                            id=\"nome\"\n                                            name=\"nome\"\n                                            label=\"Nome\"\n                                            fullWidth\n                                            onChange={onChange}\n                                            autoComplete=\"shipping address-line1\"\n                                        />\n                                    </Grid>\n                                </Grid>\n\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12} sm={6}>\n                                        <InputMask\n                                            mask=\"999.999.999-99\"\n                                            maskChar=\" \"\n                                            onChange={onChange}\n                                            id=\"cpf\"\n                                            name=\"cpf\"\n                                        >\n                                            {() => <TextField fullWidth className={classes.inputText} label=\"CPF do Dono\" required name=\"cpf\" />}\n                                        </InputMask>\n                                    </Grid>\n\n                                    <Grid item xs={12} sm={6}>\n                                        <FormControl fullWidth className={classes.formControl} >\n                                            <InputLabel item >Espécie</InputLabel>\n                                            <Select\n                                                name=\"especie\"\n                                                onChange={callTowFunction}\n                                                native\n                                            >\n\n                                                <option aria-label=\"None\" value=\"\" />\n                                                <option value={'Cachorro'}>Cachorro</option>\n                                                <option value={'Gato'}>Gato</option>\n\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n\n                                </Grid>\n\n                                <Grid container spacing={3}>\n\n                                    <Grid item xs={12} sm={6}>\n                                        <FormControl fullWidth className={classes.formControl} >\n                                            <InputLabel item >Raça</InputLabel>\n                                            <Select\n                                                name=\"raca\"\n                                                onChange={onChange}\n                                                native\n                                            >\n                                                <option aria-label=\"None\" value=\"\" />\n                                                {\n                                                    especie && especie === 'Cachorro' ? caes.map(i => <option value={i}>{i}</option>) : ''\n\n                                                }\n                                                {\n                                                    especie && especie === 'Gato' ? gatos.map(i => <option value={i}>{i}</option>) : ''\n\n                                                }\n\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <FormControl fullWidth className={classes.formControl} >\n                                            <InputLabel item >Pelagem</InputLabel>\n                                            <Select\n                                                name=\"pelagem\"\n                                                onChange={onChange}\n                                                native\n                                            >\n                                                <option aria-label=\"None\" value=\"\" />\n                                                <option value='Curto'>Curto</option>\n                                                <option value='Médio'>Médio</option>\n                                                <option value='Alto'>Alto</option>\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n\n\n                                </Grid>\n\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            required\n                                            id=\"idade\"\n                                            name=\"idade\"\n                                            label=\"Idade\"\n                                            type=\"number\"\n                                            onChange={onChange}\n                                            fullWidth\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <FormControl fullWidth className={classes.formControl} >\n                                            <InputLabel item >Sexo</InputLabel>\n                                            <Select\n                                                name='sexo'\n                                                native\n                                                onChange={onChange}\n                                            >\n                                                <option aria-label=\"None\" value=\"\" />\n                                                <option value='Femea'>Femea</option>\n                                                <option value='Macho'>Macho</option>\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n                                </Grid>\n\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            required\n                                            id=\"peso\"\n                                            name=\"peso\"\n                                            label=\"Peso\"\n                                            type=\"number\"\n                                            onChange={onChange}\n                                            fullWidth\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <FormControl fullWidth className={classes.formControl} >\n                                            <InputLabel item >Temperamento</InputLabel>\n                                            <Select\n                                                native\n                                                name='temperamento'\n                                                onChange={onChange}\n                                            >\n                                                <option aria-label=\"None\" value=\"\" />\n                                                <option value='Calmo'>Calmo</option>\n                                                <option value='Bravo'>Bravo</option>\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n                                            Adicionar\n                                        </Button>\n\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </Grid>\n                    </form>\n                </Container>\n            </main>\n            <ToastContainer />\n        </div>\n    );\n};\n\n\n\nconst mapStateToProps = state => ({\n    stateReducer: state.user\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    creatAnimal\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatch)(AdicionarAnimals);","/home/andrews_souza/Projects/vet-app/src/pages/pets/index.js",["228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Menu from \"../../components/menu\";\nimport InputMask from \"react-input-mask\";\nimport Button from \"@material-ui/core/Button\";\nimport Pets from \"@material-ui/icons/Pets\";\n\nimport { toast ,ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { fetchAnimals, creatPessoa } from \"../../redux/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    padding: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 350,\n  },\n  Button: {\n    marginBottom: \"auto\",\n  },\n  pets: {\n    marginLeft: \"10px\",\n  },\n}));\n\nconst Animais = ({\n  fetchAnimals,\n  creatPessoa,\n  stateReducer,\n  stateReducerUser,\n  stateAll,\n}) => {\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const history = useHistory();\n  const [values, setValues] = useState({});\n\n  const [nome, setNome] = useState();\n  const [cpf, setCPF] = useState();\n  const [email, setEmail] = useState();\n  const [telefone, setTelefone] = useState();\n  const [sus, setSus] = useState();\n\n  const [cep, setCep] = useState();\n\n  const [endereco, setEndereco] = useState();\n  const [bairro, setBairro] = useState();\n  const [numero, setNumero] = useState();\n  const [uf, setUf] = useState();\n\n  const showPetCadastro = () => {\n    history.push(\"/pets/adicionar\");\n  };\n\n\n  const onChange = (ev) => {\n    const { name, value } = ev.target;\n    setValues({ ...values, [name]: value });\n  };\n\nconst ValidarCPF = (cpf)=> {\t\n\tcpf = cpf.replace(/[^\\d]+/g,'');\t\n\tif(cpf == '') return false;\t\t\n\tif (cpf.length != 11 || \n\t\tcpf == \"00000000000\" || \n\t\tcpf == \"11111111111\" || \n\t\tcpf == \"22222222222\" || \n\t\tcpf == \"33333333333\" || \n\t\tcpf == \"44444444444\" || \n\t\tcpf == \"55555555555\" || \n\t\tcpf == \"66666666666\" || \n\t\tcpf == \"77777777777\" || \n\t\tcpf == \"88888888888\" || \n\t\tcpf == \"99999999999\")\n\t\t\treturn false;\t\t\n\n\tlet add = 0;\t\n\tfor (let i=0; i < 9; i ++)\t\t\n\t\tadd += parseInt(cpf.charAt(i)) * (10 - i);\t\n\t\tlet rev = 11 - (add % 11);\t\n\t\tif (rev == 10 || rev == 11)\t\t\n\t\t\trev = 0;\t\n\t\tif (rev != parseInt(cpf.charAt(9)))\t\t\n\t\t\treturn false;\t\t\n\tadd = 0;\t\n\tfor (let i = 0; i < 10; i ++)\t\t\n\t\tadd += parseInt(cpf.charAt(i)) * (11 - i);\t\n\trev = 11 - (add % 11);\t\n\tif (rev == 10 || rev == 11)\t\n\t\trev = 0;\t\n\tif (rev != parseInt(cpf.charAt(10)))\n\t\treturn false;\t\t\n\treturn true;   \n};\n\n\n  const fetchCep = async (data) => {\n    const options = {\n      method: \"GET\",\n      mode: \"cors\",\n      cache: \"default\",\n    };\n    const cep = await fetch(\n      `https://viacep.com.br/ws/${data}/json/`,\n      options\n    ).then((resp) => {\n      return resp.json();\n    });\n    return cep;\n  };\n\n  let cepConsumer = cep ? cep : null;\n  let cpfConsumer = cpf ? cpf : null;\n\n  useEffect(async () => {\n    if (cepConsumer != null && cepConsumer.length >= 8) {\n      cepConsumer = cepConsumer.replace(\"-\", \"\");\n      const cep = await fetchCep(cepConsumer);\n\n      if (cep) {\n        setUf(cep.uf);\n        setBairro(cep.bairro);\n        setNumero();\n        setEndereco(cep.logradouro);\n      }\n    }\n  }, [cepConsumer]);\n\n  useEffect(async () => {\n    \n    if(cpfConsumer !== null){\n      cpfConsumer = cpfConsumer.replace(/[^\\d]+/g,'');\n      if (cpfConsumer.length == 11 ) {\n        const cpfValidado = ValidarCPF(cpfConsumer)\n        if(!cpfValidado){\n          toast.error(\"CPF invalido !\")\n        }\n      }\n    }\n    \n    \n    \n  }, [cpfConsumer]);\n\n  const onSubmit = async (ev) => {\n    ev.preventDefault();\n    creatPessoa({\n      nome,\n      cpf,\n      email,\n      telefone,\n      sus,\n      cep,\n      endereco,\n      bairro,\n      numero,\n      uf\n    });\n\n    const timer = setTimeout(() => {\n      history.push(\"/dashboard\");\n    }, 1000);\n    return () => clearTimeout(timer);\n  };\n\n \n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Menu msg=\"Pets\" />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <h1>Responsável</h1>\n          <form onSubmit={onSubmit}>\n            <Grid item sm={10}>\n              <Paper className={fixedHeightPaper}>\n                <Grid container spacing={4}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      required\n                      id=\"nome\"\n                      name=\"nome\"\n                      label=\"Nome\"\n                      fullWidth\n                      value={nome}\n                      onChange={(e) => setNome(e.target.value)}\n                      autoComplete=\"shipping address-line1\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={6}>\n                    <InputMask\n                      mask=\"999.999.999-99\"\n                      maskChar=\" \"\n                      onChange={(e) => setCPF(e.target.value)}\n                      id=\"cpf\"\n                      name=\"cpf\"\n                      value={cpf}\n                    >\n                      {() => (\n                        <TextField\n                          fullWidth\n                          className={classes.inputText}\n                          label=\"CPF\"\n                          required\n                          name=\"cpf\"\n                        />\n                      )}\n                    </InputMask>\n                  </Grid>\n                </Grid>\n\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      onChange={onChange}\n                      type=\"email\"\n                      id=\"email\"\n                      name=\"email\"\n                      label=\"Email\"\n                      fullWidth\n                      onChange={(e) => setEmail(e.target.value)}\n                      autoComplete=\"shipping address-line1\"\n                      value={email}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={6}>\n                    <InputMask\n                      mask=\"(99) - 9 9999-9999\"\n                      maskChar=\" \"\n                      onChange={onChange}\n                      id=\"celular\"\n                      name=\"telefone\"\n                      value={telefone}\n                      onChange={(e) => setTelefone(e.target.value)}\n                    >\n                      {() => (\n                        <TextField\n                          fullWidth\n                          className={classes.inputText}\n                          label=\"Celular\"\n                          name=\"telefone\"\n                        />\n                      )}\n                    </InputMask>\n                  </Grid>\n                </Grid>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      onChange={(e) => setSus(e.target.value)}\n                      id=\"sus\"\n                      name=\"sus\"\n                      label=\"Carteirinha do SUS\"\n                      fullWidth\n                      value={sus}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={6}>\n                    <InputMask\n                      mask=\"99999-999\"\n                      maskChar=\" \"\n                      onChange={(e) => setCep(e.target.value)}\n                      id=\"cep\"\n                      name=\"cep\"\n                      value={cep}\n                    >\n                      {() => (\n                        <TextField\n                          fullWidth\n                          className={classes.inputText}\n                          label=\"CEP\"\n                          required\n                          name=\"cep\"\n                        />\n                      )}\n                    </InputMask>\n                  </Grid>\n                </Grid>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      id=\"endereco\"\n                      name=\"endereco\"\n                      label=\"Endereço\"\n                      fullWidth\n                      value={endereco}\n                      onChange={(e) => setEndereco(e.target.value)}\n\n                      \n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      id=\"bairro\"\n                      name=\"bairro\"\n                      label=\"Bairro\"\n                      fullWidth\n                      value={bairro}\n                      onChange={(e) => setBairro(e.target.value)}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      required\n                      id=\"numero\"\n                      name=\"numero\"\n                      label=\"numero\"\n                      value={numero}\n                      \n                      fullWidth\n                      onChange={(e) => setNumero(e.target.value)}\n                     \n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      id=\"uf\"\n                      name=\"uf\"\n                      label=\"UF\"\n                      value={uf}\n                      fullWidth\n                      onChange={(e) => setUf(e.target.value)}\n                      autoComplete=\"shipping address-line1\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={6}>\n                    <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n                      Salvar\n                    </Button>\n\n                    <Button\n                      className={classes.pets}\n                      onClick={showPetCadastro}\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      <Pets />\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Paper>\n            </Grid>\n          </form>\n        </Container>\n      </main>\n      <ToastContainer />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  stateReducer: state.animals,\n  stateReducerUser: state.user,\n  stateAll: state,\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      creatPessoa,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatch)(Animais);\n","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/index.js",["254","255","256","257","258"],"import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Menu from '../../components/menu';\nimport Chart from './chart';\nimport Orders from './orders';\nimport Deposits from './deposits';\nimport axios from \"axios\";\nimport { useSelector } from 'react-redux'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n}));\n\nconst API = axios.create({\n    baseURL: \"http://localhost:5001\",\n  });\nconst host = \"http://localhost:5001/\";\n\nconst getToday = async ()=>{\n    const { data } =  await API.get(`${host}animaistoday`).then((r) => r).catch(e => e);\n    return data\n};\nexport default function Dashboard() {\n    \n    const permissao = useSelector(state => state.user.userInfo.user)\n     console.log('permissao',permissao)\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Menu msg=\"Dashboard\" />\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n\n                    <Grid container spacing={3}>\n                        {/* Chart */}\n                        <Grid item xs={12} md={8} lg={9}>\n                            <Paper className={fixedHeightPaper}>\n                                <Chart />\n                            </Paper>\n                        </Grid>\n                        {/* Recent Deposits */}\n                        <Grid item xs={12} md={4} lg={3}>\n                            <Paper className={fixedHeightPaper}>\n                                <Deposits />\n                            </Paper>\n                        </Grid>\n                        {/* Recent Orders */}\n                        <Grid item xs={12}>\n                            <Paper className={classes.paper}>\n                                <Orders />\n                            </Paper>\n                        </Grid>\n                    </Grid>\n\n                </Container>\n            </main>\n        </div >\n    );\n}","/home/andrews_souza/Projects/vet-app/src/pages/singin/index.js",["259","260"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { userAuthenticate, stateReducer } from '../../redux/actions';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst SignIn = ({userAuthenticate, stateReducer}) => {\n    const classes = useStyles();\n    const initialState = {\n        email: \"\",\n        password: \"\",\n    };\n\n    const { success, loading } = stateReducer;\n    const history = useHistory();\n    const [values, setValues] = useState(initialState);\n\n    const onSubmit = async (ev) => {\n        ev.preventDefault();\n        await userAuthenticate(values)\n    };\n\n    useEffect(() => {\n        if (success) {\n            const timer = setTimeout(() => {\n                history.push('/dashboard')\n            }, 1000);\n            return () => clearTimeout(timer);\n        }\n    }, [success]);\n\n    const onChange = (ev) => {\n        const { name, value } = ev.target;\n        setValues({ ...values, [name]: value });\n    };\n\n    return (\n\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign in\n                    </Typography>\n                    <form className={classes.form} noValidate onSubmit={onSubmit}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                            onChange={onChange}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            onChange={onChange}\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                        <FormControlLabel\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\n                            label=\"Remember me\"\n                        />\n                       \n                            <Button\n\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                type=\"submit\"\n                            >\n                                {loading ? ('loading'): ('SingIn')}\n                            </Button>\n                        \n                    </form>\n                </div>\n                <ToastContainer/>\n            </Container>\n            \n       \n    );\n};\n\nconst mapStateToProps = state => ({\n    stateReducer: state.user\n})\n\nconst mapDispatch = dispatch => bindActionCreators({\n    userAuthenticate\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatch)(SignIn);","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/index.js",["261","262","263","264"],"import React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Menu from \"../../components/menu\";\nimport Button from \"@material-ui/core/Button\";\nimport { Divider } from \"@material-ui/core\";\nimport { Typography } from \"@material-ui/core\";\nimport CardAnimal from \"./cardAnimal\";\nimport { fetchAnimals } from \"../../redux/actions\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Search from \"@material-ui/icons/Search\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputMask from \"react-input-mask\";\nimport axios from \"axios\";\n\nconst API = axios.create({\n  baseURL: \"http://localhost:5001\",\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n    marginTop: 64\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 300,\n  },\n  hr: {\n    marginTop: \"60px\",\n    border: \"1px solid \",\n  },\n  title: {\n    fontSize: \"30px\",\n    fontFamily: \"Patua One\",\n    position: \"absolute\",\n    marginTop: \"10px\",\n  },\n  divCard: {\n    display: \"flex\",\n    overflow: \"scroll\",\n    flexDirection: \"row\",\n    flexWrap: \"nowrap\",\n    padding: theme.spacing(2),\n    marginTop: 20\n  },\n  findCpf: {\n    width: \"20px\",\n    height: \"40px\",\n    marginTop: \"30px\",\n  },\n  wrapper: {\n    display: \"flex\",\n    marginLeft: 280,\n    marginTop: 15\n  },\n}));\n\nconst Atendimento = ({ fetchAnimals, stateReducer }) => {\n\n  useEffect(async () => {\n    await fetchAnimals();\n  }, []);\n\n  const host = \"http://localhost:5001/\";\n  \n  \n  const [fetchAnimaisPessoas, setFetchAnimais] = useState();\n  const [modal, showModal] = useState(false);\n  const [animaisArray, setAnimaisArray] = useState([])\n  \n\n  const fetchAnimalsByPessoa =  (data) => {\n    const cpf = data;\n    const animais =  API.post(`${host}pessoas/fetch`, { cpf }).then((r) => r);\n    return animais;\n  };\n\n  \n  const setterAnimais= (animais) =>{\n    setAnimaisArray(animais)\n    showModal(true)\n  };\n\n  const onSubmit = async (ev) => {\n    ev.preventDefault();\n    const { data } = await fetchAnimalsByPessoa(fetchAnimaisPessoas);\n    setterAnimais(data.animais)\n  };\n  \n  \n  const classes = useStyles();\n\n  return (\n    <form onSubmit={onSubmit} >\n      <div className={classes.root}>\n        <CssBaseline />\n        <Menu msg=\"Atendimento\" />\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <Typography className={classes.title}>Buscar Animais</Typography>\n            <Divider className={classes.hr} light=\"true\" />\n            <Grid item sm={12} className={classes.wrapper}>\n              <Grid container spacing={6}>\n                <Grid item xs={6} sm={6}>\n                  <InputMask\n                    mask=\"999.999.999-99\"\n                    maskChar=\" \"\n                    value={fetchAnimaisPessoas}\n                    onChange={(e) => setFetchAnimais(e.target.value)}\n                    id=\"cpf\"\n                    name=\"cpf\"\n                  >\n                    {() => (\n                      <TextField\n                        fullWidth\n                        className={classes.inputText}\n                        label=\"Buscar por CPF\"\n                        required\n                        name=\"cpf\"\n                      />\n                    )}\n                  </InputMask>\n                </Grid>\n\n                <Button\n                  variant=\"contained\"\n                  type=\"submit\"\n                  color=\"primary\"\n                  className={classes.findCpf}\n                >\n                  <Search />\n                </Button>\n              </Grid>\n            </Grid>\n           \n            {modal ? <Paper className={classes.divCard}> {animaisArray.map((el) => <CardAnimal data={el}></CardAnimal>) }</Paper> : null }\n\n            \n          </Container>\n        </main>\n      </div>\n    </form>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  stateReducer: state.animals,\n  stateReducerUser: state.user,\n  stateAll: state,\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      fetchAnimals,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatch)(Atendimento);\n","/home/andrews_souza/Projects/vet-app/src/pages/usuarios/index.js",["265","266","267","268","269","270"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Menu from \"../../components/menu\";\nimport InputMask from \"react-input-mask\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from 'react-router-dom'\nimport { ToastContainer,toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { createUser, stateReducer, stateAll } from \"../../redux/actions\";\nimport Permissao from './Permissao'\nimport { useSelector } from 'react-redux'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 350,\n  },\n}));\n\nconst CreatedUser = ({ createUser, stateReducer, stateAll }) => {\n\n  const permissao = useSelector(state => state.user.userInfo.user)\n  const { funcao } = permissao\n  \n  const history = useHistory();\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const { success, loading } = stateReducer;\n  const [values, setValues] = useState();\n\n  const goToDashboard = ()=>{\n    history.push(\"/dashboard\");\n  }\n  const onChange = (ev) => {\n    const { name, value } = ev.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const onSubmit = async (ev) => {\n    ev.preventDefault();\n    createUser(values);\n    \n    if (success) {\n      const timer = setTimeout(() => {\n        history.push(\"/dashboard\");\n      }, 10);\n      return () => clearTimeout(timer);\n    }\n  };\n\n\n\n  return (\n    funcao === 'Administrativo' ?\n  <form onSubmit={onSubmit}>\n    <div className={classes.root}>\n      <CssBaseline />\n      <Menu msg=\"Usuarios\" />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid item sm={10}>\n            <Paper className={fixedHeightPaper}>\n              <Grid container spacing={4}>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    id=\"nome\"\n                    name=\"nome\"\n                    label=\"Nome\"\n                    fullWidth\n                    autoComplete=\"shipping address-line1\"\n                    onChange={onChange}\n                  />\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={3}>\n                <Grid item xs={12} sm={6}>\n                  <InputMask\n                    mask=\"999.999.999-99\"\n                    maskChar=\" \"\n                    onChange={onChange}\n                    id=\"cpf\"\n                    name=\"cpf\"\n                  >\n                    {() => (\n                      <TextField\n                        fullWidth\n                        className={classes.inputText}\n                        label=\"CPF\"\n                        required\n                        name=\"cpf\"\n                      />\n                    )}\n                  </InputMask>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <InputMask\n                    mask=\"(99) - 9 9999-9999\"\n                    maskChar=\" \"\n                    onChange={onChange}\n                    id=\"celular\"\n                    name=\"telefone\"\n                  >\n                    {() => (\n                      <TextField\n                        fullWidth\n                        className={classes.inputText}\n                        label=\"Celular\"\n                        name=\"telefone\"\n                      />\n                    )}\n                  </InputMask>\n                </Grid>\n              </Grid>\n              <Grid container spacing={3}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    required\n                    id=\"crmv\"\n                    name=\"crmv\"\n                    label=\"Crmv\"\n                    fullWidth\n                    onChange={onChange}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <FormControl fullWidth className={classes.formControl}>\n                    <InputLabel item>Função</InputLabel>\n                    <Select name=\"funcao\" onChange={onChange} native>\n                      <option aria-label=\"None\" value=\"\" />\n                      <option value={\"Administrativo\"}>Administrativo</option>\n                      <option value={\"Médico\"}>Médico</option>\n                      <option value={\"Recepcionista\"}>Recepcionista</option>\n                    </Select>\n                  </FormControl>\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={3}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    required\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"Email\"\n                    fullWidth\n                    autoComplete=\"shipping address-line1\"\n                    onChange={onChange}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    type=\"password\"\n                    required\n                    id=\"senha\"\n                    name=\"senha\"\n                    label=\"Senha\"\n                    fullWidth\n                    autoComplete=\"shipping address-line1\"\n                    onChange={onChange}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                    {loading ? \"loading\" : \"Salvar\"}\n                  </Button>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n        </Container>\n      </main>\n    </div>\n    <ToastContainer />\n  </form> : <Permissao/>\n   \n   );\n};\n\nconst mapStateToProps = (state) => ({\n  stateReducer: state.user,\n  stateAll: state,\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      createUser,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatch)(CreatedUser);\n","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/index.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/index.js",["271","272"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Menu from '../../../components/menu';\nimport Button from '@material-ui/core/Button';\nimport { useHistory, useParams } from 'react-router-dom';\nimport TableProtuario from './ProtuarioTable'\nimport NoteAdd from '@material-ui/icons/NoteAdd';\nimport AdicionarProntuario from './AdicionarPronturio'\nimport { fetchAnimals } from '../../../redux/actions'\nimport EditProntuario from './EditProntuario'\nimport { useSelector } from 'react-redux';\nimport Permissao from '../permissaoMed';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 80,\n\n    },\n    gridContainer: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        padding: \"18px\"\n    },\n    table: {\n        marginTop: '10px',\n        padding: theme.spacing(2),\n        minHeight: 100\n    },\n    createProntuario: {\n        marginTop: '40px'\n    }\n}));\n\nconst Prontuario = ({ animalReducer, fetchAnimals }) => {\n\n    useEffect(async () => {\n        await fetchAnimals();\n      }, []);\n      const permissao = useSelector(state => state.user.userInfo.user)\n      const { funcao } = permissao\n    const history = useHistory();\n    const { id } = useParams();\n    const [createProntuarioButton, setCreateProntuario] = useState(false)\n\n    const [viewProntuario, setViewProntuario] = useState(false)\n    \n    const createProntuario = () => {\n        setViewProntuario(false)\n        setCreateProntuario(true)\n    }\n\n    const onClick = (ev) => {\n        const types = ev.target.innerText\n        switch (types) {\n\n            case 'PRONTUARIO': {\n                return history.push(`/pets/prontuario/${id}`)\n            }\n\n            case 'TRATAMENTOS': {\n                return history.push(`/pets/tratamentos/${id}`)\n            }\n\n            case 'ALERGIAS': {\n                return history.push(`/pets/alergias/${id}`)\n            }\n\n            case 'MEDICAMENTO': {\n                return history.push(`/pets/medicamentos/${id}`)\n            }\n\n            case 'VACINAS': {\n                return history.push(`/pets/vacinas/${id}`)\n            }\n\n            case 'VERMIFUGO': {\n                return history.push(`/pets/vermifugos/${id}`)\n            }\n\n            case 'DADOS': {\n                return history.push(`/pets/dados/${id}`)\n            }\n\n            default:\n                return history.push('/dashboard')\n        }\n    }\n\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n        funcao === 'Administrativo' || funcao === 'Médico' ?\n        <div className={classes.root}>\n            <CssBaseline />\n            <Menu msg=\"Atendimento\" />\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <Grid item sm={12}>\n                        <Paper className={fixedHeightPaper}>\n                            <Grid container spacing={3} className={classes.gridContainer}>\n                                <Button variant=\"contained\" onClick={onClick} >Prontuario</Button>\n                                <Button variant=\"outlined\" onClick={onClick} >Tratamentos</Button>\n                                <Button variant=\"outlined\" onClick={onClick} >Alergias</Button>\n                                <Button variant=\"outlined\" onClick={onClick} >Medicamento</Button>\n                                <Button variant=\"outlined\" onClick={onClick} >Vacinas</Button>\n                                <Button variant=\"outlined\" onClick={onClick} >Vermifugo</Button>\n                                <Button variant=\"outlined\" onClick={onClick} >Dados</Button>\n                            </Grid>\n                        </Paper>\n\n                        \n                        <Button className={classes.createProntuario} variant=\"contained\" onClick={createProntuario} type=\"submit\" color=\"primary\">\n                            <NoteAdd />\n                        </Button>\n\n                        {\n                            viewProntuario && viewProntuario !== false ?\n\n                                <Paper className={classes.table} >\n                                    {\n                                        <EditProntuario data={viewProntuario}/>\n                                    }\n                                </Paper> :\n                                <Paper className={classes.table} >\n                                    {\n                                        createProntuarioButton && createProntuarioButton === true ? <AdicionarProntuario /> : <TableProtuario viewProntuario={setViewProntuario} data={id} />\n                                    }\n                                </Paper>\n                        }\n\n                    </Grid>\n\n                    <Box pt={4}>\n                        {/* <Footer /> */}\n                    </Box>\n                </Container>\n            </main>\n        </div>:<Permissao/>\n    );\n};\n\n\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    fetchAnimals\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(Prontuario)","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/index.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/dados/index.js",["273"],"import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Menu from \"../../../components/menu\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\nimport Permissao from '../permissaoMed';\n\nimport EditDados from \"./EditDados\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 80,\n  },\n  aaa: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: \"18px\",\n  },\n  table: {\n    marginTop: \"10px\",\n    padding: theme.spacing(2),\n    minHeight: 100,\n  },\n  createTratamento: {\n    marginTop: \"40px\",\n  },\n}));\n\nconst Prontuario = () => {\n  const history = useHistory();\n  const { id } = useParams();\n  const permissao = useSelector(state => state.user.userInfo.user)\n  const { funcao } = permissao\n  const onClick = (ev) => {\n    const types = ev.target.innerText;\n    switch (types) {\n      case \"PRONTUARIO\": {\n        return history.push(`/pets/prontuario/${id}`);\n      }\n\n      case \"TRATAMENTOS\": {\n        return history.push(`/pets/tratamentos/${id}`);\n      }\n\n      case \"ALERGIAS\": {\n        return history.push(`/pets/alergias/${id}`);\n      }\n\n      case \"MEDICAMENTO\": {\n        return history.push(`/pets/medicamentos/${id}`);\n      }\n\n      case \"VACINAS\": {\n        return history.push(`/pets/vacinas/${id}`);\n      }\n\n      case \"VERMIFUGO\": {\n        return history.push(`/pets/vermifugos/${id}`);\n      }\n\n      case \"DADOS\": {\n        return history.push(`/pets/dados/${id}`);\n      }\n\n      default:\n        return history.push(\"/dashboard\");\n    }\n  };\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  \n  return (\n    funcao === 'Administrativo' || funcao === 'Médico' ?\n    <div className={classes.root}>\n      <CssBaseline />\n      <Menu msg=\"Vermifugos\" />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid item sm={12}>\n            <Paper className={fixedHeightPaper}>\n              <Grid container spacing={3} className={classes.aaa}>\n                <Button variant=\"outlined\" onClick={onClick}>\n                  Prontuario\n                </Button>\n                <Button variant=\"outlined\" onClick={onClick}>\n                  Tratamentos\n                </Button>\n                <Button variant=\"outlined\" onClick={onClick}>\n                  Alergias\n                </Button>\n                <Button variant=\"outlined\" onClick={onClick}>\n                  Medicamento\n                </Button>\n                <Button variant=\"outlined\" onClick={onClick}>\n                  Vacinas\n                </Button>\n                <Button variant=\"outlined\" onClick={onClick}>\n                  Vermifugo\n                </Button>\n                <Button variant=\"contained\" onClick={onClick}>\n                  Dados\n                </Button>\n              </Grid>\n            </Paper>\n           \n              <Paper className={classes.table}>\n                <EditDados  data={id}/>\n              </Paper>\n            \n          </Grid>\n\n          <Box pt={4}>{/* <Footer /> */}</Box>\n        </Container>\n      </main>\n    </div>:<Permissao/>\n  );\n};\n\nexport default Prontuario;\n","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/index.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/index.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/index.js",[],"/home/andrews_souza/Projects/vet-app/src/components/menu.js",[],"/home/andrews_souza/Projects/vet-app/src/redux/constants/index.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/dashboard/chart.js",["274","275","276","277","278"],"import React, { useEffect, useState } from \"react\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Label,\n  ResponsiveContainer,\n} from \"recharts\";\nimport axios from \"axios\";\nimport { getHours } from 'date-fns'\n\nconst Chart = () => {\n  const theme = useTheme();\n  const [dataGrafico, setData] = useState([])\n  const [numberAtendidos, setNumberAtendidos] = useState(0)\n\n  const [modal, setshowmodal] = useState(false)\n\n  const API = axios.create({\n    baseURL: \"http://localhost:5001\",\n  });\n  const host = \"http://localhost:5001/\";\n  const createData= (time, amount)=> {\n    return { time, amount };\n  }\n  const getToday = async () => {\n    const { data } = await API.get(`${host}animaistoday`)\n      .then((r) => r)\n      .catch((e) => e);\n    return data;\n  };\n  let count = 0 \n  const dataAraay = []\n\n  useEffect(async()=>{\n    const response = await getToday()\n    response.forEach(element => {\n        count++\n        const horas = getHours(new Date(element.createdAt))\n        dataAraay.push({time: horas, amount:count})\n    });\n    setshowmodal(true)\n    setData(dataAraay)\n},[])\n\n  return (\n    <React.Fragment>\n        {   \n            modal ?\n             <ResponsiveContainer>\n            <LineChart\n              data={dataGrafico}\n              margin={{\n                top: 16,\n                right: 16,\n                bottom: 0,\n                left: 24,\n              }}\n            >\n              <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n              <YAxis stroke={theme.palette.text.secondary}>\n                <Label\n                  angle={270}\n                  position=\"left\"\n                  style={{ textAnchor: \"middle\", fill: theme.palette.text.primary }}\n                >\n                  Hoje\n                </Label>\n              </YAxis>\n              <Line\n                type=\"monotone\"\n                dataKey=\"amount\"\n                stroke={theme.palette.primary.main}\n                dot={false}\n              />\n            </LineChart>\n          </ResponsiveContainer> \n          : null\n        }\n      \n\n    </React.Fragment>\n  );\n};\n\nexport default Chart;\n","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/orders.js",["279","280","281","282"],"import React, { useEffect, useState } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst Orders = ({ data })=> {\n\n    const API = axios.create({\n        baseURL: \"http://localhost:5001\",\n      });\n    const host = \"http://localhost:5001/\";\n    \n    const getToday = async ()=>{\n        const { data } =  await API.get(`${host}animaistoday`).then((r) => r).catch(e => e);\n        return data\n    };\n    const classes = useStyles();\n    const [animais, setAnimais ] = useState();\n    const [showModal, setShowModal] = useState(false)\n\n    useEffect(async()=>{\n        \n        const response = await getToday()\n        setAnimais(response)\n        setShowModal(true)\n    },[])\n\n    return (\n        <>\n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Nome</TableCell>\n                        <TableCell>Especie</TableCell>\n                        <TableCell>Raça</TableCell>\n                        <TableCell>Sexo</TableCell>\n                        <TableCell align=\"right\">Idade</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                   showModal ?  animais.map((row) => (\n                        <TableRow >\n                            <TableCell>{row.nome}</TableCell>\n                            <TableCell>{row.especie}</TableCell>\n                            <TableCell>{row.raca}</TableCell>\n                            <TableCell>{row.sexo}</TableCell>\n                            <TableCell align=\"right\">{row.idade}</TableCell>\n                        </TableRow>\n                    ))\n                    : null\n                    }\n                </TableBody>\n            </Table>\n            \n        </>\n    );\n}\nexport default Orders;","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/cardAnimal.js",["283","284","285"],"import React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { Typography } from '@material-ui/core';\nimport { Card, CardActions, CardContent } from '@material-ui/core';\nimport Prontuario from './prontuario';\n\nconst useStyles = makeStyles((theme) => ({\n    Card: {\n        width: '220px',\n        margin: 8\n    }\n}));\n\nconst bull = (\n    <Box\n        component=\"span\"\n        sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\n    >\n        \n    </Box>\n);\nconst CardAnimal = ({ data }) => {\n    \n    const history = useHistory()\n    const { nome, idade, raca, especie, sexo, pelagem, temperamento, peso, _id:id  } = data;\n    \n    const onClick = () => {\n        history.push(`pets/prontuario/${id}`)\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.Card}>\n            <CardContent>\n                <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                    {especie}\n                </Typography>\n                <Typography variant=\"h5\" component=\"div\">\n                    {nome}\n                </Typography>\n\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                    Raça: {raca}\n                </Typography>\n\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                    Idade: {idade}\n                </Typography>\n\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                    Sexo: {sexo}\n                </Typography>\n\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                    Peso: {peso}\n                </Typography>\n\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                    Temperamento: {temperamento}\n                </Typography>\n\n            </CardContent>\n            <CardActions>\n                <Button size=\"small\" onClick={onClick}>Prontuário</Button>\n            </CardActions>\n        </Card>\n    )\n};\n\nexport default CardAnimal;","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/deposits.js",["286","287","288","289","290","291","292"],"import React, { useEffect, useState } from 'react';\nimport { format,moment, formatDistance, formatRelative, subDays } from 'date-fns'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport axios from \"axios\";\n\n\nconst useStyles = makeStyles({\n    depositContext: {\n        flex: 1,\n    },\n});\n\nconst dataFormat =  format( new Date (), 'yyyy-MM-dd')\n\nconst Deposits = ()=> {\n    const classes = useStyles();\n    \n    const API = axios.create({\n        baseURL: \"http://localhost:5001\",\n      });\n    const host = \"http://localhost:5001/\";\n    \n    const getToday = async ()=>{\n        const { data } =  await API.get(`${host}animaistoday`).then((r) => r).catch(e => e);\n        return data\n    };\n    const [numberAtendidos, setNumberAtendidos] = useState(0)\n    \n    useEffect(async()=>{\n        const response = await getToday()\n        setNumberAtendidos(response.length)\n    },[])\n    return (\n        <React.Fragment>\n            <Typography component=\"p\" variant=\"h4\">\n                {numberAtendidos}\n            </Typography>\n            <div>\n                <p> Atendidos Hoje </p>\n                {dataFormat}\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default Deposits;","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/vacinasTable.js",["293","294","295","296","297","298"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/EditVacinas.js",["299"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/adicionarVacinas.js",["300","301","302","303","304"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/EdittTratamento.js",["305"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/TratamentoTable.js",["306","307","308","309","310","311"],"import React, {useEffect, useState} from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Visibility from '@material-ui/icons/Visibility'\nimport Button from '@material-ui/core/Button';\nimport { fetchAnimals } from '../../../redux/actions'\nimport { useHistory } from 'react-router-dom';\nimport NoteAdd from '@material-ui/icons/NoteAdd';\n\nconst useStyles = makeStyles((theme) => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst ProntuarioTable = ({ fetchAnimals, data, animalReducer, viewTratamento }) => {\n    \n    useEffect(async()=>{\n        await fetchAnimals()\n    },[])\n    const history = useHistory()\n    const animal = animalReducer.animals\n    const redenrTable = animal.filter(el => el._id === data)\n    const classes = useStyles();\n    const showView = e => {\n        viewTratamento(e)\n    } \n    return (\n        <>\n            \n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Data</TableCell>\n                        <TableCell>Tratamento</TableCell>\n                        <TableCell>Veterinário</TableCell>\n                        <TableCell></TableCell>\n                        \n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {redenrTable[0].tratamentos.map((row) => (\n                        <TableRow key={row._id}>\n                            <TableCell>{row.data}</TableCell>\n                            <TableCell>{row.tratamento}</TableCell>\n                            <TableCell>{row.veterinario}</TableCell>\n                            <TableCell>\n                               <Button onClick={()=> showView(row)} > <Visibility /> </Button>\n                            </TableCell>\n                            \n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            \n        </>\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    fetchAnimals\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(ProntuarioTable)","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/cadastrarTratamento.js",["312"],"/home/andrews_souza/Projects/vet-app/src/redux/actions/index.js",[],"/home/andrews_souza/Projects/vet-app/src/components/itensMenu.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/EditVermifugo.js",["313"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/TableVermifugo.js",["314","315","316","317","318","319"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/adicionarVermufugos.js",["320","321"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/EditMedimento.js",["322"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/tableMedicamento.js",["323","324","325","326","327","328"],"import React, {useEffect, useState} from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Visibility from '@material-ui/icons/Visibility'\nimport Button from '@material-ui/core/Button';\nimport { fetchAnimals } from '../../../redux/actions'\nimport { useHistory } from 'react-router-dom';\nimport NoteAdd from '@material-ui/icons/NoteAdd';\n\nconst useStyles = makeStyles((theme) => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst ProntuarioTable = ({ fetchAnimals, data, animalReducer, viewTratamento }) => {\n    \n    useEffect(async()=>{\n        await fetchAnimals()\n    },[])\n    const history = useHistory()\n    const animal = animalReducer.animals\n    const redenrTable = animal.filter(el => el._id === data);\n    \n  \n    const classes = useStyles();\n    const showView = e => {\n        viewTratamento(e)\n    } \n    return (\n        <>\n            \n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Data</TableCell>\n                        <TableCell>Medicamentos</TableCell>\n                        <TableCell>Veterinário</TableCell>\n                        <TableCell></TableCell>\n                        \n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {redenrTable[0].medicamentos.map((row) => (\n                        <TableRow key={row._id}>\n                            <TableCell>{row.data}</TableCell>\n                            <TableCell>{row.medicamento}</TableCell>\n                            <TableCell>{row.veterinario}</TableCell>\n                            <TableCell>\n                               <Button onClick={()=> showView(row)} > <Visibility /> </Button>\n                            </TableCell>\n                            \n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            \n        </>\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    fetchAnimals\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(ProntuarioTable)","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/dados/EditDados.js",["329","330","331","332","333","334"],"import React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { updatedVermifugos, fetchAnimals } from \"../../../redux/actions\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  table: {\n    marginTop: \"80px\",\n    padding: theme.spacing(2),\n    minHeight: 100,\n  },\n  divider: {\n    border: \"solid 1px\",\n    marginTop: \"10px\",\n  },\n  salvar: {\n    margin: \"10px\",\n  },\n  grids: {\n    paddingTop: \"10px\",\n  },\n}));\n\nconst EditProntuario = ({\n  updatedVermifugos,\n  userReducer,\n  fetchAnimals,\n  animalReducer,\n}) => {\n  const { id } = useParams();\n  useEffect(async () => {\n    await fetchAnimals();\n  }, []);\n\n  const animal = animalReducer.animals;\n  const redenrTable = animal.filter((el) => el._id === id);\n  const veterinario = userReducer.user.nome;\n\n  const [nome, setNome] = useState(redenrTable[0].nome || \"\");\n  const [especie, setEspecie] = useState(redenrTable[0].especie || \"\");\n  const [raca, setRaca] = useState(redenrTable[0].raca || \"\");\n  const [cpf, setCpf] = useState(redenrTable[0].cpf || \"\");\n  const [idade, setIdade] = useState(redenrTable[0].idade || \"\");\n  const [sexo, setSexo] = useState(redenrTable[0].sexo || \"\");\n  const [pelagem, setPelagem] = useState(redenrTable[0].pelagem || \"\");\n  const [temperamento, setTemperamento] = useState(\n    redenrTable[0].temperamento || \"\"\n  );\n  const [peso, setPeso] = useState(redenrTable[0].peso || \"\");\n    \n \n  const history = useHistory();\n\n  const onSubmit = async (ev) => {\n    ev.preventDefault();\n    updatedVermifugos({\n      \n      idAnimal: id,\n      veterinario,\n      data: Date.now(),\n      idDovermifugo: id._id,\n    });\n\n    const timer = setTimeout(() => {\n      history.push(\"/dashboard\");\n    }, 1000);\n    return () => clearTimeout(timer);\n  };\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Paper className={classes.table}>\n      <form onSubmit={onSubmit}>\n        <h1>Dados</h1>\n        <Divider className={classes.divider} />\n        <Grid item sm={12} className={classes.grids}>\n          <Grid container spacing={6}>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"Tratramento\"\n                name=\"nome\"\n                label=\"Nome\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                value={nome}\n                onChange={(e) => setNome(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"especie\"\n                label=\"Especie\"\n                type=\"text\"\n                value={especie}        \n                variant=\"outlined\"\n                fullWidth\n                onChange={(e) => setEspecie(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"especie\"\n                label=\"Raça\"\n                type=\"text\"\n                value={raca}        \n                variant=\"outlined\"\n                fullWidth\n                onChange={(e) => setRaca(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"especie\"\n                label=\"CPF do Dono\"\n                type=\"text\"\n                value={cpf}        \n                variant=\"outlined\"\n                fullWidth\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"especie\"\n                label=\"Idade\"\n                type=\"text\"\n                value={idade}        \n                variant=\"outlined\"\n                fullWidth\n                onChange={(e) => setIdade(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"especie\"\n                label=\"Sexo\"\n                type=\"text\"\n                value={sexo}        \n                variant=\"outlined\"\n                fullWidth\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"especie\"\n                label=\"Pelagem\"\n                type=\"text\"\n                value={pelagem}        \n                variant=\"outlined\"\n                fullWidth\n                onChange={(e) => setPelagem(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"especie\"\n                label=\"Temperamento\"\n                type=\"text\"\n                value={temperamento}        \n                variant=\"outlined\"\n                fullWidth\n                onChange={(e) => setTemperamento(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"especie\"\n                label=\"Peso\"\n                type=\"text\"\n                value={peso}        \n                variant=\"outlined\"\n                fullWidth\n                onChange={(e) => setPeso(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          \n        </Grid>\n      </form>\n      <ToastContainer />\n    </Paper>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  animalReducer: state.animals,\n  userReducer: state.user,\n  stateAll: state,\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      updatedVermifugos,\n      fetchAnimals,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatch)(EditProntuario);\n","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/adicionarMedicamento.js",["335"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/AdicionarPronturio.js",["336","337"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/ProtuarioTable.js",["338","339","340","341","342"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/EditProntuario.js",["343"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/tableAlergia.js",["344","345","346","347","348","349"],"import React, {useEffect, useState} from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Visibility from '@material-ui/icons/Visibility'\nimport Button from '@material-ui/core/Button';\nimport { fetchAnimals } from '../../../redux/actions'\nimport { useHistory } from 'react-router-dom';\nimport NoteAdd from '@material-ui/icons/NoteAdd';\n\nconst useStyles = makeStyles((theme) => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst ProntuarioTable = ({ fetchAnimals, data, animalReducer, viewTratamento }) => {\n    \n    useEffect(async()=>{\n        await fetchAnimals()\n    },[])\n    const history = useHistory()\n    const animal = animalReducer.animals\n    const redenrTable = animal.filter(el => el._id === data);\n    \n    const classes = useStyles();\n    const showView = e => {\n        viewTratamento(e)\n    } \n    return (\n        <>\n            \n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Data</TableCell>\n                        <TableCell>Alergias</TableCell>\n                        <TableCell>Veterinário</TableCell>\n                        <TableCell></TableCell>\n                        \n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {redenrTable[0].alergias.map((row) => (\n                        <TableRow key={row._id}>\n                            <TableCell>{row.data}</TableCell>\n                            <TableCell>{row.alergias}</TableCell>\n                            <TableCell>{row.veterinario}</TableCell>\n                            <TableCell>\n                               <Button onClick={()=> showView(row)} > <Visibility /> </Button>\n                            </TableCell>\n                            \n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            \n        </>\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    fetchAnimals\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(ProntuarioTable)","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/editAlergia.js",["350"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/adicionarAlergias.js",["351"],"/home/andrews_souza/Projects/vet-app/src/components/AdmRoute.js",["352"],"import { Route, Redirect } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { toast ,ToastContainer } from \"react-toastify\";\n\nconst PrivateRoute = ({ children, ...rest }) => {\n  \n  const permissao = useSelector(state => state.user);\n  const { funcao } = permissao.userLog.user\n  console.log('bateu na private')\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => {\n        \n        if (funcao !== 'Administrativo'  ) {\n          \n          return children\n        }\n\n        return (\n        toast.warning(\"Voce nao possui permissão \"),\n          <Link\n            to={{\n              pathname: '/dashboard'\n            \n            }}\n          />\n        )\n      }}\n      \n    >\n      \n    <ToastContainer></ToastContainer>\n    </Route>\n  )\n}\n\nexport default PrivateRoute","/home/andrews_souza/Projects/vet-app/src/pages/usuarios/Permissao.js",["353"],"import React from \"react\";\nimport {  Redirect } from 'react-router-dom'\nimport { ToastContainer,toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n\n\nconst Permissao= ()=>{\n    return (\n        <>\n        <Redirect to=\"/dashboard\"/>\n        <ToastContainer></ToastContainer>\n        </>\n    )\n};\n\nexport default Permissao;","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/permissaoMed.js",["354"],"import React from \"react\";\nimport {  Redirect } from 'react-router-dom'\nimport { ToastContainer,toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst Permissao= ()=>{\n    return (\n        <>\n        <Redirect to=\"/dashboard\"/>\n        <ToastContainer></ToastContainer>\n        </>\n    )\n};\n\nexport default Permissao;",{"ruleId":"355","replacedBy":"356"},{"ruleId":"357","replacedBy":"358"},{"ruleId":"359","severity":1,"message":"360","line":19,"column":8,"nodeType":"361","messageId":"362","endLine":19,"endColumn":16},{"ruleId":"359","severity":1,"message":"363","line":69,"column":12,"nodeType":"361","messageId":"362","endLine":69,"endColumn":19},{"ruleId":"359","severity":1,"message":"364","line":70,"column":11,"nodeType":"361","messageId":"362","endLine":70,"endColumn":18},{"ruleId":"359","severity":1,"message":"365","line":19,"column":10,"nodeType":"361","messageId":"362","endLine":19,"endColumn":22},{"ruleId":"366","severity":1,"message":"367","line":97,"column":9,"nodeType":"368","messageId":"369","endLine":97,"endColumn":11},{"ruleId":"366","severity":1,"message":"370","line":98,"column":17,"nodeType":"368","messageId":"369","endLine":98,"endColumn":19},{"ruleId":"366","severity":1,"message":"367","line":99,"column":7,"nodeType":"368","messageId":"369","endLine":99,"endColumn":9},{"ruleId":"366","severity":1,"message":"367","line":100,"column":7,"nodeType":"368","messageId":"369","endLine":100,"endColumn":9},{"ruleId":"366","severity":1,"message":"367","line":101,"column":7,"nodeType":"368","messageId":"369","endLine":101,"endColumn":9},{"ruleId":"366","severity":1,"message":"367","line":102,"column":7,"nodeType":"368","messageId":"369","endLine":102,"endColumn":9},{"ruleId":"366","severity":1,"message":"367","line":103,"column":7,"nodeType":"368","messageId":"369","endLine":103,"endColumn":9},{"ruleId":"366","severity":1,"message":"367","line":104,"column":7,"nodeType":"368","messageId":"369","endLine":104,"endColumn":9},{"ruleId":"366","severity":1,"message":"367","line":105,"column":7,"nodeType":"368","messageId":"369","endLine":105,"endColumn":9},{"ruleId":"366","severity":1,"message":"367","line":106,"column":7,"nodeType":"368","messageId":"369","endLine":106,"endColumn":9},{"ruleId":"366","severity":1,"message":"367","line":107,"column":7,"nodeType":"368","messageId":"369","endLine":107,"endColumn":9},{"ruleId":"366","severity":1,"message":"367","line":108,"column":7,"nodeType":"368","messageId":"369","endLine":108,"endColumn":9},{"ruleId":"366","severity":1,"message":"367","line":115,"column":11,"nodeType":"368","messageId":"369","endLine":115,"endColumn":13},{"ruleId":"366","severity":1,"message":"367","line":115,"column":24,"nodeType":"368","messageId":"369","endLine":115,"endColumn":26},{"ruleId":"366","severity":1,"message":"370","line":117,"column":11,"nodeType":"368","messageId":"369","endLine":117,"endColumn":13},{"ruleId":"366","severity":1,"message":"367","line":123,"column":10,"nodeType":"368","messageId":"369","endLine":123,"endColumn":12},{"ruleId":"366","severity":1,"message":"367","line":123,"column":23,"nodeType":"368","messageId":"369","endLine":123,"endColumn":25},{"ruleId":"366","severity":1,"message":"370","line":125,"column":10,"nodeType":"368","messageId":"369","endLine":125,"endColumn":12},{"ruleId":"371","severity":1,"message":"372","line":149,"column":13,"nodeType":"373","endLine":161,"endColumn":4},{"ruleId":"371","severity":1,"message":"374","line":151,"column":21,"nodeType":"375","endLine":151,"endColumn":49},{"ruleId":"371","severity":1,"message":"372","line":163,"column":13,"nodeType":"373","endLine":177,"endColumn":4},{"ruleId":"371","severity":1,"message":"376","line":166,"column":21,"nodeType":"375","endLine":166,"endColumn":54},{"ruleId":"366","severity":1,"message":"367","line":167,"column":30,"nodeType":"368","messageId":"369","endLine":167,"endColumn":32},{"ruleId":"377","severity":1,"message":"378","line":258,"column":23,"nodeType":"379","messageId":"380","endLine":258,"endColumn":65},{"ruleId":"377","severity":1,"message":"378","line":272,"column":23,"nodeType":"379","messageId":"380","endLine":272,"endColumn":68},{"ruleId":"359","severity":1,"message":"381","line":1,"column":17,"nodeType":"361","messageId":"362","endLine":1,"endColumn":26},{"ruleId":"359","severity":1,"message":"382","line":1,"column":28,"nodeType":"361","messageId":"362","endLine":1,"endColumn":36},{"ruleId":"359","severity":1,"message":"383","line":5,"column":8,"nodeType":"361","messageId":"362","endLine":5,"endColumn":11},{"ruleId":"359","severity":1,"message":"384","line":8,"column":8,"nodeType":"361","messageId":"362","endLine":8,"endColumn":17},{"ruleId":"359","severity":1,"message":"385","line":54,"column":7,"nodeType":"361","messageId":"362","endLine":54,"endColumn":15},{"ruleId":"359","severity":1,"message":"386","line":18,"column":28,"nodeType":"361","messageId":"362","endLine":18,"endColumn":40},{"ruleId":"371","severity":1,"message":"387","line":63,"column":8,"nodeType":"388","endLine":63,"endColumn":17,"suggestions":"389"},{"ruleId":"359","severity":1,"message":"390","line":2,"column":8,"nodeType":"361","messageId":"362","endLine":2,"endColumn":12},{"ruleId":"359","severity":1,"message":"383","line":5,"column":8,"nodeType":"361","messageId":"362","endLine":5,"endColumn":11},{"ruleId":"371","severity":1,"message":"372","line":89,"column":13,"nodeType":"373","endLine":91,"endColumn":4},{"ruleId":"371","severity":1,"message":"391","line":91,"column":6,"nodeType":"388","endLine":91,"endColumn":8,"suggestions":"392"},{"ruleId":"359","severity":1,"message":"381","line":1,"column":27,"nodeType":"361","messageId":"362","endLine":1,"endColumn":36},{"ruleId":"359","severity":1,"message":"393","line":16,"column":10,"nodeType":"361","messageId":"362","endLine":16,"endColumn":14},{"ruleId":"359","severity":1,"message":"394","line":17,"column":25,"nodeType":"361","messageId":"362","endLine":17,"endColumn":30},{"ruleId":"359","severity":1,"message":"386","line":21,"column":22,"nodeType":"361","messageId":"362","endLine":21,"endColumn":34},{"ruleId":"359","severity":1,"message":"395","line":21,"column":36,"nodeType":"361","messageId":"362","endLine":21,"endColumn":44},{"ruleId":"359","severity":1,"message":"396","line":70,"column":9,"nodeType":"361","messageId":"362","endLine":70,"endColumn":22},{"ruleId":"371","severity":1,"message":"372","line":70,"column":15,"nodeType":"373","endLine":72,"endColumn":8},{"ruleId":"371","severity":1,"message":"391","line":72,"column":10,"nodeType":"388","endLine":72,"endColumn":12,"suggestions":"397"},{"ruleId":"359","severity":1,"message":"382","line":1,"column":17,"nodeType":"361","messageId":"362","endLine":1,"endColumn":25},{"ruleId":"359","severity":1,"message":"398","line":17,"column":10,"nodeType":"361","messageId":"362","endLine":17,"endColumn":25},{"ruleId":"359","severity":1,"message":"399","line":17,"column":27,"nodeType":"361","messageId":"362","endLine":17,"endColumn":45},{"ruleId":"359","severity":1,"message":"400","line":25,"column":9,"nodeType":"361","messageId":"362","endLine":25,"endColumn":19},{"ruleId":"371","severity":1,"message":"372","line":37,"column":13,"nodeType":"373","endLine":46,"endColumn":2},{"ruleId":"371","severity":1,"message":"401","line":46,"column":3,"nodeType":"388","endLine":46,"endColumn":5,"suggestions":"402"},{"ruleId":"359","severity":1,"message":"393","line":2,"column":8,"nodeType":"361","messageId":"362","endLine":2,"endColumn":12},{"ruleId":"359","severity":1,"message":"403","line":28,"column":11,"nodeType":"361","messageId":"362","endLine":28,"endColumn":18},{"ruleId":"371","severity":1,"message":"372","line":32,"column":15,"nodeType":"373","endLine":37,"endColumn":6},{"ruleId":"371","severity":1,"message":"404","line":37,"column":7,"nodeType":"388","endLine":37,"endColumn":9,"suggestions":"405"},{"ruleId":"359","severity":1,"message":"406","line":8,"column":8,"nodeType":"361","messageId":"362","endLine":8,"endColumn":18},{"ruleId":"359","severity":1,"message":"407","line":17,"column":7,"nodeType":"361","messageId":"362","endLine":17,"endColumn":11},{"ruleId":"359","severity":1,"message":"408","line":28,"column":47,"nodeType":"361","messageId":"362","endLine":28,"endColumn":54},{"ruleId":"359","severity":1,"message":"409","line":2,"column":17,"nodeType":"361","messageId":"362","endLine":2,"endColumn":23},{"ruleId":"359","severity":1,"message":"410","line":2,"column":25,"nodeType":"361","messageId":"362","endLine":2,"endColumn":39},{"ruleId":"359","severity":1,"message":"411","line":2,"column":41,"nodeType":"361","messageId":"362","endLine":2,"endColumn":55},{"ruleId":"359","severity":1,"message":"412","line":2,"column":57,"nodeType":"361","messageId":"362","endLine":2,"endColumn":64},{"ruleId":"359","severity":1,"message":"403","line":17,"column":11,"nodeType":"361","messageId":"362","endLine":17,"endColumn":18},{"ruleId":"371","severity":1,"message":"372","line":30,"column":15,"nodeType":"373","endLine":33,"endColumn":6},{"ruleId":"371","severity":1,"message":"404","line":33,"column":7,"nodeType":"388","endLine":33,"endColumn":9,"suggestions":"413"},{"ruleId":"359","severity":1,"message":"382","line":1,"column":27,"nodeType":"361","messageId":"362","endLine":1,"endColumn":35},{"ruleId":"359","severity":1,"message":"414","line":14,"column":8,"nodeType":"361","messageId":"362","endLine":14,"endColumn":15},{"ruleId":"371","severity":1,"message":"372","line":26,"column":15,"nodeType":"373","endLine":28,"endColumn":6},{"ruleId":"371","severity":1,"message":"391","line":28,"column":7,"nodeType":"388","endLine":28,"endColumn":9,"suggestions":"415"},{"ruleId":"359","severity":1,"message":"364","line":29,"column":11,"nodeType":"361","messageId":"362","endLine":29,"endColumn":18},{"ruleId":"359","severity":1,"message":"403","line":33,"column":11,"nodeType":"361","messageId":"362","endLine":33,"endColumn":18},{"ruleId":"359","severity":1,"message":"416","line":71,"column":9,"nodeType":"361","messageId":"362","endLine":71,"endColumn":25},{"ruleId":"359","severity":1,"message":"417","line":16,"column":8,"nodeType":"361","messageId":"362","endLine":16,"endColumn":16},{"ruleId":"359","severity":1,"message":"418","line":17,"column":8,"nodeType":"361","messageId":"362","endLine":17,"endColumn":18},{"ruleId":"359","severity":1,"message":"419","line":18,"column":8,"nodeType":"361","messageId":"362","endLine":18,"endColumn":20},{"ruleId":"359","severity":1,"message":"420","line":19,"column":8,"nodeType":"361","messageId":"362","endLine":19,"endColumn":28},{"ruleId":"359","severity":1,"message":"416","line":84,"column":9,"nodeType":"361","messageId":"362","endLine":84,"endColumn":25},{"ruleId":"359","severity":1,"message":"416","line":71,"column":9,"nodeType":"361","messageId":"362","endLine":71,"endColumn":25},{"ruleId":"359","severity":1,"message":"382","line":1,"column":27,"nodeType":"361","messageId":"362","endLine":1,"endColumn":35},{"ruleId":"359","severity":1,"message":"414","line":14,"column":8,"nodeType":"361","messageId":"362","endLine":14,"endColumn":15},{"ruleId":"371","severity":1,"message":"372","line":24,"column":15,"nodeType":"373","endLine":26,"endColumn":6},{"ruleId":"371","severity":1,"message":"391","line":26,"column":7,"nodeType":"388","endLine":26,"endColumn":9,"suggestions":"421"},{"ruleId":"359","severity":1,"message":"364","line":27,"column":11,"nodeType":"361","messageId":"362","endLine":27,"endColumn":18},{"ruleId":"359","severity":1,"message":"403","line":30,"column":11,"nodeType":"361","messageId":"362","endLine":30,"endColumn":18},{"ruleId":"359","severity":1,"message":"416","line":73,"column":11,"nodeType":"361","messageId":"362","endLine":73,"endColumn":27},{"ruleId":"359","severity":1,"message":"416","line":71,"column":9,"nodeType":"361","messageId":"362","endLine":71,"endColumn":25},{"ruleId":"359","severity":1,"message":"382","line":1,"column":27,"nodeType":"361","messageId":"362","endLine":1,"endColumn":35},{"ruleId":"359","severity":1,"message":"414","line":14,"column":8,"nodeType":"361","messageId":"362","endLine":14,"endColumn":15},{"ruleId":"371","severity":1,"message":"372","line":26,"column":15,"nodeType":"373","endLine":28,"endColumn":6},{"ruleId":"371","severity":1,"message":"391","line":28,"column":7,"nodeType":"388","endLine":28,"endColumn":9,"suggestions":"422"},{"ruleId":"359","severity":1,"message":"364","line":29,"column":11,"nodeType":"361","messageId":"362","endLine":29,"endColumn":18},{"ruleId":"359","severity":1,"message":"403","line":33,"column":11,"nodeType":"361","messageId":"362","endLine":33,"endColumn":18},{"ruleId":"359","severity":1,"message":"423","line":59,"column":9,"nodeType":"361","messageId":"362","endLine":59,"endColumn":17},{"ruleId":"359","severity":1,"message":"416","line":83,"column":9,"nodeType":"361","messageId":"362","endLine":83,"endColumn":25},{"ruleId":"359","severity":1,"message":"416","line":71,"column":9,"nodeType":"361","messageId":"362","endLine":71,"endColumn":25},{"ruleId":"359","severity":1,"message":"382","line":1,"column":27,"nodeType":"361","messageId":"362","endLine":1,"endColumn":35},{"ruleId":"359","severity":1,"message":"414","line":14,"column":8,"nodeType":"361","messageId":"362","endLine":14,"endColumn":15},{"ruleId":"371","severity":1,"message":"372","line":24,"column":15,"nodeType":"373","endLine":26,"endColumn":6},{"ruleId":"371","severity":1,"message":"391","line":26,"column":7,"nodeType":"388","endLine":26,"endColumn":9,"suggestions":"424"},{"ruleId":"359","severity":1,"message":"364","line":27,"column":11,"nodeType":"361","messageId":"362","endLine":27,"endColumn":18},{"ruleId":"359","severity":1,"message":"403","line":32,"column":11,"nodeType":"361","messageId":"362","endLine":32,"endColumn":18},{"ruleId":"359","severity":1,"message":"425","line":9,"column":8,"nodeType":"361","messageId":"362","endLine":9,"endColumn":14},{"ruleId":"371","severity":1,"message":"372","line":50,"column":13,"nodeType":"373","endLine":52,"endColumn":4},{"ruleId":"371","severity":1,"message":"391","line":52,"column":6,"nodeType":"388","endLine":52,"endColumn":8,"suggestions":"426"},{"ruleId":"359","severity":1,"message":"427","line":61,"column":15,"nodeType":"361","messageId":"362","endLine":61,"endColumn":21},{"ruleId":"359","severity":1,"message":"428","line":63,"column":16,"nodeType":"361","messageId":"362","endLine":63,"endColumn":23},{"ruleId":"359","severity":1,"message":"416","line":90,"column":9,"nodeType":"361","messageId":"362","endLine":90,"endColumn":25},{"ruleId":"359","severity":1,"message":"416","line":73,"column":11,"nodeType":"361","messageId":"362","endLine":73,"endColumn":27},{"ruleId":"359","severity":1,"message":"429","line":15,"column":10,"nodeType":"361","messageId":"362","endLine":15,"endColumn":21},{"ruleId":"359","severity":1,"message":"416","line":75,"column":11,"nodeType":"361","messageId":"362","endLine":75,"endColumn":27},{"ruleId":"359","severity":1,"message":"429","line":15,"column":10,"nodeType":"361","messageId":"362","endLine":15,"endColumn":21},{"ruleId":"359","severity":1,"message":"430","line":16,"column":7,"nodeType":"361","messageId":"362","endLine":16,"endColumn":16},{"ruleId":"371","severity":1,"message":"372","line":24,"column":15,"nodeType":"373","endLine":26,"endColumn":6},{"ruleId":"371","severity":1,"message":"391","line":26,"column":7,"nodeType":"388","endLine":26,"endColumn":9,"suggestions":"431"},{"ruleId":"359","severity":1,"message":"364","line":27,"column":11,"nodeType":"361","messageId":"362","endLine":27,"endColumn":18},{"ruleId":"359","severity":1,"message":"416","line":98,"column":11,"nodeType":"361","messageId":"362","endLine":98,"endColumn":27},{"ruleId":"359","severity":1,"message":"382","line":1,"column":27,"nodeType":"361","messageId":"362","endLine":1,"endColumn":35},{"ruleId":"359","severity":1,"message":"414","line":14,"column":8,"nodeType":"361","messageId":"362","endLine":14,"endColumn":15},{"ruleId":"371","severity":1,"message":"372","line":24,"column":15,"nodeType":"373","endLine":26,"endColumn":6},{"ruleId":"371","severity":1,"message":"391","line":26,"column":7,"nodeType":"388","endLine":26,"endColumn":9,"suggestions":"432"},{"ruleId":"359","severity":1,"message":"364","line":27,"column":11,"nodeType":"361","messageId":"362","endLine":27,"endColumn":18},{"ruleId":"359","severity":1,"message":"403","line":31,"column":11,"nodeType":"361","messageId":"362","endLine":31,"endColumn":18},{"ruleId":"359","severity":1,"message":"416","line":71,"column":9,"nodeType":"361","messageId":"362","endLine":71,"endColumn":25},{"ruleId":"359","severity":1,"message":"416","line":72,"column":11,"nodeType":"361","messageId":"362","endLine":72,"endColumn":27},{"ruleId":"359","severity":1,"message":"433","line":1,"column":17,"nodeType":"361","messageId":"362","endLine":1,"endColumn":25},{"ruleId":"359","severity":1,"message":"394","line":3,"column":25,"nodeType":"361","messageId":"362","endLine":3,"endColumn":30},{"ruleId":"359","severity":1,"message":"394","line":3,"column":25,"nodeType":"361","messageId":"362","endLine":3,"endColumn":30},"no-native-reassign",["434"],"no-negated-in-lhs",["435"],"no-unused-vars","'AdmRoute' is defined but never used.","Identifier","unusedVar","'created' is assigned a value but never used.","'history' is assigned a value but never used.","'fetchAnimals' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","Assignments to the 'cepConsumer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'cpfConsumer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useEffect' is defined but never used.","'useState' is defined but never used.","'Box' is defined but never used.","'TextField' is defined but never used.","'getToday' is assigned a value but never used.","'stateReducer' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["436"],"'clsx' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchAnimals'. Either include it or remove the dependency array. If 'fetchAnimals' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["437"],"'Link' is defined but never used.","'toast' is defined but never used.","'stateAll' is defined but never used.","'goToDashboard' is assigned a value but never used.",["438"],"'numberAtendidos' is assigned a value but never used.","'setNumberAtendidos' is assigned a value but never used.","'createData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'count', 'dataAraay', and 'getToday'. Either include them or remove the dependency array.",["439"],"'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getToday'. Either include it or remove the dependency array.",["440"],"'Prontuario' is defined but never used.","'bull' is assigned a value but never used.","'pelagem' is assigned a value but never used.","'moment' is defined but never used.","'formatDistance' is defined but never used.","'formatRelative' is defined but never used.","'subDays' is defined but never used.",["441"],"'NoteAdd' is defined but never used.",["442"],"'fixedHeightPaper' is assigned a value but never used.","'Checkbox' is defined but never used.","'InputLabel' is defined but never used.","'CheckBoxIcon' is defined but never used.","'CheckBoxOutlineBlank' is defined but never used.",["443"],["444"],"'onChange' is assigned a value but never used.",["445"],"'Button' is defined but never used.",["446"],"'setCpf' is assigned a value but never used.","'setSexo' is assigned a value but never used.","'useDispatch' is defined but never used.","'useStyles' is assigned a value but never used.",["447"],["448"],"'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},{"desc":"451","fix":"453"},{"desc":"454","fix":"455"},{"desc":"456","fix":"457"},{"desc":"456","fix":"458"},{"desc":"451","fix":"459"},{"desc":"451","fix":"460"},{"desc":"451","fix":"461"},{"desc":"451","fix":"462"},{"desc":"451","fix":"463"},{"desc":"451","fix":"464"},{"desc":"451","fix":"465"},"Update the dependencies array to be: [history, success]",{"range":"466","text":"467"},"Update the dependencies array to be: [fetchAnimals]",{"range":"468","text":"469"},{"range":"470","text":"469"},"Update the dependencies array to be: [count, dataAraay, getToday]",{"range":"471","text":"472"},"Update the dependencies array to be: [getToday]",{"range":"473","text":"474"},{"range":"475","text":"474"},{"range":"476","text":"469"},{"range":"477","text":"469"},{"range":"478","text":"469"},{"range":"479","text":"469"},{"range":"480","text":"469"},{"range":"481","text":"469"},{"range":"482","text":"469"},[1975,1984],"[history, success]",[2278,2280],"[fetchAnimals]",[2117,2119],[1139,1141],"[count, dataAraay, getToday]",[1129,1131],"[getToday]",[941,943],[1085,1087],[953,955],[1085,1087],[953,955],[1309,1311],[953,955],[953,955]]